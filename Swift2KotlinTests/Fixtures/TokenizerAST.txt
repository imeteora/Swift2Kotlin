(source_file
  (protocol "Tokenizer"<Self : Tokenizer> type='Tokenizer.Protocol' access=internal @_fixed_layout
    (func_decl "tokenize(_:)" type='<Self : Tokenizer> (Self) -> (String) -> [Token]' interface type='<τ_0_0 where τ_0_0 : Tokenizer> (τ_0_0) -> (String) -> Array<Token>' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "s" type='String'))
      (result
        (type_array
          (type_ident
            (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7))))))
  (class_decl "TokenizerImpl" type='TokenizerImpl.Type' access=internal @_fixed_layout inherits: Tokenizer
    (func_decl "tokenize(_:)" type='(TokenizerImpl) -> (String) -> [Token]' interface type='(TokenizerImpl) -> (String) -> Array<Token>' access=internal
      (conformance main.(file).Tokenizer.tokenize@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:2:10)
      (parameter_list
        (parameter "self" type='TokenizerImpl'))
      (parameter_list
        (parameter "s" type='String'))
      (result
        (type_array
          (type_ident
            (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7))))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='[Token]' 'tokens')
          (call_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 - line:7:30] nothrow  arg_labels=
            (constructor_ref_call_expr type='() -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 - line:7:28] nothrow
              (declref_expr implicit type='(Array<Token>.Type) -> () -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 - line:7:28] decl=Swift.(file).Array.init() [with Token] function_ref=single specialized=no)
              (type_expr type='[Token].Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 - line:7:28] typerepr='[Token]'))
            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:29 - line:7:30])))

        (var_decl "tokens" type='[Token]' access=private storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='[String.CharacterView._Element]' 'characters')
          (call_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:48] nothrow  arg_labels=_:
            (dot_syntax_call_expr type='((String.CharacterView._Element) throws -> String.CharacterView._Element) throws -> [String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:39] nothrow
              (declref_expr type='(String.CharacterView) -> ((String.CharacterView._Element) throws -> String.CharacterView._Element) throws -> [String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 - line:8:39] decl=Swift.(file).Collection.map [with String.CharacterView[String.CharacterView: Collection module Swift], String.CharacterView.Index[String.CharacterView.Index: Comparable module Swift], String.CharacterView.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, DefaultBidirectionalIndices<String.CharacterView>[DefaultBidirectionalIndices<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView.IndexDistance, Int, Int, Int, Int._DisabledRangeIndex, String.CharacterView, Character> (<Elements : BidirectionalIndexable> DefaultBidirectionalIndices<Elements>: IndexableBase module Swift), DefaultBidirectionalIndices<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView.IndexDistance, Int, Int, Int, Int._DisabledRangeIndex, String.CharacterView, Character> (<Elements : BidirectionalIndexable> DefaultBidirectionalIndices<Elements>: Sequence module Swift)], String.CharacterView.Index[String.CharacterView.Index: Comparable module Swift], IndexingIterator<DefaultBidirectionalIndices<String.CharacterView>>[IndexingIterator<DefaultBidirectionalIndices<String.CharacterView>>: specialize <DefaultBidirectionalIndices<String.CharacterView>, String.CharacterView.Index, DefaultBidirectionalIndices<String.CharacterView>, String.CharacterView.Index> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String.CharacterView.Index, DefaultBidirectionalIndices<String.CharacterView>, String.CharacterView.Index, String.CharacterView.Iterator[IndexingIterator<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String.CharacterView._Element, String.CharacterView.SubSequence[String.CharacterView: IndexableBase module Swift, String.CharacterView: Sequence module Swift], String.CharacterView.Index[String.CharacterView.Index: Comparable module Swift], String.CharacterView.Iterator[IndexingIterator<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character, String.CharacterView, Character, Character, String.CharacterView._Element] function_ref=single specialized=no)
              (member_ref_expr type='String.CharacterView' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:28] decl=Swift.(file).String.characters
                (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:26] decl=main.(file).TokenizerImpl.func decl.s@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:6:21 function_ref=unapplied specialized=no)))
            (paren_expr type='(String.CharacterView._Element) throws -> String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 - line:8:48] trailing-closure
              (function_conversion_expr implicit type='(String.CharacterView._Element) throws -> String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 - line:8:48]
                (closure_expr type='(String.CharacterView._Element) -> String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 - line:8:48] discriminator=0 single-expression
                  (parameter_list
                    (parameter "$0" type='(String.CharacterView._Element)'))
                  (declref_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:45 - line:8:45] decl=main.(file).TokenizerImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 function_ref=unapplied specialized=no))))))

        (var_decl "characters" type='[String.CharacterView._Element]' access=private let storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='Int' 'index')
          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] nothrow  arg_labels=_builtinIntegerLiteral:
            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] nothrow
              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] typerepr='Int'))
            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] names=_builtinIntegerLiteral
              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] value=0))))

        (var_decl "index" type='Int' access=private storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='Int' 'line')
          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 - line:10:20] nothrow  arg_labels=_builtinIntegerLiteral:
            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 - line:10:20] nothrow
              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 - line:10:20] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 - line:10:20] typerepr='Int'))
            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 - line:10:20] names=_builtinIntegerLiteral
              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:20 - line:10:20] value=1))))

        (var_decl "line" type='Int' access=private storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='Int' 'nesting')
          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 - line:11:23] nothrow  arg_labels=_builtinIntegerLiteral:
            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 - line:11:23] nothrow
              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 - line:11:23] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 - line:11:23] typerepr='Int'))
            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 - line:11:23] names=_builtinIntegerLiteral
              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:23 - line:11:23] value=0))))

        (var_decl "nesting" type='Int' access=private storage_kind=stored)

        (func_decl "getChar()" type='() -> Character?' access=private captures=(index, characters, line, nesting)
          (parameter_list)
          (result
)
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 - line:13:35] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 - line:13:35] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:22 - line:13:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 - line:13:35] nothrow
                    (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:22 - line:13:22] decl=Swift.(file).< function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 - line:13:35]
                      (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 - line:13:16]
                        (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:16 - line:13:16] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                      (member_ref_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:24 - line:13:35] decl=Swift.(file).Array.count [with String.CharacterView._Element]
                        (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:24 - line:13:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (pattern_binding_decl
                  (pattern_named type='String.CharacterView._Element' 'char')
                  (subscript_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:28 - line:14:44]  decl=Swift.(file).Array.subscript [with String.CharacterView._Element]  arg_labels=_:
                    (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:28 - line:14:28] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)
                    (paren_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:38 - line:14:44]
                      (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:39 - line:14:39]
                        (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:39 - line:14:39] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no)))))

                (var_decl "char" type='String.CharacterView._Element' access=private let storage_kind=stored)

                (if_stmt
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 - line:15:28] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 - line:15:28] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 - line:15:25] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 - line:15:28] nothrow
                        (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 - line:15:25] nothrow
                          (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 - line:15:25] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                          (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:25 - line:15:25] typerepr='Character'))
                        (tuple_expr implicit type='(String.CharacterView._Element, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 - line:15:28]
                          (declref_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:20 - line:15:20] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:21 function_ref=unapplied specialized=no)
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:15:28 - line:15:28] encoding=utf8 value="\n" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                    (tuple_expr implicit type='()'))
                  (brace_stmt
                    (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:21 - line:16:29] nothrow
                      (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:26 - line:16:26] decl=Swift.(file).+= function_ref=unapplied specialized=no)
                      (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:21 - line:16:29]
                        (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:21 - line:16:21]
                          (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:21 - line:16:21] decl=main.(file).TokenizerImpl.func decl.line@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:13 function_ref=unapplied specialized=no))
                        (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 - line:16:29] nothrow  arg_labels=_builtinIntegerLiteral:
                          (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 - line:16:29] nothrow
                            (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 - line:16:29] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                            (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 - line:16:29] typerepr='Int'))
                          (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 - line:16:29] names=_builtinIntegerLiteral
                            (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:16:29 - line:16:29] value=1)))))
                    (pattern_binding_decl
                      (pattern_named type='Int' 'i')
                      (binary_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:29 - line:17:35] nothrow
                        (declref_expr type='(Int, Int) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:34 - line:17:34] decl=Swift.(file).+ function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:29 - line:17:35]
                          (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:29 - line:17:29]
                            (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:29 - line:17:29] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 - line:17:35] nothrow  arg_labels=_builtinIntegerLiteral:
                            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 - line:17:35] nothrow
                              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 - line:17:35] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 - line:17:35] typerepr='Int'))
                            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 - line:17:35] names=_builtinIntegerLiteral
                              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:35 - line:17:35] value=1))))))

                    (var_decl "i" type='Int' access=private storage_kind=stored)

                    (while_stmt
                      (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 - line:18:44] nothrow  arg_labels=
                        (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 - line:18:44] nothrow
                          (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 - line:18:41] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                          (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 - line:18:44] nothrow
                            (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 - line:18:41] nothrow
                              (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 - line:18:41] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                              (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:41 - line:18:41] typerepr='Character'))
                            (tuple_expr implicit type='(String.CharacterView._Element, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 - line:18:44]
                              (subscript_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 - line:18:39]  decl=Swift.(file).Array.subscript [with String.CharacterView._Element]  arg_labels=_:
                                (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:27 - line:18:27] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)
                                (paren_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:37 - line:18:39]
                                  (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:38 - line:18:38]
                                    (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:38 - line:18:38] decl=main.(file).TokenizerImpl.func decl.func decl.i@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:25 function_ref=unapplied specialized=no))))
                              (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:44 - line:18:44] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                        (tuple_expr implicit type='()'))
                      (brace_stmt
                        (assign_expr
                          (declref_expr type='@lvalue Int' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:25 - line:19:25] decl=main.(file).TokenizerImpl.func decl.func decl.i@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:25 function_ref=unapplied specialized=no)
                          (binary_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:29 - line:19:31] nothrow
                            (declref_expr type='(Int, Int) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:30 - line:19:30] decl=Swift.(file).+ function_ref=unapplied specialized=no)
                            (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:29 - line:19:31]
                              (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:29 - line:19:29]
                                (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:29 - line:19:29] decl=main.(file).TokenizerImpl.func decl.func decl.i@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:25 function_ref=unapplied specialized=no))
                              (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 - line:19:31] nothrow  arg_labels=_builtinIntegerLiteral:
                                (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 - line:19:31] nothrow
                                  (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 - line:19:31] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                                  (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 - line:19:31] typerepr='Int'))
                                (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 - line:19:31] names=_builtinIntegerLiteral
                                  (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:31 - line:19:31] value=1))))))))
                    (if_stmt
                      (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 - line:21:41] nothrow  arg_labels=
                        (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 - line:21:41] nothrow
                          (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 - line:21:38] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                          (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 - line:21:41] nothrow
                            (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 - line:21:38] nothrow
                              (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 - line:21:38] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                              (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:38 - line:21:38] typerepr='Character'))
                            (tuple_expr implicit type='(String.CharacterView._Element, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 - line:21:41]
                              (subscript_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 - line:21:36]  decl=Swift.(file).Array.subscript [with String.CharacterView._Element]  arg_labels=_:
                                (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:24 - line:21:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)
                                (paren_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:34 - line:21:36]
                                  (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:35 - line:21:35]
                                    (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:35 - line:21:35] decl=main.(file).TokenizerImpl.func decl.func decl.i@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:25 function_ref=unapplied specialized=no))))
                              (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:21:41 - line:21:41] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                        (tuple_expr implicit type='()'))
                      (brace_stmt
                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:25 - line:22:101] nothrow  arg_labels=_:
                          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:25 - line:22:25] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
                          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:30 - line:22:101] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
                            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:30 - line:22:101]
                              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 - line:22:31]
                                (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 - line:22:31]
                                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:31 - line:22:31] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                  (paren_expr type='(Double)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:33 - line:22:69]
                                    (binary_expr type='Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:68] nothrow
                                      (declref_expr type='(Double, Double) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:53 - line:22:53] decl=Swift.(file).- function_ref=unapplied specialized=no)
                                      (tuple_expr implicit type='(Double, Double)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:68]
                                        (binary_expr type='Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:50] nothrow
                                          (declref_expr type='(Double, Double) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:49 - line:22:49] decl=Swift.(file)./ function_ref=unapplied specialized=no)
                                          (tuple_expr implicit type='(Double, Double)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:50]
                                            (call_expr type='Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:48] nothrow  arg_labels=_:
                                              (constructor_ref_call_expr type='(Int) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:34] nothrow
                                                (declref_expr implicit type='(Double.Type) -> (Int) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:34] decl=Swift.(file).Double.init function_ref=single specialized=no)
                                                (type_expr type='Double.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:34 - line:22:34] typerepr='Double'))
                                              (paren_expr type='(Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:40 - line:22:48]
                                                (binary_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:41 - line:22:43] nothrow
                                                  (declref_expr type='(Int, Int) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:42 - line:22:42] decl=Swift.(file).- function_ref=unapplied specialized=no)
                                                  (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:41 - line:22:43]
                                                    (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:41 - line:22:41]
                                                      (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:41 - line:22:41] decl=main.(file).TokenizerImpl.func decl.func decl.i@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:25 function_ref=unapplied specialized=no))
                                                    (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:43 - line:22:43]
                                                      (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:43 - line:22:43] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))))))
                                            (call_expr implicit type='Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 - line:22:50] nothrow  arg_labels=_builtinFloatLiteral:
                                              (constructor_ref_call_expr implicit type='(FPIEEE80) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 - line:22:50] nothrow
                                                (declref_expr implicit type='(Double.Type) -> (FPIEEE80) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 - line:22:50] decl=Swift.(file).Double.init(_builtinFloatLiteral:) function_ref=single specialized=no)
                                                (type_expr implicit type='Double.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 - line:22:50] typerepr='Double'))
                                              (tuple_expr implicit type='(_builtinFloatLiteral: FPIEEE80)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 - line:22:50] names=_builtinFloatLiteral
                                                (float_literal_expr type='FPIEEE80' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:50 - line:22:50] value=2.0)))))
                                        (call_expr type='Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 - line:22:68] nothrow  arg_labels=_:
                                          (constructor_ref_call_expr type='(Int) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 - line:22:54] nothrow
                                            (declref_expr implicit type='(Double.Type) -> (Int) -> Double' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 - line:22:54] decl=Swift.(file).Double.init function_ref=single specialized=no)
                                            (type_expr type='Double.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:54 - line:22:54] typerepr='Double'))
                                          (paren_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:61 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:60 - line:22:68]
                                            (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:61 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:61 - line:22:61]
                                              (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:61 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:61 - line:22:61] decl=main.(file).TokenizerImpl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:13 function_ref=unapplied specialized=no)))))))
                                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:70 - line:22:70] encoding=utf8 value=":" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                  (paren_expr type='(@lvalue Int)' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:73 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:72 - line:22:80]
                                    (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:73 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:73 - line:22:73] decl=main.(file).TokenizerImpl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:13 function_ref=unapplied specialized=no))
                                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:81 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:81 - line:22:81] encoding=utf8 value=":" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                  (paren_expr type='(Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:85 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:83 - line:22:91]
                                    (binary_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:85 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:84 - line:22:86] nothrow
                                      (declref_expr type='(Int, Int) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:85 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:85 - line:22:85] decl=Swift.(file).- function_ref=unapplied specialized=no)
                                      (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:84 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:84 - line:22:86]
                                        (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:84 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:84 - line:22:84]
                                          (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:84 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:84 - line:22:84] decl=main.(file).TokenizerImpl.func decl.func decl.i@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:25 function_ref=unapplied specialized=no))
                                        (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:86 - line:22:86]
                                          (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:86 - line:22:86] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no)))))
                                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:92 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:92 - line:22:92] encoding=utf8 value=":" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                  (paren_expr type='(@lvalue Int)' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:95 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:94 - line:22:99]
                                    (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:95 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:95 - line:22:95] decl=main.(file).TokenizerImpl.func decl.line@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:13 function_ref=unapplied specialized=no))
                                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:100 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:22:100 - line:22:100] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
                    (if_stmt
                      (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 - line:24:35] nothrow  arg_labels=
                        (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 - line:24:35] nothrow
                          (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:32 - line:24:32] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                          (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 - line:24:35] nothrow
                            (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:32 - line:24:32] decl=Swift.(file).== function_ref=unapplied specialized=no)
                            (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 - line:24:35]
                              (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 - line:24:24]
                                (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:24 - line:24:24] decl=main.(file).TokenizerImpl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:13 function_ref=unapplied specialized=no))
                              (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 - line:24:35] nothrow  arg_labels=_builtinIntegerLiteral:
                                (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 - line:24:35] nothrow
                                  (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 - line:24:35] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                                  (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 - line:24:35] typerepr='Int'))
                                (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 - line:24:35] names=_builtinIntegerLiteral
                                  (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:35 - line:24:35] value=0))))))
                        (tuple_expr implicit type='()'))
                      (brace_stmt
                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:25 - line:25:56] nothrow  arg_labels=_:
                          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:25 - line:25:25] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
                          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:30 - line:25:56] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
                            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:30 - line:25:56]
                              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 - line:25:31]
                                (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 - line:25:31]
                                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:31 - line:25:31] encoding=utf8 value="Back to zero at " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                  (paren_expr type='(@lvalue Int)' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:49 - line:25:54]
                                    (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:50 - line:25:50] decl=main.(file).TokenizerImpl.func decl.line@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:13 function_ref=unapplied specialized=no))
                                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:55 - line:25:55] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))))
                (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:17 - line:28:26] nothrow
                  (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:23 - line:28:23] decl=Swift.(file).+= function_ref=unapplied specialized=no)
                  (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:17 - line:28:26]
                    (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:17 - line:28:17]
                      (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:17 - line:28:17] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                    (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 - line:28:26] nothrow  arg_labels=_builtinIntegerLiteral:
                      (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 - line:28:26] nothrow
                        (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 - line:28:26] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                        (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 - line:28:26] typerepr='Int'))
                      (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 - line:28:26] names=_builtinIntegerLiteral
                        (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:26 - line:28:26] value=1)))))
                (return_stmt
                  (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:29:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:29:24 - line:29:24]
                    (declref_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:29:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:29:24 - line:29:24] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:21 function_ref=unapplied specialized=no))))
              (brace_stmt
                (return_stmt
                  (call_expr implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 - line:30:30] nothrow  arg_labels=nilLiteral:
                    (constructor_ref_call_expr implicit type='(()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 - line:30:30] nothrow
                      (declref_expr implicit type='(Optional<Character>.Type) -> (()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 - line:30:30] decl=Swift.(file).Optional.init(nilLiteral:) [with Character] function_ref=single specialized=no)
                      (type_expr implicit type='Character?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 - line:30:30] typerepr='Character?'))
                    (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 - line:30:30] names=nilLiteral
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:30:30 - line:30:30]))))))))

        (func_decl "nextChar()" type='() -> Character?' access=private captures=(index, characters)
          (parameter_list)
          (result
)
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 - line:34:35] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 - line:34:35] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:22 - line:34:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 - line:34:35] nothrow
                    (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:22 - line:34:22] decl=Swift.(file).< function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 - line:34:35]
                      (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 - line:34:16]
                        (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:16 - line:34:16] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                      (member_ref_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:24 - line:34:35] decl=Swift.(file).Array.count [with String.CharacterView._Element]
                        (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:34:24 - line:34:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (return_stmt
                  (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:24 - line:35:40]
                    (subscript_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:24 - line:35:40]  decl=Swift.(file).Array.subscript [with String.CharacterView._Element]  arg_labels=_:
                      (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:24 - line:35:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)
                      (paren_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:34 - line:35:40]
                        (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:35 - line:35:35]
                          (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:35 - line:35:35] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no)))))))
              (brace_stmt
                (return_stmt
                  (call_expr implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 - line:36:30] nothrow  arg_labels=nilLiteral:
                    (constructor_ref_call_expr implicit type='(()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 - line:36:30] nothrow
                      (declref_expr implicit type='(Optional<Character>.Type) -> (()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 - line:36:30] decl=Swift.(file).Optional.init(nilLiteral:) [with Character] function_ref=single specialized=no)
                      (type_expr implicit type='Character?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 - line:36:30] typerepr='Character?'))
                    (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 - line:36:30] names=nilLiteral
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:30 - line:36:30]))))))))

        (func_decl "skipWhiteSpace()" type='() -> Character?' access=private captures=(nextChar, getChar)
          (parameter_list)
          (result
)
          (brace_stmt
            (while_stmt
              (pattern
                (optional_some_element implicit type='Character?'
                  (pattern_let implicit type='Character'
                    (pattern_named type='Character' 'char')))
                (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:30 - line:40:39] nothrow  arg_labels=
                  (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:30 - line:40:30] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:38 - line:40:39])))
              (brace_stmt
                (guard_stmt
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 - line:41:54] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 - line:41:54] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:51 - line:41:51] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 - line:41:54] nothrow
                        (declref_expr type='(Array.Index?, Array.Index?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:51 - line:41:51] decl=Swift.(file).!= [with Array.Index[Int: Equatable module Swift]] function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(Array.Index?, Array.Index?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 - line:41:54]
                          (call_expr type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 - line:41:49] nothrow  arg_labels=of:
                            (dot_syntax_call_expr type='(Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 - line:41:35] nothrow
                              (declref_expr type='([Character]) -> (Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:35 - line:41:35] decl=Swift.(file).Collection.index(of:) [with [Character][[Character]: specialize <Character> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<Character>>[IndexingIterator<Array<Character>>: specialize <Array<Character>, Array.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character[Character: Equatable module Swift], ArraySlice<Character>[ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<Character>>[IndexingIterator<ArraySlice<Character>>: specialize <ArraySlice<Character>, ArraySlice.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character, ArraySlice<Character>, Character, Character] function_ref=single specialized=no)
                              (array_expr type='[Character]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:23 - line:41:33]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:24 - line:41:24] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:29 - line:41:29] encoding=utf8 value="\n" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
                            (tuple_expr type='(of: Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:40 - line:41:49] names=of
                              (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:45 - line:41:45] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:23 function_ref=unapplied specialized=no)))
                          (call_expr implicit type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 - line:41:54] nothrow  arg_labels=nilLiteral:
                            (constructor_ref_call_expr implicit type='(()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 - line:41:54] nothrow
                              (declref_expr implicit type='(Optional<Array.Index>.Type) -> (()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 - line:41:54] decl=Swift.(file).Optional.init(nilLiteral:) [with Array.Index] function_ref=single specialized=no)
                              (type_expr implicit type='Array.Index?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 - line:41:54] typerepr='Array.Index?'))
                            (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 - line:41:54] names=nilLiteral
                              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:54 - line:41:54]))))))
                    (tuple_expr implicit type='()'))
                  (brace_stmt
                    (return_stmt
                      (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:72 - line:41:72]
                        (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:41:72 - line:41:72] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:23 function_ref=unapplied specialized=no)))))
                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:17 - line:42:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:21 - line:42:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:21 - line:42:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:42:28 - line:42:29])))))
            (return_stmt
              (call_expr implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 - line:44:20] nothrow  arg_labels=nilLiteral:
                (constructor_ref_call_expr implicit type='(()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 - line:44:20] nothrow
                  (declref_expr implicit type='(Optional<Character>.Type) -> (()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 - line:44:20] decl=Swift.(file).Optional.init(nilLiteral:) [with Character] function_ref=single specialized=no)
                  (type_expr implicit type='Character?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 - line:44:20] typerepr='Character?'))
                (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 - line:44:20] names=nilLiteral
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:44:20 - line:44:20]))))))

        (func_decl "getUntil(_:)" type='(Character) -> String' access=private captures=(getUntil)
          (parameter_list
            (parameter "c" type='Character'))
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (return_stmt
              (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:20 - line:48:51] nothrow  arg_labels=_:
                (declref_expr type='((Character) -> Bool) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:20 - line:48:20] decl=main.(file).TokenizerImpl.func decl.getUntil(closure:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:51:14 function_ref=single specialized=no)
                (tuple_shuffle_expr implicit type='(closure: (Character) -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:28 - line:48:51] sourceIsScalar elements=[0] variadic_sources=[]
                  (paren_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:28 - line:48:51] trailing-closure
                    (closure_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:31 - line:48:51] discriminator=0 captures=(c<noescape>) single-expression
                      (parameter_list
                        (parameter "char" type='(Character)'))
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:41 - line:48:49] nothrow
                        (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:46 - line:48:46] nothrow
                          (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:46 - line:48:46] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                          (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:46 - line:48:46] typerepr='Character'))
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:41 - line:48:49]
                          (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:41 - line:48:41] decl=main.(file).TokenizerImpl.func decl.func decl.explicit closure discriminator=0.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:33 function_ref=unapplied specialized=no)
                          (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:49 - line:48:49] decl=main.(file).TokenizerImpl.func decl.func decl.c@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:25 function_ref=unapplied specialized=no))))))))))

        (func_decl "getUntil(closure:)" type='((Character) -> Bool) -> String' access=private captures=(nextChar, getChar)
          (parameter_list
            (parameter "closure" apiName=closure type='(Character) -> Bool'))
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (pattern_binding_decl
              (pattern_named type='String' 'result')
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:26 - line:52:26] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))

            (var_decl "result" type='String' access=private storage_kind=stored)

            (while_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 - line:53:39] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 - line:53:39] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 - line:53:19] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (prefix_unary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 - line:53:39] nothrow
                    (dot_syntax_call_expr implicit type='(Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 - line:53:19] nothrow
                      (declref_expr type='(Bool.Type) -> (Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 - line:53:19] decl=Swift.(file).Bool.! function_ref=unapplied specialized=no)
                      (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:19 - line:53:19] typerepr='Bool'))
                    (call_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:20 - line:53:39] nothrow  arg_labels=_:
                      (declref_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:20 - line:53:20] decl=main.(file).TokenizerImpl.func decl.func decl.closure@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:51:23 function_ref=single specialized=no)
                      (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:27 - line:53:39]
                        (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:28 - line:53:38]
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:28 - line:53:37] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:28 - line:53:28] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:36 - line:53:37])))))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 - line:54:41] nothrow  arg_labels=_:
                  (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 - line:54:24] nothrow
                    (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:24 - line:54:24] decl=Swift.(file).String.append function_ref=single specialized=no)
                    (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 - line:54:17]
                      (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 - line:54:17] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:17 function_ref=unapplied specialized=no)))
                  (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:30 - line:54:41]
                    (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:31 - line:54:40]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:31 - line:54:39] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:31 - line:54:31] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:38 - line:54:39])))))))
            (return_stmt
              (load_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:56:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:56:20 - line:56:20]
                (declref_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:56:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:56:20 - line:56:20] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:17 function_ref=unapplied specialized=no)))))

        (func_decl "getUntilBlank()" type='() -> String' access=private captures=(getUntil)
          (parameter_list)
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (return_stmt
              (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:49 - line:59:61] nothrow  arg_labels=_:
                (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:49 - line:59:49] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:14 function_ref=single specialized=no)
                (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:57 - line:59:61]
                  (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:58 - line:59:58] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))

        (func_decl "getBalanced()" type='() -> String' access=private captures=(nextChar, getChar, getUntil, getNestedBrackets)
          (parameter_list)
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 - line:62:30] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 - line:62:30] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:27 - line:62:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 - line:62:30] nothrow
                    (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:27 - line:62:27] decl=Swift.(file).== [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 - line:62:30]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 - line:62:25] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:16 - line:62:16] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:24 - line:62:25]))
                      (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:30 - line:62:30]
                        (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:30 - line:62:30] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:17 - line:63:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 - line:63:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 - line:63:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:28 - line:63:29])))
                (pattern_binding_decl
                  (pattern_named type='String' 'result')
                  (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:30 - line:64:42] nothrow  arg_labels=_:
                    (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:30 - line:64:30] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:14 function_ref=single specialized=no)
                    (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:38 - line:64:42]
                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:39 - line:64:39] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))

                (var_decl "result" type='String' access=private let storage_kind=stored)

                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:17 - line:65:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:21 - line:65:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:21 - line:65:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:28 - line:65:29])))
                (return_stmt
                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:24 - line:66:24] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:21 function_ref=unapplied specialized=no))))
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 - line:68:30] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 - line:68:30] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:27 - line:68:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 - line:68:30] nothrow
                    (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:27 - line:68:27] decl=Swift.(file).== [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 - line:68:30]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 - line:68:25] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:16 - line:68:16] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:24 - line:68:25]))
                      (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:30 - line:68:30]
                        (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:30 - line:68:30] encoding=utf8 value="[" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:69:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:69:17 - line:69:35] nothrow  arg_labels=
                  (declref_expr type='() -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:69:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:69:17 - line:69:17] decl=main.(file).TokenizerImpl.func decl.getNestedBrackets()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:14 function_ref=single specialized=no)
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:69:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:69:34 - line:69:35]))
                (return_stmt
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:70:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:70:24 - line:70:24] encoding=utf8 value="[]" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 - line:73:30] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 - line:73:30] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:27 - line:73:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 - line:73:30] nothrow
                    (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:27 - line:73:27] decl=Swift.(file).== [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 - line:73:30]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 - line:73:25] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:16 - line:73:16] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:24 - line:73:25]))
                      (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:30 - line:73:30]
                        (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:30 - line:73:30] encoding=utf8 value="\"" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:17 - line:74:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:21 - line:74:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:21 - line:74:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:74:28 - line:74:29])))
                (pattern_binding_decl
                  (pattern_named type='String' 'result')
                  (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:30 - line:75:43] nothrow  arg_labels=_:
                    (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:30 - line:75:30] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:14 function_ref=single specialized=no)
                    (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:38 - line:75:43]
                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:39 - line:75:39] encoding=utf8 value="\"" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))

                (var_decl "result" type='String' access=private let storage_kind=stored)

                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:17 - line:76:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:21 - line:76:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:21 - line:76:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:28 - line:76:29])))
                (return_stmt
                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:24 - line:77:24] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:21 function_ref=unapplied specialized=no))))
            (pattern_binding_decl
              (pattern_named type='String' 'result')
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:26 - line:79:26] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))

            (var_decl "result" type='String' access=private storage_kind=stored)

            (while_stmt
              (pattern
                (optional_some_element implicit type='Character?'
                  (pattern_let implicit type='Character'
                    (pattern_named type='Character' 'char')))
                (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:30 - line:80:39] nothrow  arg_labels=
                  (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:30 - line:80:30] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:38 - line:80:39])))
              (brace_stmt
                (if_stmt
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 - line:81:28] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 - line:81:28] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 - line:81:25] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 - line:81:28] nothrow
                        (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 - line:81:25] nothrow
                          (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 - line:81:25] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                          (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:25 - line:81:25] typerepr='Character'))
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 - line:81:28]
                          (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:20 - line:81:20] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:23 function_ref=unapplied specialized=no)
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:28 - line:81:28] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                    (tuple_expr implicit type='()'))
                  (brace_stmt
                    (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:21 - line:82:45] nothrow  arg_labels=_:
                      (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:21 - line:82:28] nothrow
                        (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:28 - line:82:28] decl=Swift.(file).String.append function_ref=single specialized=no)
                        (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:21 - line:82:21]
                          (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:21 - line:82:21] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:17 function_ref=unapplied specialized=no)))
                      (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:34 - line:82:45]
                        (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:35 - line:82:44]
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:35 - line:82:43] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:35 - line:82:35] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:42 - line:82:43])))))
                    (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 - line:83:48] nothrow  arg_labels=_:
                      (dot_syntax_call_expr type='(String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 - line:83:28] nothrow
                        (declref_expr type='(inout String) -> (String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:28 - line:83:28] decl=Swift.(file).String.append function_ref=single specialized=no)
                        (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 - line:83:21]
                          (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 - line:83:21] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:17 function_ref=unapplied specialized=no)))
                      (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:34 - line:83:48]
                        (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:35 - line:83:47] nothrow  arg_labels=_:
                          (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:35 - line:83:35] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:14 function_ref=single specialized=no)
                          (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:43 - line:83:47]
                            (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:44 - line:83:44] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                    (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:21 - line:84:45] nothrow  arg_labels=_:
                      (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:21 - line:84:28] nothrow
                        (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:28 - line:84:28] decl=Swift.(file).String.append function_ref=single specialized=no)
                        (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:21 - line:84:21]
                          (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:21 - line:84:21] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:17 function_ref=unapplied specialized=no)))
                      (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:34 - line:84:45]
                        (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:35 - line:84:44]
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:35 - line:84:43] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:35 - line:84:35] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:42 - line:84:43]))))))
                  (if_stmt
                    (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:65] nothrow  arg_labels=
                      (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:65] nothrow
                        (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 - line:85:54] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                        (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:65] nothrow
                          (dot_syntax_call_expr implicit type='(Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 - line:85:54] nothrow
                            (declref_expr type='(Bool.Type) -> (Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 - line:85:54] decl=Swift.(file).Bool.|| function_ref=unapplied specialized=no)
                            (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:54 - line:85:54] typerepr='Bool'))
                          (tuple_expr implicit type='(Bool, @autoclosure () throws -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:65]
                            (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:50] nothrow
                              (dot_syntax_call_expr implicit type='(Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:39 - line:85:39] nothrow
                                (declref_expr type='(Bool.Type) -> (Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:39 - line:85:39] decl=Swift.(file).Bool.|| function_ref=unapplied specialized=no)
                                (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:39 - line:85:39] typerepr='Bool'))
                              (tuple_expr implicit type='(Bool, @autoclosure () throws -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:50]
                                (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:35] nothrow
                                  (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:32 - line:85:32] nothrow
                                    (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:32 - line:85:32] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                                    (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:32 - line:85:32] typerepr='Character'))
                                  (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:35]
                                    (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:27 - line:85:27] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:23 function_ref=unapplied specialized=no)
                                    (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:35 - line:85:35] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
                                (autoclosure_expr implicit type='() throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:42 - line:85:50] discriminator=0 captures=(char<noescape>)

                                  (parameter_list)
                                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:42 - line:85:50] nothrow
                                    (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:47 - line:85:47] nothrow
                                      (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:47 - line:85:47] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                                      (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:47 - line:85:47] typerepr='Character'))
                                    (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:42 - line:85:50]
                                      (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:42 - line:85:42] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:23 function_ref=unapplied specialized=no)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:50 - line:85:50] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))
                            (autoclosure_expr implicit type='() throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:57 - line:85:65] discriminator=1 captures=(char<noescape>)

                              (parameter_list)
                              (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:57 - line:85:65] nothrow
                                (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:62 - line:85:62] nothrow
                                  (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:62 - line:85:62] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                                  (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:62 - line:85:62] typerepr='Character'))
                                (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:57 - line:85:65]
                                  (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:57 - line:85:57] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:23 function_ref=unapplied specialized=no)
                                  (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:65 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:65 - line:85:65] encoding=utf8 value="\n" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))))
                      (tuple_expr implicit type='()'))
                    (brace_stmt
                      (return_stmt
                        (load_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:79 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:79 - line:85:79]
                          (declref_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:79 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:79 - line:85:79] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:17 function_ref=unapplied specialized=no))))))
                (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 - line:86:41] nothrow  arg_labels=_:
                  (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 - line:86:24] nothrow
                    (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:24 - line:86:24] decl=Swift.(file).String.append function_ref=single specialized=no)
                    (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 - line:86:17]
                      (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 - line:86:17] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:17 function_ref=unapplied specialized=no)))
                  (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:30 - line:86:41]
                    (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:31 - line:86:40]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:31 - line:86:39] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:31 - line:86:31] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:38 - line:86:39])))))))
            (return_stmt
              (load_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:20 - line:88:20]
                (declref_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:20 - line:88:20] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:17 function_ref=unapplied specialized=no)))))

        (func_decl "getNestedBrackets()" type='() -> ()' access=private captures=(getChar)
          (parameter_list)
          (brace_stmt
            (pattern_binding_decl
              (pattern_named type='Int' 'nesting')
              (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 - line:92:27] nothrow  arg_labels=_builtinIntegerLiteral:
                (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 - line:92:27] nothrow
                  (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 - line:92:27] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                  (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 - line:92:27] typerepr='Int'))
                (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 - line:92:27] names=_builtinIntegerLiteral
                  (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:27 - line:92:27] value=1))))

            (var_decl "nesting" type='Int' access=private storage_kind=stored)

            (assign_expr
              (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:13 - line:93:13])
              (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:17 - line:93:25] nothrow  arg_labels=
                (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:17 - line:93:17] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:24 - line:93:25])))
            (while_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 - line:94:29] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 - line:94:29] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:27 - line:94:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 - line:94:29] nothrow
                    (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:27 - line:94:27] decl=Swift.(file).> function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 - line:94:29]
                      (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 - line:94:19]
                        (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:19 - line:94:19] decl=main.(file).TokenizerImpl.func decl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:17 function_ref=unapplied specialized=no))
                      (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 - line:94:29] nothrow  arg_labels=_builtinIntegerLiteral:
                        (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 - line:94:29] nothrow
                          (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 - line:94:29] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                          (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 - line:94:29] typerepr='Int'))
                        (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 - line:94:29] names=_builtinIntegerLiteral
                          (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:29 - line:94:29] value=0))))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (switch_stmt
                  (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:24 - line:95:33]
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:24 - line:95:32] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:24 - line:95:24] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:31 - line:95:32])))
                  (case_stmt
                    (case_label_item
                    (pattern_expr type='Character'
                      (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] nothrow  arg_labels=
                        (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] nothrow
                          (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                          (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] nothrow
                            (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                            (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22]
                              (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] encoding=utf8 value="[" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                              (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] decl=main.(file).TokenizerImpl.func decl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 function_ref=unapplied specialized=no))))
                        (tuple_expr implicit type='()'))))
                    (brace_stmt
                      (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 - line:97:32] nothrow
                        (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:29 - line:97:29] decl=Swift.(file).+= function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 - line:97:32]
                          (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 - line:97:21]
                            (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 - line:97:21] decl=main.(file).TokenizerImpl.func decl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:17 function_ref=unapplied specialized=no))
                          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 - line:97:32] nothrow  arg_labels=_builtinIntegerLiteral:
                            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 - line:97:32] nothrow
                              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 - line:97:32] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 - line:97:32] typerepr='Int'))
                            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 - line:97:32] names=_builtinIntegerLiteral
                              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 - line:97:32] value=1)))))))
                  (case_stmt
                    (case_label_item
                    (pattern_expr type='Character'
                      (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22] nothrow  arg_labels=
                        (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22] nothrow
                          (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                          (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22] nothrow
                            (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                            (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22]
                              (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22] encoding=utf8 value="]" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                              (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 - line:98:22] decl=main.(file).TokenizerImpl.func decl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:22 function_ref=unapplied specialized=no))))
                        (tuple_expr implicit type='()'))))
                    (brace_stmt
                      (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:32] nothrow
                        (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:29 - line:99:29] decl=Swift.(file).-= function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:32]
                          (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:21]
                            (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:21] decl=main.(file).TokenizerImpl.func decl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:92:17 function_ref=unapplied specialized=no))
                          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 - line:99:32] nothrow  arg_labels=_builtinIntegerLiteral:
                            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 - line:99:32] nothrow
                              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 - line:99:32] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 - line:99:32] typerepr='Int'))
                            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 - line:99:32] names=_builtinIntegerLiteral
                              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:32 - line:99:32] value=1)))))))
                  (case_stmt
                    (case_label_item
                    (pattern_any type='Character'))
                    (brace_stmt
                      (break_stmt))))))))

        (while_stmt
          (pattern
            (optional_some_element implicit type='Character?'
              (pattern_let implicit type='Character'
                (pattern_named type='Character' 'char')))
            (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:26 - line:106:41] nothrow  arg_labels=
              (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:26 - line:106:26] decl=main.(file).TokenizerImpl.func decl.skipWhiteSpace()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:39:14 function_ref=single specialized=no)
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:40 - line:106:41])))
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:38] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:38] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 - line:107:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:38] nothrow
                    (dot_syntax_call_expr implicit type='(Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 - line:107:27] nothrow
                      (declref_expr type='(Bool.Type) -> (Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 - line:107:27] decl=Swift.(file).Bool.&& function_ref=unapplied specialized=no)
                      (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:27 - line:107:27] typerepr='Bool'))
                    (tuple_expr implicit type='(Bool, @autoclosure () throws -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:38]
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:25] nothrow
                        (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:22 - line:107:22] decl=Swift.(file).== function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:25]
                          (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:16]
                            (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:16 - line:107:16] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 - line:107:25] nothrow  arg_labels=_builtinIntegerLiteral:
                            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 - line:107:25] nothrow
                              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 - line:107:25] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 - line:107:25] typerepr='Int'))
                            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 - line:107:25] names=_builtinIntegerLiteral
                              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:25 - line:107:25] value=0)))))
                      (autoclosure_expr implicit type='() throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:30 - line:107:38] discriminator=0 captures=(char<noescape>)

                        (parameter_list)
                        (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:30 - line:107:38] nothrow
                          (declref_expr type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:35 - line:107:35] decl=Swift.(file).!= [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                          (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:30 - line:107:38]
                            (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:30 - line:107:30] decl=main.(file).TokenizerImpl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:19 function_ref=unapplied specialized=no)
                            (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:107:38 - line:107:38] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:17 - line:108:70] nothrow  arg_labels=_:
                  (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:17 - line:108:17] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                  (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:27 - line:108:70] sourceIsScalar elements=[0, -3, -3] variadic_sources=[]
                    (paren_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:27 - line:108:70]
                      (autoclosure_expr implicit type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 - line:108:28] discriminator=1

                        (parameter_list)
                        (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 - line:108:28] encoding=utf8 value="AST does not start with left parenthesis" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))))
            (switch_stmt
              (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:110:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:110:20 - line:110:20] decl=main.(file).TokenizerImpl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:19 function_ref=unapplied specialized=no)
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18] encoding=utf8 value="[" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 - line:111:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:111:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:112:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:112:17 - line:112:35] nothrow  arg_labels=
                    (declref_expr type='() -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:112:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:112:17 - line:112:17] decl=main.(file).TokenizerImpl.func decl.getNestedBrackets()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:112:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:112:34 - line:112:35]))))
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 - line:113:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:17 - line:114:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:21 - line:114:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:21 - line:114:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:114:28 - line:114:29])))
                  (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:17 - line:115:28] nothrow
                    (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:25 - line:115:25] decl=Swift.(file).+= function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:17 - line:115:28]
                      (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:17 - line:115:17]
                        (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:17 - line:115:17] decl=main.(file).TokenizerImpl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:13 function_ref=unapplied specialized=no))
                      (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 - line:115:28] nothrow  arg_labels=_builtinIntegerLiteral:
                        (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 - line:115:28] nothrow
                          (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 - line:115:28] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                          (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 - line:115:28] typerepr='Int'))
                        (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 - line:115:28] names=_builtinIntegerLiteral
                          (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:115:28 - line:115:28] value=1)))))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:17 - line:116:46] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:17 - line:116:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:24 - line:116:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:17 - line:116:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:17 - line:116:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='(Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:30 - line:116:46]
                      (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:31 - line:116:37] decl=main.(file).Token.leftParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 direct_to_storage
                        (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:116:31 - line:116:31] typerepr='Token'))))))
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 - line:117:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:117:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:17 - line:118:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:21 - line:118:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:21 - line:118:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:118:28 - line:118:29])))
                  (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:17 - line:119:28] nothrow
                    (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:25 - line:119:25] decl=Swift.(file).-= function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:17 - line:119:28]
                      (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:17 - line:119:17]
                        (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:17 - line:119:17] decl=main.(file).TokenizerImpl.func decl.nesting@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:13 function_ref=unapplied specialized=no))
                      (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 - line:119:28] nothrow  arg_labels=_builtinIntegerLiteral:
                        (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 - line:119:28] nothrow
                          (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 - line:119:28] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                          (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 - line:119:28] typerepr='Int'))
                        (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 - line:119:28] names=_builtinIntegerLiteral
                          (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:119:28 - line:119:28] value=1)))))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:17 - line:120:47] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:17 - line:120:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:24 - line:120:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:17 - line:120:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:17 - line:120:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='(Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:30 - line:120:47]
                      (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:31 - line:120:37] decl=main.(file).Token.rightParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 direct_to_storage
                        (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:120:31 - line:120:31] typerepr='Token'))))))
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18] encoding=utf8 value="\"" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 - line:121:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:121:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:17 - line:122:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:21 - line:122:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:21 - line:122:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:122:28 - line:122:29])))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:17 - line:123:59] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:17 - line:123:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:24 - line:123:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:17 - line:123:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:17 - line:123:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:30 - line:123:59]
                      (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:31 - line:123:58]
                        (call_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:31 - line:123:58] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:31 - line:123:37] nothrow
                            (declref_expr type='(Token.Type) -> (String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:37 - line:123:37] decl=main.(file).Token.string@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:17 function_ref=single specialized=no)
                            (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:31 - line:123:31] typerepr='Token'))
                          (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:43 - line:123:58]
                            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:44 - line:123:57] nothrow  arg_labels=_:
                              (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:44 - line:123:44] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:14 function_ref=single specialized=no)
                              (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:52 - line:123:57]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:53 - line:123:53] encoding=utf8 value="\"" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:63 - line:123:63])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:67 - line:123:75] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:67 - line:123:67] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:123:74 - line:123:75])))))
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 - line:124:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:124:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:17 - line:125:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:21 - line:125:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:21 - line:125:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:125:28 - line:125:29])))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:17 - line:126:58] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:17 - line:126:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:24 - line:126:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:17 - line:126:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:17 - line:126:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:30 - line:126:58]
                      (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:31 - line:126:57]
                        (call_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:31 - line:126:57] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:31 - line:126:37] nothrow
                            (declref_expr type='(Token.Type) -> (String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:37 - line:126:37] decl=main.(file).Token.string@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:17 function_ref=single specialized=no)
                            (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:31 - line:126:31] typerepr='Token'))
                          (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:43 - line:126:57]
                            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:44 - line:126:56] nothrow  arg_labels=_:
                              (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:44 - line:126:44] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:14 function_ref=single specialized=no)
                              (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:52 - line:126:56]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:126:53 - line:126:53] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:17 - line:127:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:21 - line:127:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:21 - line:127:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:127:28 - line:127:29])))))
              (case_stmt
                (case_label_item
                (pattern_any type='Character'))
                (brace_stmt
                  (pattern_binding_decl
                    (pattern_named type='String' 'key')
                    (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:27 - line:131:17] nothrow  arg_labels=_:
                      (declref_expr type='((Character) -> Bool) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:27 - line:129:27] decl=main.(file).TokenizerImpl.func decl.getUntil(closure:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:51:14 function_ref=single specialized=no)
                      (tuple_shuffle_expr implicit type='(closure: (Character) -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:35 - line:131:17] sourceIsScalar elements=[0] variadic_sources=[]
                        (paren_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:35 - line:131:17] trailing-closure
                          (closure_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:38 - line:131:17] discriminator=1 single-expression
                            (parameter_list
                              (parameter "c" type='(Character)'))
                            (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:71 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:21 - line:130:74] nothrow
                              (declref_expr type='(Array.Index?, Array.Index?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:71 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:71 - line:130:71] decl=Swift.(file).!= [with Array.Index[Int: Equatable module Swift]] function_ref=unapplied specialized=no)
                              (tuple_expr implicit type='(Array.Index?, Array.Index?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:21 - line:130:74]
                                (call_expr type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:21 - line:130:69] nothrow  arg_labels=of:
                                  (dot_syntax_call_expr type='(Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:21 - line:130:58] nothrow
                                    (declref_expr type='([Character]) -> (Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:58 - line:130:58] decl=Swift.(file).Collection.index(of:) [with [Character][[Character]: specialize <Character> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<Character>>[IndexingIterator<Array<Character>>: specialize <Array<Character>, Array.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character[Character: Equatable module Swift], ArraySlice<Character>[ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<Character>>[IndexingIterator<ArraySlice<Character>>: specialize <ArraySlice<Character>, ArraySlice.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character, ArraySlice<Character>, Character, Character] function_ref=single specialized=no)
                                    (array_expr type='[Character]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:21 - line:130:56]
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:22 - line:130:22] encoding=utf8 value="=" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:27 - line:130:27] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:32 - line:130:32] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:37 - line:130:37] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:42 - line:130:42] encoding=utf8 value="\n" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:48 - line:130:48] encoding=utf8 value=":" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:53 - line:130:53] encoding=utf8 value="@" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
                                  (tuple_expr type='(of: Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:63 - line:130:69] names=of
                                    (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:68 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:68 - line:130:68] decl=main.(file).TokenizerImpl.func decl.explicit closure discriminator=1.c@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:40 function_ref=unapplied specialized=no)))
                                (call_expr implicit type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 - line:130:74] nothrow  arg_labels=nilLiteral:
                                  (constructor_ref_call_expr implicit type='(()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 - line:130:74] nothrow
                                    (declref_expr implicit type='(Optional<Array.Index>.Type) -> (()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 - line:130:74] decl=Swift.(file).Optional.init(nilLiteral:) [with Array.Index] function_ref=single specialized=no)
                                    (type_expr implicit type='Array.Index?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 - line:130:74] typerepr='Array.Index?'))
                                  (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 - line:130:74] names=nilLiteral
                                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:130:74 - line:130:74]))))))))))

                  (var_decl "key" type='String' access=private let storage_kind=stored)

                  (switch_stmt
                    (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:24 - line:132:34]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:24 - line:132:33] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:24 - line:132:24] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:132:32 - line:132:33])))
                    (case_stmt
                      (case_label_item
                      (pattern_expr type='Character'
                        (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22] nothrow  arg_labels=
                          (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22] nothrow
                            (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                            (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22] nothrow
                              (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                              (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 - line:133:22] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:133:22 function_ref=unapplied specialized=no))))
                          (tuple_expr implicit type='()'))))
                      (brace_stmt
                        (while_stmt
                          (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 - line:134:41] nothrow  arg_labels=
                            (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 - line:134:41] nothrow
                              (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:38 - line:134:38] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                              (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 - line:134:41] nothrow
                                (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:38 - line:134:38] decl=Swift.(file).!= [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                                (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 - line:134:41]
                                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 - line:134:36] nothrow  arg_labels=
                                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:27 - line:134:27] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:33:14 function_ref=single specialized=no)
                                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:35 - line:134:36]))
                                  (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:41 - line:134:41]
                                    (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:134:41 - line:134:41] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                            (tuple_expr implicit type='()'))
                          (brace_stmt
                            (assign_expr
                              (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:25 - line:135:25])
                              (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:29 - line:135:37] nothrow  arg_labels=
                                (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:29 - line:135:29] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:135:36 - line:135:37])))))
                        (assign_expr
                          (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:21 - line:137:21])
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:25 - line:137:33] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:25 - line:137:25] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:137:32 - line:137:33])))))
                    (case_stmt
                      (case_label_item
                      (pattern_expr type='Character'
                        (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22] nothrow  arg_labels=
                          (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22] nothrow
                            (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                            (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22] nothrow
                              (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                              (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22] encoding=utf8 value="@" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 - line:138:22] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:138:22 function_ref=unapplied specialized=no))))
                          (tuple_expr implicit type='()'))))
                      (brace_stmt
                        (assign_expr
                          (discard_assignment_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:21 - line:139:21])
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:25 - line:139:37] nothrow  arg_labels=
                            (declref_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:25 - line:139:25] decl=main.(file).TokenizerImpl.func decl.getBalanced()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:139:36 - line:139:37])))))
                    (case_stmt
                      (case_label_item
                      (pattern_expr type='Character'
                        (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22] nothrow  arg_labels=
                          (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22] nothrow
                            (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                            (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22] nothrow
                              (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                              (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22] encoding=utf8 value="=" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 - line:140:22] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:140:22 function_ref=unapplied specialized=no))))
                          (tuple_expr implicit type='()'))))
                      (brace_stmt
                        (assign_expr
                          (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:21 - line:141:21])
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:25 - line:141:33] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:25 - line:141:25] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:141:32 - line:141:33])))
                        (pattern_binding_decl
                          (pattern_named type='String' 'value')
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:142:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:142:33 - line:142:45] nothrow  arg_labels=
                            (declref_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:142:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:142:33 - line:142:33] decl=main.(file).TokenizerImpl.func decl.getBalanced()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:142:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:142:44 - line:142:45])))

                        (var_decl "value" type='String' access=private let storage_kind=stored)

                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:21 - line:143:61] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:21 - line:143:28] nothrow
                            (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:28 - line:143:28] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                            (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:21 - line:143:21]
                              (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:21 - line:143:21] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                          (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:34 - line:143:61]
                            (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:35 - line:143:60]
                              (call_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:35 - line:143:60] nothrow  arg_labels=_:_:
                                (dot_syntax_call_expr type='(String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:35 - line:143:41] nothrow
                                  (declref_expr type='(Token.Type) -> (String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:41 - line:143:41] decl=main.(file).Token.keyValue@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:17 function_ref=single specialized=no)
                                  (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:35 - line:143:35] typerepr='Token'))
                                (tuple_expr type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:49 - line:143:60] names='',''
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:50 - line:143:50] decl=main.(file).TokenizerImpl.func decl.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:21 function_ref=unapplied specialized=no)
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:143:55 - line:143:55] decl=main.(file).TokenizerImpl.func decl.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:142:25 function_ref=unapplied specialized=no))))))))
                    (case_stmt
                      (case_label_item
                      (pattern_expr type='Character'
                        (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22] nothrow  arg_labels=
                          (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22] nothrow
                            (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                            (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22] nothrow
                              (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                              (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22] encoding=utf8 value=":" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 - line:144:22] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:144:22 function_ref=unapplied specialized=no))))
                          (tuple_expr implicit type='()'))))
                      (brace_stmt
                        (assign_expr
                          (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:21 - line:145:21])
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:25 - line:145:33] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:25 - line:145:25] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:145:32 - line:145:33])))
                        (guard_stmt
                          (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 - line:146:40] nothrow  arg_labels=
                            (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 - line:146:40] nothrow
                              (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:37 - line:146:37] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                              (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 - line:146:40] nothrow
                                (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:37 - line:146:37] decl=Swift.(file).== [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                                (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 - line:146:40]
                                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 - line:146:35] nothrow  arg_labels=
                                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:27 - line:146:27] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:14 function_ref=single specialized=no)
                                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:34 - line:146:35]))
                                  (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:40 - line:146:40]
                                    (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:146:40 - line:146:40] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                            (tuple_expr implicit type='()'))
                          (brace_stmt
                            (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:25 - line:147:36] nothrow  arg_labels=
                              (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:25 - line:147:25] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                              (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:35 - line:147:36] elements=[-1, -3, -3] variadic_sources=[]
                                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:147:35 - line:147:36])))))
                        (pattern_binding_decl
                          (pattern_named type='String' 'value')
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:149:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:149:33 - line:149:45] nothrow  arg_labels=
                            (declref_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:149:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:149:33 - line:149:33] decl=main.(file).TokenizerImpl.func decl.getBalanced()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:149:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:149:44 - line:149:45])))

                        (var_decl "value" type='String' access=private let storage_kind=stored)

                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:21 - line:150:61] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:21 - line:150:28] nothrow
                            (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:28 - line:150:28] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                            (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:21 - line:150:21]
                              (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:21 - line:150:21] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                          (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:34 - line:150:61]
                            (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:35 - line:150:60]
                              (call_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:35 - line:150:60] nothrow  arg_labels=_:_:
                                (dot_syntax_call_expr type='(String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:35 - line:150:41] nothrow
                                  (declref_expr type='(Token.Type) -> (String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:41 - line:150:41] decl=main.(file).Token.keyValue@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:17 function_ref=single specialized=no)
                                  (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:35 - line:150:35] typerepr='Token'))
                                (tuple_expr type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:49 - line:150:60] names='',''
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:50 - line:150:50] decl=main.(file).TokenizerImpl.func decl.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:21 function_ref=unapplied specialized=no)
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:150:55 - line:150:55] decl=main.(file).TokenizerImpl.func decl.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:149:25 function_ref=unapplied specialized=no))))))))
                    (case_stmt
                      (case_label_item
                      (pattern_any type='Character'))
                      (brace_stmt
                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:21 - line:152:52] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:21 - line:152:28] nothrow
                            (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:28 - line:152:28] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                            (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:21 - line:152:21]
                              (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:21 - line:152:21] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                          (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:34 - line:152:52]
                            (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:35 - line:152:51]
                              (call_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:35 - line:152:51] nothrow  arg_labels=_:
                                (dot_syntax_call_expr type='(String) -> Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:35 - line:152:41] nothrow
                                  (declref_expr type='(Token.Type) -> (String) -> Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:41 - line:152:41] decl=main.(file).Token.symbol@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:17 function_ref=single specialized=no)
                                  (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:35 - line:152:35] typerepr='Token'))
                                (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:47 - line:152:51]
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:152:48 - line:152:48] decl=main.(file).TokenizerImpl.func decl.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:129:21 function_ref=unapplied specialized=no))))))))))))))
        (return_stmt
          (load_expr implicit type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:157:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:157:16 - line:157:16]
            (declref_expr type='@lvalue [Token]' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:157:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:157:16 - line:157:16] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))))
    (destructor_decl implicit "deinit" type='(TokenizerImpl) -> ()' interface type='(TokenizerImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='TokenizerImpl'))
      (brace_stmt))
    (constructor_decl implicit "init()" type='(TokenizerImpl.Type) -> () -> TokenizerImpl' access=internal designated
      (parameter_list
        (parameter "self" type='TokenizerImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt)))))

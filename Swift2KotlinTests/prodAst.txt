(source_file
  (protocol "Converter"<Self : Converter> type='Converter.Protocol' access=internal @_fixed_layout
    (func_decl "convertSource(filenameArgs:)" type='<Self : Converter> (Self) -> ([String]) -> String' interface type='<τ_0_0 where τ_0_0 : Converter> (τ_0_0) -> (Array<String>) -> String' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "filenameArgs" apiName=filenameArgs type='[String]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))))
  (typealias "ASTText" type='ASTText.Type' access=internal type='String')
  (typealias "KotlinText" type='KotlinText.Type' access=internal type='String')
  (class_decl "ConverterImpl" type='ConverterImpl.Type' access=internal @_fixed_layout inherits: Converter
    (pattern_binding_decl
      (pattern_typed type='Tokenizer'
        (pattern_named type='Tokenizer' 'tokenizer')
        (type_ident
          (component id='Tokenizer' bind=main.(file).Tokenizer@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:1:10))))
    (var_decl "tokenizer" type='Tokenizer' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7ff815a3a310' type='(ConverterImpl) -> () -> Tokenizer' interface type='(ConverterImpl) -> () -> Tokenizer' access=internal final getter_for=tokenizer
        (parameter_list
          (parameter "self" type='ConverterImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Tokenizer' decl=main.(file).ConverterImpl.tokenizer@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:9:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:9:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='Parser'
        (pattern_named type='Parser' 'parser')
        (type_ident
          (component id='Parser' bind=main.(file).Parser@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:1:10))))
    (var_decl "parser" type='Parser' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7ff815a3a8d0' type='(ConverterImpl) -> () -> Parser' interface type='(ConverterImpl) -> () -> Parser' access=internal final getter_for=parser
        (parameter_list
          (parameter "self" type='ConverterImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Parser' decl=main.(file).ConverterImpl.parser@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:10:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:10:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='Generator'
        (pattern_named type='Generator' 'generator')
        (type_ident
          (component id='Generator' bind=main.(file).Generator@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:1:10))))
    (var_decl "generator" type='Generator' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7ff815a3ae70' type='(ConverterImpl) -> () -> Generator' interface type='(ConverterImpl) -> () -> Generator' access=internal final getter_for=generator
        (parameter_list
          (parameter "self" type='ConverterImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Generator' decl=main.(file).ConverterImpl.generator@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:11:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:11:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='Shell'
        (pattern_named type='Shell' 'shell')
        (type_ident
          (component id='Shell' bind=main.(file).Shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:3:10))))
    (var_decl "shell" type='Shell' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7ff815a3e820' type='(ConverterImpl) -> () -> Shell' interface type='(ConverterImpl) -> () -> Shell' access=internal final getter_for=shell
        (parameter_list
          (parameter "self" type='ConverterImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Shell' decl=main.(file).ConverterImpl.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:12:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:12:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='FileListExpander'
        (pattern_named type='FileListExpander' 'fileListExpander')
        (type_ident
          (component id='FileListExpander' bind=main.(file).FileListExpander@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:3:10))))
    (var_decl "fileListExpander" type='FileListExpander' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7ff815a3edc0' type='(ConverterImpl) -> () -> FileListExpander' interface type='(ConverterImpl) -> () -> FileListExpander' access=internal final getter_for=fileListExpander
        (parameter_list
          (parameter "self" type='ConverterImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='FileListExpander' decl=main.(file).ConverterImpl.fileListExpander@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:13:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:13:9 function_ref=unapplied specialized=no))))))
    (constructor_decl "init(tokenizer:parser:generator:shell:fileListExpander:)" type='(ConverterImpl.Type) -> (Tokenizer, Parser, Generator, Shell, FileListExpander) -> ConverterImpl' access=internal designated
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list
        (parameter "tokenizer" apiName=tokenizer type='Tokenizer' default_arg=normal expression=
          (erasure_expr implicit type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 - line:15:47]
            (normal_conformance type=TokenizerImpl protocol=Tokenizer)
            (call_expr type='TokenizerImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 - line:15:47] nothrow  arg_labels=
              (constructor_ref_call_expr type='() -> TokenizerImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 - line:15:33] nothrow
                (declref_expr implicit type='(TokenizerImpl.Type) -> () -> TokenizerImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 - line:15:33] decl=main.(file).TokenizerImpl.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:5:7 function_ref=single specialized=no)
                (type_expr type='TokenizerImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:33 - line:15:33] typerepr='TokenizerImpl'))
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:46 - line:15:47]))))
        (parameter "parser" apiName=parser type='Parser' default_arg=normal expression=
          (erasure_expr implicit type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 - line:15:78]
            (normal_conformance type=ParserImpl protocol=Parser)
            (call_expr type='ParserImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 - line:15:78] nothrow  arg_labels=
              (constructor_ref_call_expr type='() -> ParserImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 - line:15:67] nothrow
                (declref_expr implicit type='(ParserImpl.Type) -> () -> ParserImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 - line:15:67] decl=main.(file).ParserImpl.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:5:7 function_ref=single specialized=no)
                (type_expr type='ParserImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:67 - line:15:67] typerepr='ParserImpl'))
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:77 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:77 - line:15:78]))))
        (parameter "generator" apiName=generator type='Generator' default_arg=normal expression=
          (erasure_expr implicit type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 - line:15:118]
            (normal_conformance type=GeneratorImpl protocol=Generator)
            (call_expr type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 - line:15:118] nothrow  arg_labels=
              (constructor_ref_call_expr type='() -> GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 - line:15:104] nothrow
                (declref_expr implicit type='(GeneratorImpl.Type) -> () -> GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 - line:15:104] decl=main.(file).GeneratorImpl.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=single specialized=no)
                (type_expr type='GeneratorImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:104 - line:15:104] typerepr='GeneratorImpl'))
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:117 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:117 - line:15:118]))))
        (parameter "shell" apiName=shell type='Shell' default_arg=normal expression=
          (erasure_expr implicit type='Shell' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 - line:15:146]
            (normal_conformance type=ShellImpl protocol=Shell)
            (call_expr type='ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 - line:15:146] nothrow  arg_labels=
              (constructor_ref_call_expr type='() -> ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 - line:15:136] nothrow
                (declref_expr implicit type='(ShellImpl.Type) -> () -> ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 - line:15:136] decl=main.(file).ShellImpl.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:8:7 function_ref=single specialized=no)
                (type_expr type='ShellImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:136 - line:15:136] typerepr='ShellImpl'))
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:145 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:145 - line:15:146]))))
        (parameter "fileListExpander" apiName=fileListExpander type='FileListExpander' default_arg=normal expression=
          (erasure_expr implicit type='FileListExpander' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 - line:15:207]
            (normal_conformance type=FileListExpanderImpl protocol=FileListExpander)
            (call_expr type='FileListExpanderImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 - line:15:207] nothrow  arg_labels=
              (constructor_ref_call_expr type='(Shell) -> FileListExpanderImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 - line:15:186] nothrow
                (declref_expr implicit type='(FileListExpanderImpl.Type) -> (Shell) -> FileListExpanderImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 - line:15:186] decl=main.(file).FileListExpanderImpl.init(shell:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:5 function_ref=single specialized=no)
                (type_expr type='FileListExpanderImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:186 - line:15:186] typerepr='FileListExpanderImpl'))
              (tuple_shuffle_expr implicit type='(shell: Shell)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:206 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:206 - line:15:207] elements=[-1] variadic_sources=[]
                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:206 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:206 - line:15:207]))))))
      (brace_stmt
        (assign_expr
          (member_ref_expr type='@lvalue Tokenizer' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:16:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:16:9 - line:16:14] decl=main.(file).ConverterImpl.tokenizer@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:9:9 direct_to_storage
            (declref_expr type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:16:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:16:9 - line:16:9] decl=main.(file).ConverterImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:5 function_ref=unapplied specialized=no))
          (declref_expr type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:16:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:16:26 - line:16:26] decl=main.(file).ConverterImpl.init.tokenizer@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:10 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue Parser' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:17:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:17:9 - line:17:14] decl=main.(file).ConverterImpl.parser@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:10:9 direct_to_storage
            (declref_expr type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:17:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:17:9 - line:17:9] decl=main.(file).ConverterImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:5 function_ref=unapplied specialized=no))
          (declref_expr type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:17:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:17:23 - line:17:23] decl=main.(file).ConverterImpl.init.parser@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:50 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue Generator' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:18:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:18:9 - line:18:14] decl=main.(file).ConverterImpl.generator@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:11:9 direct_to_storage
            (declref_expr type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:18:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:18:9 - line:18:9] decl=main.(file).ConverterImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:5 function_ref=unapplied specialized=no))
          (declref_expr type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:18:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:18:26 - line:18:26] decl=main.(file).ConverterImpl.init.generator@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:81 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue Shell' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:19:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:19:9 - line:19:14] decl=main.(file).ConverterImpl.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:12:9 direct_to_storage
            (declref_expr type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:19:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:19:9 - line:19:9] decl=main.(file).ConverterImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:5 function_ref=unapplied specialized=no))
          (declref_expr type='Shell' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:19:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:19:22 - line:19:22] decl=main.(file).ConverterImpl.init.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:121 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue FileListExpander' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:20:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:20:9 - line:20:14] decl=main.(file).ConverterImpl.fileListExpander@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:13:9 direct_to_storage
            (declref_expr type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:20:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:20:9 - line:20:9] decl=main.(file).ConverterImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:5 function_ref=unapplied specialized=no))
          (declref_expr type='FileListExpander' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:20:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:20:33 - line:20:33] decl=main.(file).ConverterImpl.init.fileListExpander@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:149 function_ref=unapplied specialized=no))
        (return_stmt)))
    (func_decl "convertSource(filenameArgs:)" type='(ConverterImpl) -> ([String]) -> String' interface type='(ConverterImpl) -> (Array<String>) -> String' access=internal
      (conformance main.(file).Converter.convertSource(filenameArgs:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:2:10)
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list
        (parameter "filenameArgs" apiName=filenameArgs type='[String]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='[String]' 'filenames')
          (open_existential_expr implicit type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 - line:24:71]
            (opaque_value_expr implicit type='FileListExpander' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 - line:24:25] @ 0x7ff815a53be0)
            (member_ref_expr type='FileListExpander' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 - line:24:25] decl=main.(file).ConverterImpl.fileListExpander@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:13:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 - line:24:25] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:23:10 function_ref=unapplied specialized=no))
            (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 - line:24:71] nothrow  arg_labels=fileList:
              (dot_syntax_call_expr type='([String]) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 - line:24:42] nothrow
                (declref_expr type='(FileListExpander) -> ([String]) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:42 - line:24:42] decl=main.(file).FileListExpander.expand(fileList:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:4:10 [with FileListExpander[abstract:FileListExpander]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='FileListExpander' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:25 - line:24:25] @ 0x7ff815a53be0))
              (tuple_expr type='(fileList: [String])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:48 - line:24:71] names=fileList
                (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:59 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:59 - line:24:59] decl=main.(file).ConverterImpl.func decl.filenameArgs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:23:24 function_ref=unapplied specialized=no)))))

        (var_decl "filenames" type='[String]' access=private let storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='String' 'output')
          (open_existential_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 - line:25:99]
            (opaque_value_expr implicit type='Shell' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 - line:25:22] @ 0x7ff815370338)
            (member_ref_expr type='Shell' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 - line:25:22] decl=main.(file).ConverterImpl.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:12:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 - line:25:22] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:23:10 function_ref=unapplied specialized=no))
            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 - line:25:99] nothrow  arg_labels=command:args:
              (dot_syntax_call_expr type='(String, [String]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 - line:25:28] nothrow
                (declref_expr type='(Shell) -> (String, [String]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:28 - line:25:28] decl=main.(file).Shell.runToStderr(command:args:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:5:10 [with Shell[abstract:Shell]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Shell' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:22 - line:25:22] @ 0x7ff815370338))
              (tuple_expr type='(command: String, args: [String])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:39 - line:25:99] names=command,args
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:49 - line:25:49] encoding=utf8 value="/usr/bin/swiftc" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                (binary_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:88 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:74 - line:25:90] nothrow
                  (declref_expr type='([String], [String]) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:88 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:88 - line:25:88] decl=Swift.(file).+ [with [String][[String]: specialize <String> (<Element> Array<Element>: RangeReplaceableCollection module Swift)], [String][[String]: specialize <String> (<Element> Array<Element>: RangeReplaceableCollection module Swift)], Array.Index[Int: Comparable module Swift], Int[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>[ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<String>>[IndexingIterator<ArraySlice<String>>: specialize <ArraySlice<String>, ArraySlice.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>, String, String, Array.Index[Int: Comparable module Swift], Int[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], ArraySlice<String>[ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<String>>[IndexingIterator<ArraySlice<String>>: specialize <ArraySlice<String>, ArraySlice.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>, String, String] function_ref=unapplied specialized=no)
                  (tuple_expr implicit type='([String], [String])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:74 - line:25:90]
                    (array_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:74 - line:25:86]
                      (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:75 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:75 - line:25:75] encoding=utf8 value="-dump-ast" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))
                    (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:90 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:90 - line:25:90] decl=main.(file).ConverterImpl.func decl.filenames@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:24:13 function_ref=unapplied specialized=no)))))))

        (var_decl "output" type='String' access=private let storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='[Token]' 'tokens')
          (open_existential_expr implicit type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 - line:26:47]
            (opaque_value_expr implicit type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 - line:26:22] @ 0x7ff814a6e530)
            (member_ref_expr type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 - line:26:22] decl=main.(file).ConverterImpl.tokenizer@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:9:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 - line:26:22] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:23:10 function_ref=unapplied specialized=no))
            (call_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 - line:26:47] nothrow  arg_labels=_:
              (dot_syntax_call_expr type='(String) -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 - line:26:32] nothrow
                (declref_expr type='(Tokenizer) -> (String) -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:32 - line:26:32] decl=main.(file).Tokenizer.tokenize@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:2:10 [with Tokenizer[abstract:Tokenizer]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:22 - line:26:22] @ 0x7ff814a6e530))
              (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:40 - line:26:47]
                (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:41 - line:26:41] decl=main.(file).ConverterImpl.func decl.output@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:25:13 function_ref=unapplied specialized=no)))))

        (var_decl "tokens" type='[Token]' access=private let storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='[AST]' 'asts')
          (open_existential_expr implicit type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 - line:27:39]
            (opaque_value_expr implicit type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 - line:27:20] @ 0x7ff814a6e8d0)
            (member_ref_expr type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 - line:27:20] decl=main.(file).ConverterImpl.parser@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:10:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 - line:27:20] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:23:10 function_ref=unapplied specialized=no))
            (call_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 - line:27:39] nothrow  arg_labels=_:
              (dot_syntax_call_expr type='([Token]) -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 - line:27:27] nothrow
                (declref_expr type='(Parser) -> ([Token]) -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:27 - line:27:27] decl=main.(file).Parser.parse@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:2:10 [with Parser[abstract:Parser]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:20 - line:27:20] @ 0x7ff814a6e8d0))
              (paren_expr type='([Token])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:32 - line:27:39]
                (declref_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:33 - line:27:33] decl=main.(file).ConverterImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:26:13 function_ref=unapplied specialized=no)))))

        (var_decl "asts" type='[AST]' access=private let storage_kind=stored)

        (return_stmt
          (open_existential_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 - line:28:39]
            (opaque_value_expr implicit type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 - line:28:16] @ 0x7ff814a6ec58)
            (member_ref_expr type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 - line:28:16] decl=main.(file).ConverterImpl.generator@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:11:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 - line:28:16] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:23:10 function_ref=unapplied specialized=no))
            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 - line:28:39] nothrow  arg_labels=_:
              (dot_syntax_call_expr type='([AST]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 - line:28:26] nothrow
                (declref_expr type='(Generator) -> ([AST]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:26 - line:28:26] decl=main.(file).Generator.generate@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:2:10 [with Generator[abstract:Generator]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:16 - line:28:16] @ 0x7ff814a6ec58))
              (paren_expr type='([AST])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:34 - line:28:39]
                (declref_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:28:35 - line:28:35] decl=main.(file).ConverterImpl.func decl.asts@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:27:13 function_ref=unapplied specialized=no)))))))
    (func_decl "convertAST(filename:)" type='(ConverterImpl) -> (String) -> KotlinText' interface type='(ConverterImpl) -> (String) -> String' access=internal
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list
        (parameter "filename" apiName=filename type='String'))
      (result
        (type_ident
          (component id='KotlinText' bind=main.(file).KotlinText@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:6:11)))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='String' 'fileContents')
          (force_try_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:28 - line:32:64]
            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 - line:32:64] throws  arg_labels=contentsOfFile:
              (constructor_ref_call_expr type='(String) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 - line:32:33] nothrow
                (declref_expr implicit type='(String.Type) -> (String) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 - line:32:33] decl=Foundation.(file).String.init(contentsOfFile:) function_ref=single specialized=no)
                (type_expr type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:33 - line:32:33] typerepr='String'))
              (tuple_expr type='(contentsOfFile: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:39 - line:32:64] names=contentsOfFile
                (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:56 - line:32:56] decl=main.(file).ConverterImpl.func decl.filename@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:31:21 function_ref=unapplied specialized=no)))))

        (var_decl "fileContents" type='String' access=private let storage_kind=stored)

        (return_stmt
          (call_expr type='KotlinText' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 - line:33:47] nothrow  arg_labels=string:
            (dot_syntax_call_expr implicit type='(ASTText) -> KotlinText' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 - line:33:16] nothrow
              (declref_expr type='(ConverterImpl) -> (ASTText) -> KotlinText' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 - line:33:16] decl=main.(file).ConverterImpl.convertAST(string:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:36:10 function_ref=single specialized=no)
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:16 - line:33:16] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:31:10 function_ref=unapplied specialized=no))
            (tuple_expr type='(string: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:26 - line:33:47] names=string
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:33:35 - line:33:35] decl=main.(file).ConverterImpl.func decl.fileContents@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:32:13 function_ref=unapplied specialized=no))))))
    (func_decl "convertAST(string:)" type='(ConverterImpl) -> (ASTText) -> KotlinText' interface type='(ConverterImpl) -> (String) -> String' access=internal
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list
        (parameter "string" apiName=string type='ASTText'))
      (result
        (type_ident
          (component id='KotlinText' bind=main.(file).KotlinText@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:6:11)))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='[Token]' 'tokens')
          (open_existential_expr implicit type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 - line:37:47]
            (opaque_value_expr implicit type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 - line:37:22] @ 0x7ff814a6fa08)
            (member_ref_expr type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 - line:37:22] decl=main.(file).ConverterImpl.tokenizer@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:9:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 - line:37:22] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:36:10 function_ref=unapplied specialized=no))
            (call_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 - line:37:47] nothrow  arg_labels=_:
              (dot_syntax_call_expr type='(String) -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 - line:37:32] nothrow
                (declref_expr type='(Tokenizer) -> (String) -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:32 - line:37:32] decl=main.(file).Tokenizer.tokenize@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:2:10 [with Tokenizer[abstract:Tokenizer]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Tokenizer' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:22 - line:37:22] @ 0x7ff814a6fa08))
              (paren_expr type='(ASTText)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:40 - line:37:47]
                (declref_expr type='ASTText' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:41 - line:37:41] decl=main.(file).ConverterImpl.func decl.string@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:36:21 function_ref=unapplied specialized=no)))))

        (var_decl "tokens" type='[Token]' access=private let storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='[AST]' 'asts')
          (open_existential_expr implicit type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 - line:38:39]
            (opaque_value_expr implicit type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 - line:38:20] @ 0x7ff814a6fcd0)
            (member_ref_expr type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 - line:38:20] decl=main.(file).ConverterImpl.parser@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:10:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 - line:38:20] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:36:10 function_ref=unapplied specialized=no))
            (call_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 - line:38:39] nothrow  arg_labels=_:
              (dot_syntax_call_expr type='([Token]) -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 - line:38:27] nothrow
                (declref_expr type='(Parser) -> ([Token]) -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:27 - line:38:27] decl=main.(file).Parser.parse@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:2:10 [with Parser[abstract:Parser]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Parser' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:20 - line:38:20] @ 0x7ff814a6fcd0))
              (paren_expr type='([Token])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:32 - line:38:39]
                (declref_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:33 - line:38:33] decl=main.(file).ConverterImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:37:13 function_ref=unapplied specialized=no)))))

        (var_decl "asts" type='[AST]' access=private let storage_kind=stored)

        (return_stmt
          (open_existential_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 - line:39:39]
            (opaque_value_expr implicit type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 - line:39:16] @ 0x7ff814a6ff98)
            (member_ref_expr type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 - line:39:16] decl=main.(file).ConverterImpl.generator@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:11:9 direct_to_storage
              (declref_expr implicit type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 - line:39:16] decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:36:10 function_ref=unapplied specialized=no))
            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 - line:39:39] nothrow  arg_labels=_:
              (dot_syntax_call_expr type='([AST]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 - line:39:26] nothrow
                (declref_expr type='(Generator) -> ([AST]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:26 - line:39:26] decl=main.(file).Generator.generate@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:2:10 [with Generator[abstract:Generator]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Generator' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:16 - line:39:16] @ 0x7ff814a6ff98))
              (paren_expr type='([AST])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:34 - line:39:39]
                (declref_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:39:35 - line:39:35] decl=main.(file).ConverterImpl.func decl.asts@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:38:13 function_ref=unapplied specialized=no)))))))
    (destructor_decl implicit "deinit" type='(ConverterImpl) -> ()' interface type='(ConverterImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (brace_stmt))
    (func_decl implicit 'anonname=0x7ff815a3a310' type='(ConverterImpl) -> () -> Tokenizer' interface type='(ConverterImpl) -> () -> Tokenizer' access=internal final getter_for=tokenizer
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Tokenizer' decl=main.(file).ConverterImpl.tokenizer@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:9:9 direct_to_storage
            (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:9:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7ff815a3a8d0' type='(ConverterImpl) -> () -> Parser' interface type='(ConverterImpl) -> () -> Parser' access=internal final getter_for=parser
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Parser' decl=main.(file).ConverterImpl.parser@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:10:9 direct_to_storage
            (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:10:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7ff815a3ae70' type='(ConverterImpl) -> () -> Generator' interface type='(ConverterImpl) -> () -> Generator' access=internal final getter_for=generator
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Generator' decl=main.(file).ConverterImpl.generator@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:11:9 direct_to_storage
            (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:11:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7ff815a3e820' type='(ConverterImpl) -> () -> Shell' interface type='(ConverterImpl) -> () -> Shell' access=internal final getter_for=shell
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Shell' decl=main.(file).ConverterImpl.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:12:9 direct_to_storage
            (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:12:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7ff815a3edc0' type='(ConverterImpl) -> () -> FileListExpander' interface type='(ConverterImpl) -> () -> FileListExpander' access=internal final getter_for=fileListExpander
      (parameter_list
        (parameter "self" type='ConverterImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='FileListExpander' decl=main.(file).ConverterImpl.fileListExpander@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:13:9 direct_to_storage
            (declref_expr implicit type='ConverterImpl' decl=main.(file).ConverterImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:13:9 function_ref=unapplied specialized=no)))))))
(source_file
  (protocol "Generator"<Self : Generator> type='Generator.Protocol' access=internal @_fixed_layout
    (func_decl "generate(_:)" type='<Self : Generator> (Self) -> ([AST]) -> String' interface type='<τ_0_0 where τ_0_0 : Generator> (τ_0_0) -> (Array<AST>) -> String' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "ast" type='[AST]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))))
  (class_decl "GeneratorImpl" type='GeneratorImpl.Type' access=internal @_fixed_layout inherits: Generator
    (typealias "Handler" type='GeneratorImpl.Handler.Type' access=internal type='(AST) -> String')
    (pattern_binding_decl
      (pattern_typed type='[String : (AST) -> String]'
        (pattern_named type='[String : (AST) -> String]' 'nodeHandlers')
        (type_dictionary
          (type_ident
            (component id='String' bind=Swift.(file).String))
          (type_function
            (type_tuple
              (type_ident
                (component id='AST' bind=main.(file).AST@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:1:8)))
            (type_ident
              (component id='String' bind=Swift.(file).String))))))
    (var_decl "nodeHandlers" type='[String : (AST) -> String]' access=internal storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7f9d8c440d70' type='(GeneratorImpl) -> () -> [String : (AST) -> String]' interface type='(GeneratorImpl) -> () -> Dictionary<String, (AST) -> String>' access=internal getter_for=nodeHandlers
        (parameter_list
          (parameter "self" type='GeneratorImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (load_expr implicit type='[String : (AST) -> String]'
              (member_ref_expr implicit type='@lvalue [String : (AST) -> String]' accessKind=read decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 function_ref=unapplied specialized=no))))))
      (func_decl implicit 'anonname=0x7f9d8c440ff0' type='(GeneratorImpl) -> ([String : (AST) -> String]) -> ()' interface type='(GeneratorImpl) -> (Dictionary<String, (AST) -> String>) -> ()' access=internal setter_for=nodeHandlers
        (parameter_list
          (parameter "self" type='GeneratorImpl'))
        (parameter_list
          (parameter "value" type='[String : (AST) -> String]'))
        (brace_stmt
          (assign_expr
            (member_ref_expr implicit type='@lvalue [String : (AST) -> String]' accessKind=write decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
              (declref_expr implicit type='GeneratorImpl' decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 function_ref=unapplied specialized=no))
            (declref_expr implicit type='[String : (AST) -> String]' decl=main.(file).GeneratorImpl.func decl.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 function_ref=unapplied specialized=no))))
      (func_decl implicit 'anonname=0x7f9d8c441720' type='(GeneratorImpl) -> (Builtin.RawPointer, inout Builtin.UnsafeValueBuffer) -> (Builtin.RawPointer, Builtin.RawPointer?)' interface type='(GeneratorImpl) -> (Builtin.RawPointer, inout Builtin.UnsafeValueBuffer) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>)' access=internal materializeForSet_for=nodeHandlers
        (parameter_list
          (parameter "self" type='GeneratorImpl'))
        (parameter_list
          (parameter "buffer" type='Builtin.RawPointer')
          (parameter "callbackStorage" type='inout Builtin.UnsafeValueBuffer' mutable))))
    (constructor_decl "init()" type='(GeneratorImpl.Type) -> () -> GeneratorImpl' access=internal designated
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list)
      (brace_stmt
        (assign_expr
          (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:12:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:12:9 - line:12:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
            (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:12:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:12:9 - line:12:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))
          (dictionary_expr type='[String : (AST) -> String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:12:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:12:24 - line:12:26]))
        (assign_expr
          (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:9 - line:13:35]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
            (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:9 - line:13:9]
              (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:9 - line:13:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:9 - line:13:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no)))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:21 - line:13:35]
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:22 - line:13:22] encoding=utf8 value="struct_decl" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
          (inject_into_optional implicit type='((AST) -> String)?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 - line:13:39]
            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 - line:13:39] nothrow
              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 - line:13:39] decl=main.(file).GeneratorImpl.structOrClassDecl@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:48:10 function_ref=unapplied specialized=no)
              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:13:39 - line:13:39] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))))
        (assign_expr
          (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:9 - line:14:35]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
            (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:9 - line:14:9]
              (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:9 - line:14:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:9 - line:14:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no)))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:21 - line:14:35]
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:22 - line:14:22] encoding=utf8 value="source_file" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
          (inject_into_optional implicit type='((AST) -> String)?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 - line:14:39]
            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 - line:14:39] nothrow
              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 - line:14:39] decl=main.(file).GeneratorImpl.sourceFile@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:40:10 function_ref=unapplied specialized=no)
              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:14:39 - line:14:39] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))))
        (assign_expr
          (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:9 - line:15:32]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
            (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:9 - line:15:9]
              (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:9 - line:15:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:9 - line:15:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no)))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:21 - line:15:32]
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:22 - line:15:22] encoding=utf8 value="var_decl" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
          (inject_into_optional implicit type='((AST) -> String)?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 - line:15:36]
            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 - line:15:36] nothrow
              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 - line:15:36] decl=main.(file).GeneratorImpl.varDecl@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:35:10 function_ref=unapplied specialized=no)
              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:15:36 - line:15:36] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))))
        (assign_expr
          (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:9 - line:16:35]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
            (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:9 - line:16:9]
              (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:9 - line:16:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:9 - line:16:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no)))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:21 - line:16:35]
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:22 - line:16:22] encoding=utf8 value="import_decl" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
          (inject_into_optional implicit type='((AST) -> String)?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 - line:16:39]
            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 - line:16:39] nothrow
              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 - line:16:39] decl=main.(file).GeneratorImpl.importDecl@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:10 function_ref=unapplied specialized=no)
              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:16:39 - line:16:39] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))))
        (assign_expr
          (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:9 - line:17:44]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
            (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:9 - line:17:9]
              (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:9 - line:17:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:9 - line:17:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no)))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:21 - line:17:44]
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:22 - line:17:22] encoding=utf8 value="pattern_binding_decl" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
          (inject_into_optional implicit type='((AST) -> String)?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 - line:17:48]
            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 - line:17:48] nothrow
              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 - line:17:48] decl=main.(file).GeneratorImpl.nullHandler@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:31:10 function_ref=unapplied specialized=no)
              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:17:48 - line:17:48] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))))
        (assign_expr
          (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:9 - line:18:34]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
            (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:9 - line:18:9]
              (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:9 - line:18:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:9 - line:18:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no)))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:21 - line:18:34]
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:22 - line:18:22] encoding=utf8 value="class_decl" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
          (inject_into_optional implicit type='((AST) -> String)?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 - line:18:38]
            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 - line:18:38] nothrow
              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 - line:18:38] decl=main.(file).GeneratorImpl.structOrClassDecl@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:48:10 function_ref=unapplied specialized=no)
              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:18:38 - line:18:38] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))))
        (assign_expr
          (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:9 - line:19:40]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
            (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:9 - line:19:9]
              (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:9 - line:19:9] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
                (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:9 - line:19:9] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no)))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:21 - line:19:40]
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:22 - line:19:22] encoding=utf8 value="constructor_decl" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
          (inject_into_optional implicit type='((AST) -> String)?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 - line:19:44]
            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 - line:19:44] nothrow
              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 - line:19:44] decl=main.(file).GeneratorImpl.constructor_decl@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:44:10 function_ref=unapplied specialized=no)
              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:19:44 - line:19:44] decl=main.(file).GeneratorImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:11:5 function_ref=unapplied specialized=no))))
        (return_stmt)))
    (func_decl "generate(_:)" type='(GeneratorImpl) -> ([AST]) -> String' interface type='(GeneratorImpl) -> (Array<AST>) -> String' access=internal
      (conformance main.(file).Generator.generate@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:2:10)
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "asts" type='[AST]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (return_stmt
          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:16 - line:23:62] nothrow  arg_labels=separator:
            (dot_syntax_call_expr type='(String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:16 - line:23:38] nothrow
              (declref_expr type='([String]) -> (String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:38 - line:23:38] decl=Swift.(file).Sequence.joined(separator:) [with [String][[String]: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], ArraySlice<String>] function_ref=single specialized=no)
              (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:16 - line:23:36] nothrow  arg_labels=_:
                (dot_syntax_call_expr type='((AST) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:16 - line:23:21] nothrow
                  (declref_expr type='([AST]) -> ((AST) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:21 - line:23:21] decl=Swift.(file).Collection.map [with [AST][[AST]: specialize <AST> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<AST>>[IndexingIterator<Array<AST>>: specialize <Array<AST>, Array.Index, ArraySlice<AST>, AST> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], AST, ArraySlice<AST>[ArraySlice<AST>: specialize <AST> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<AST>: specialize <AST> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<AST>>[IndexingIterator<ArraySlice<AST>>: specialize <ArraySlice<AST>, ArraySlice.Index, ArraySlice<AST>, AST> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], AST, ArraySlice<AST>, AST, AST, String] function_ref=single specialized=no)
                  (declref_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:16 - line:23:16] decl=main.(file).GeneratorImpl.func decl.asts@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:22:21 function_ref=unapplied specialized=no))
                (paren_expr type='(AST) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:25 - line:23:36] trailing-closure
                  (function_conversion_expr implicit type='(AST) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:25 - line:23:36]
                    (closure_expr type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:25 - line:23:36] discriminator=0 captures=(self<noescape>) single-expression
                      (parameter_list
                        (parameter "$0" type='(AST)'))
                      (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 - line:23:34] nothrow  arg_labels=_:
                        (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 - line:23:27] nothrow
                          (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 - line:23:27] decl=main.(file).GeneratorImpl.eval@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:26:10 function_ref=single specialized=no)
                          (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:27 - line:23:27] decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:22:10 function_ref=unapplied specialized=no))
                        (paren_expr type='(AST)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:31 - line:23:34]
                          (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:32 - line:23:32] decl=main.(file).GeneratorImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:25 function_ref=unapplied specialized=no))))))))
            (tuple_expr type='(separator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:44 - line:23:62] names=separator
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:23:56 - line:23:56] encoding=utf8 value="\n\n" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))
    (func_decl "eval(_:)" type='(GeneratorImpl) -> (AST) -> String' interface type='(GeneratorImpl) -> (AST) -> String' access=internal
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "ast" type='AST'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (guard_stmt
          (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 - line:27:20] nothrow  arg_labels=
            (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 - line:27:20] nothrow
              (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 - line:27:15] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
              (prefix_unary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 - line:27:20] nothrow
                (dot_syntax_call_expr implicit type='(Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 - line:27:15] nothrow
                  (declref_expr type='(Bool.Type) -> (Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 - line:27:15] decl=Swift.(file).Bool.! function_ref=unapplied specialized=no)
                  (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:15 - line:27:15] typerepr='Bool'))
                (member_ref_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:16 - line:27:20] decl=main.(file).AST.implicit@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:3:9 direct_to_storage
                  (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:16 - line:27:16] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:26:17 function_ref=unapplied specialized=no))))
            (tuple_expr implicit type='()'))
          (brace_stmt
            (return_stmt
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:27:43 - line:27:43] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
        (return_stmt
          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 - line:28:43] nothrow  arg_labels=_:
            (load_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 - line:28:38]
              (force_value_expr type='@lvalue (AST) -> String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 - line:28:38]
                (subscript_expr type='@lvalue ((AST) -> String)?' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 - line:28:37]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], (AST) -> String]  arg_labels=_:
                  (inout_expr implicit type='inout Dictionary<String, (AST) -> String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 - line:28:16]
                    (member_ref_expr type='@lvalue [String : (AST) -> String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 - line:28:16] decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9
                      (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:16 - line:28:16] decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:26:10 function_ref=unapplied specialized=no)))
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:28 - line:28:37]
                    (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:29 - line:28:33] decl=main.(file).AST.type@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:2:9 direct_to_storage
                      (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:29 - line:28:29] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:26:17 function_ref=unapplied specialized=no))))))
            (paren_expr type='(AST)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:39 - line:28:43]
              (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:28:40 - line:28:40] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:26:17 function_ref=unapplied specialized=no))))))
    (func_decl "nullHandler(_:)" type='(GeneratorImpl) -> (AST) -> String' interface type='(GeneratorImpl) -> (AST) -> String' access=internal
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "ast" type='AST'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (return_stmt
          (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:31:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:31:53 - line:31:53] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
    (func_decl "importDecl(_:)" type='(GeneratorImpl) -> (AST) -> String' interface type='(GeneratorImpl) -> (AST) -> String' access=internal
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "ast" type='AST'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (return_stmt
          (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:52 - line:33:52]
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:52 - line:33:52] encoding=utf8 value="import " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:61 - line:33:71]
              (force_value_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:62 - line:33:70]
                (member_ref_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:62 - line:33:66] decl=main.(file).AST.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 direct_to_storage
                  (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:62 - line:33:62] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:23 function_ref=unapplied specialized=no))))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:33:72 - line:33:72] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
    (func_decl "varDecl(_:)" type='(GeneratorImpl) -> (AST) -> String' interface type='(GeneratorImpl) -> (AST) -> String' access=internal
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "ast" type='AST'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='String' 'letOrVar')
          (if_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:63]
            (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:49] nothrow  arg_labels=
              (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:49] nothrow
                (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:46 - line:36:46] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:49] nothrow
                  (declref_expr type='(String?, String?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:46 - line:36:46] decl=Swift.(file).!= [with String[String: Equatable module Swift]] function_ref=unapplied specialized=no)
                  (tuple_expr implicit type='(String?, String?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:49]
                    (subscript_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:44]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], String]  arg_labels=_:
                      (member_ref_expr type='[String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:28] decl=main.(file).AST.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 direct_to_storage
                        (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:24 - line:36:24] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:35:20 function_ref=unapplied specialized=no))
                      (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:38 - line:36:44]
                        (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:39 - line:36:39] encoding=utf8 value="let" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
                    (call_expr implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 - line:36:49] nothrow  arg_labels=nilLiteral:
                      (constructor_ref_call_expr implicit type='(()) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 - line:36:49] nothrow
                        (declref_expr implicit type='(Optional<String>.Type) -> (()) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 - line:36:49] decl=Swift.(file).Optional.init(nilLiteral:) [with String] function_ref=single specialized=no)
                        (type_expr implicit type='String?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 - line:36:49] typerepr='String?'))
                      (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 - line:36:49] names=nilLiteral
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:49 - line:36:49]))))))
              (tuple_expr implicit type='()'))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:55 - line:36:55] encoding=utf8 value="val" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:63 - line:36:63] encoding=utf8 value="var" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))

        (var_decl "letOrVar" type='String' access=private let storage_kind=stored)

        (return_stmt
          (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:16 - line:37:16]
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:16 - line:37:16] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:18 - line:37:27]
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:19 - line:37:19] decl=main.(file).GeneratorImpl.func decl.letOrVar@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:36:13 function_ref=unapplied specialized=no))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:28 - line:37:28] encoding=utf8 value=" " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:30 - line:37:40]
              (force_value_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:31 - line:37:39]
                (member_ref_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:31 - line:37:35] decl=main.(file).AST.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 direct_to_storage
                  (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:31 - line:37:31] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:35:20 function_ref=unapplied specialized=no))))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:41 - line:37:41] encoding=utf8 value=": " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:44 - line:37:68]
              (force_value_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:45 - line:37:67]
                (subscript_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:59 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:45 - line:37:66]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], String]  arg_labels=_:
                  (member_ref_expr type='[String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:45 - line:37:49] decl=main.(file).AST.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 direct_to_storage
                    (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:45 - line:37:45] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:35:20 function_ref=unapplied specialized=no))
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:60 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:59 - line:37:66]
                    (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:60 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:60 - line:37:60] encoding=utf8 value="type" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:37:69 - line:37:69] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
    (func_decl "sourceFile(_:)" type='(GeneratorImpl) -> (AST) -> String' interface type='(GeneratorImpl) -> (AST) -> String' access=internal
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "ast" type='AST'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (return_stmt
          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:88] nothrow  arg_labels=separator:
            (dot_syntax_call_expr type='(String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:66] nothrow
              (declref_expr type='([String]) -> (String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:66 - line:41:66] decl=Swift.(file).Sequence.joined(separator:) [with [String][[String]: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], ArraySlice<String>] function_ref=single specialized=no)
              (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:64] nothrow  arg_labels=_:
                (dot_syntax_call_expr type='((String) throws -> Bool) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:46] nothrow
                  (declref_expr type='([String]) -> ((String) throws -> Bool) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:46 - line:41:46] decl=Swift.(file).Sequence.filter [with [String][[String]: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>] function_ref=single specialized=no)
                  (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:44] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='((AST) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:29] nothrow
                      (declref_expr type='([AST]) -> ((AST) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:29 - line:41:29] decl=Swift.(file).Collection.map [with [AST][[AST]: specialize <AST> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<AST>>[IndexingIterator<Array<AST>>: specialize <Array<AST>, Array.Index, ArraySlice<AST>, AST> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], AST, ArraySlice<AST>[ArraySlice<AST>: specialize <AST> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<AST>: specialize <AST> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<AST>>[IndexingIterator<ArraySlice<AST>>: specialize <ArraySlice<AST>, ArraySlice.Index, ArraySlice<AST>, AST> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], AST, ArraySlice<AST>, AST, AST, String] function_ref=single specialized=no)
                      (member_ref_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:20] decl=main.(file).AST.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:6:9 direct_to_storage
                        (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:16 - line:41:16] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:40:23 function_ref=unapplied specialized=no)))
                    (paren_expr type='(AST) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:33 - line:41:44] trailing-closure
                      (function_conversion_expr implicit type='(AST) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:33 - line:41:44]
                        (closure_expr type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:33 - line:41:44] discriminator=0 captures=(self<noescape>) single-expression
                          (parameter_list
                            (parameter "$0" type='(AST)'))
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 - line:41:42] nothrow  arg_labels=_:
                            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 - line:41:35] nothrow
                              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 - line:41:35] decl=main.(file).GeneratorImpl.eval@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:26:10 function_ref=single specialized=no)
                              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:35 - line:41:35] decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:40:10 function_ref=unapplied specialized=no))
                            (paren_expr type='(AST)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:39 - line:41:42]
                              (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:40 - line:41:40] decl=main.(file).GeneratorImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:33 function_ref=unapplied specialized=no))))))))
                (paren_expr type='(String) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:53 - line:41:64] trailing-closure
                  (function_conversion_expr implicit type='(String) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:53 - line:41:64]
                    (closure_expr type='(String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:53 - line:41:64] discriminator=1 single-expression
                      (parameter_list
                        (parameter "$0" type='(String)'))
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:55 - line:41:61] nothrow
                        (declref_expr type='(String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:58 - line:41:58] decl=Swift.(file).!= [with String[String: Equatable module Swift]] function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:55 - line:41:61]
                          (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:55 - line:41:55] decl=main.(file).GeneratorImpl.func decl.explicit closure discriminator=1.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:53 function_ref=unapplied specialized=no)
                          (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:61 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:61 - line:41:61] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
            (tuple_expr type='(separator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:72 - line:41:88] names=separator
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:84 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:41:84 - line:41:84] encoding=utf8 value="\n" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))
    (func_decl "constructor_decl(_:)" type='(GeneratorImpl) -> (AST) -> String' interface type='(GeneratorImpl) -> (AST) -> String' access=internal
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "ast" type='AST'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (return_stmt
          (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:45:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:45:16 - line:45:16] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
    (func_decl "structOrClassDecl(_:)" type='(GeneratorImpl) -> (AST) -> String' interface type='(GeneratorImpl) -> (AST) -> String' access=internal
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "ast" type='AST'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='String' 'parameters')
          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:76 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:98] nothrow  arg_labels=separator:
            (dot_syntax_call_expr type='(String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:76 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:76] nothrow
              (declref_expr type='([String]) -> (String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:76 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:76 - line:49:76] decl=Swift.(file).Sequence.joined(separator:) [with [String][[String]: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], ArraySlice<String>] function_ref=single specialized=no)
              (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:74] nothrow  arg_labels=_:
                (dot_syntax_call_expr type='((String) throws -> Bool) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:56] nothrow
                  (declref_expr type='([String]) -> ((String) throws -> Bool) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:56 - line:49:56] decl=Swift.(file).Sequence.filter [with [String][[String]: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>] function_ref=single specialized=no)
                  (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:54] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='((AST) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:39] nothrow
                      (declref_expr type='([AST]) -> ((AST) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:39 - line:49:39] decl=Swift.(file).Collection.map [with [AST][[AST]: specialize <AST> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<AST>>[IndexingIterator<Array<AST>>: specialize <Array<AST>, Array.Index, ArraySlice<AST>, AST> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], AST, ArraySlice<AST>[ArraySlice<AST>: specialize <AST> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<AST>: specialize <AST> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<AST>>[IndexingIterator<ArraySlice<AST>>: specialize <ArraySlice<AST>, ArraySlice.Index, ArraySlice<AST>, AST> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], AST, ArraySlice<AST>, AST, AST, String] function_ref=single specialized=no)
                      (member_ref_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:30] decl=main.(file).AST.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:6:9 direct_to_storage
                        (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:26 - line:49:26] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:48:30 function_ref=unapplied specialized=no)))
                    (paren_expr type='(AST) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:43 - line:49:54] trailing-closure
                      (function_conversion_expr implicit type='(AST) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:43 - line:49:54]
                        (closure_expr type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:43 - line:49:54] discriminator=0 captures=(self<noescape>) single-expression
                          (parameter_list
                            (parameter "$0" type='(AST)'))
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 - line:49:52] nothrow  arg_labels=_:
                            (dot_syntax_call_expr implicit type='(AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 - line:49:45] nothrow
                              (declref_expr type='(GeneratorImpl) -> (AST) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 - line:49:45] decl=main.(file).GeneratorImpl.eval@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:26:10 function_ref=single specialized=no)
                              (declref_expr implicit type='GeneratorImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:45 - line:49:45] decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:48:10 function_ref=unapplied specialized=no))
                            (paren_expr type='(AST)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:49 - line:49:52]
                              (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:50 - line:49:50] decl=main.(file).GeneratorImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:43 function_ref=unapplied specialized=no))))))))
                (paren_expr type='(String) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:63 - line:49:74] trailing-closure
                  (function_conversion_expr implicit type='(String) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:63 - line:49:74]
                    (closure_expr type='(String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:63 - line:49:74] discriminator=1 single-expression
                      (parameter_list
                        (parameter "$0" type='(String)'))
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:68 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:65 - line:49:71] nothrow
                        (declref_expr type='(String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:68 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:68 - line:49:68] decl=Swift.(file).!= [with String[String: Equatable module Swift]] function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:65 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:65 - line:49:71]
                          (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:65 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:65 - line:49:65] decl=main.(file).GeneratorImpl.func decl.explicit closure discriminator=1.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:63 function_ref=unapplied specialized=no)
                          (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:71 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:71 - line:49:71] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
            (tuple_expr type='(separator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:82 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:82 - line:49:98] names=separator
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:94 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:94 - line:49:94] encoding=utf8 value=", " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))

        (var_decl "parameters" type='String' access=private let storage_kind=stored)

        (pattern_binding_decl
          (pattern_typed type='String'
            (pattern_named type='String' 'inheritsText')
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:50:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:50:36 - line:50:36] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))

        (var_decl "inheritsText" type='String' access=private storage_kind=stored)

        (if_stmt
          (pattern
            (optional_some_element implicit type='String?'
              (pattern_let implicit type='String'
                (pattern_named type='String' 'inherits')))
            (subscript_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:27 - line:51:52]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], String]  arg_labels=_:
              (member_ref_expr type='[String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:27 - line:51:31] decl=main.(file).AST.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 direct_to_storage
                (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:27 - line:51:27] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:48:30 function_ref=unapplied specialized=no))
              (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:41 - line:51:52]
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:42 - line:51:42] encoding=utf8 value="inherits" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
          (brace_stmt
            (assign_expr
              (declref_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:13 - line:52:13] decl=main.(file).GeneratorImpl.func decl.inheritsText@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:50:13 function_ref=unapplied specialized=no)
              (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:28 - line:52:28]
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:28 - line:52:28] encoding=utf8 value=" : " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:33 - line:52:42]
                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:34 - line:52:34] decl=main.(file).GeneratorImpl.func decl.inherits@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:51:16 function_ref=unapplied specialized=no))
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:52:43 - line:52:43] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
        (return_stmt
          (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:16 - line:54:16]
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:16 - line:54:16] encoding=utf8 value="class " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:24 - line:54:34]
              (force_value_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:25 - line:54:33]
                (member_ref_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:25 - line:54:29] decl=main.(file).AST.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 direct_to_storage
                  (declref_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:25 - line:54:25] decl=main.(file).GeneratorImpl.func decl.ast@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:48:30 function_ref=unapplied specialized=no))))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:35 - line:54:35] encoding=utf8 value="(" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:37 - line:54:48]
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:38 - line:54:38] decl=main.(file).GeneratorImpl.func decl.parameters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:49:13 function_ref=unapplied specialized=no))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:49 - line:54:49] encoding=utf8 value=")" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
            (paren_expr type='(@lvalue String)' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:51 - line:54:64]
              (declref_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:52 - line:54:52] decl=main.(file).GeneratorImpl.func decl.inheritsText@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:50:13 function_ref=unapplied specialized=no))
            (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:65 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:54:65 - line:54:65] encoding=utf8 value=" {}" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
    (destructor_decl implicit "deinit" type='(GeneratorImpl) -> ()' interface type='(GeneratorImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (brace_stmt))
    (func_decl implicit 'anonname=0x7f9d8c440d70' type='(GeneratorImpl) -> () -> [String : (AST) -> String]' interface type='(GeneratorImpl) -> () -> Dictionary<String, (AST) -> String>' access=internal getter_for=nodeHandlers
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (load_expr implicit type='[String : (AST) -> String]'
            (member_ref_expr implicit type='@lvalue [String : (AST) -> String]' accessKind=read decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
              (declref_expr implicit type='GeneratorImpl' decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 function_ref=unapplied specialized=no))))))
    (func_decl implicit 'anonname=0x7f9d8c440ff0' type='(GeneratorImpl) -> ([String : (AST) -> String]) -> ()' interface type='(GeneratorImpl) -> (Dictionary<String, (AST) -> String>) -> ()' access=internal setter_for=nodeHandlers
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "value" type='[String : (AST) -> String]'))
      (brace_stmt
        (assign_expr
          (member_ref_expr implicit type='@lvalue [String : (AST) -> String]' accessKind=write decl=main.(file).GeneratorImpl.nodeHandlers@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 direct_to_storage
            (declref_expr implicit type='GeneratorImpl' decl=main.(file).GeneratorImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 function_ref=unapplied specialized=no))
          (declref_expr implicit type='[String : (AST) -> String]' decl=main.(file).GeneratorImpl.func decl.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Generator.swift:9:9 function_ref=unapplied specialized=no))))
    (func_decl implicit 'anonname=0x7f9d8c441720' type='(GeneratorImpl) -> (Builtin.RawPointer, inout Builtin.UnsafeValueBuffer) -> (Builtin.RawPointer, Builtin.RawPointer?)' interface type='(GeneratorImpl) -> (Builtin.RawPointer, inout Builtin.UnsafeValueBuffer) -> (Builtin.RawPointer, Optional<Builtin.RawPointer>)' access=internal materializeForSet_for=nodeHandlers
      (parameter_list
        (parameter "self" type='GeneratorImpl'))
      (parameter_list
        (parameter "buffer" type='Builtin.RawPointer')
        (parameter "callbackStorage" type='inout Builtin.UnsafeValueBuffer' mutable)))))
(source_file
  (protocol "Parser"<Self : Parser> type='Parser.Protocol' access=internal @_fixed_layout
    (func_decl "parse(_:)" type='<Self : Parser> (Self) -> ([Token]) -> [AST]' interface type='<τ_0_0 where τ_0_0 : Parser> (τ_0_0) -> (Array<Token>) -> Array<AST>' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "tokens" type='[Token]'))
      (result
        (type_array
          (type_ident
            (component id='AST' bind=main.(file).AST@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:1:8))))))
  (class_decl "ParserImpl" type='ParserImpl.Type' access=internal @_fixed_layout inherits: Parser
    (func_decl "parse(_:)" type='(ParserImpl) -> ([Token]) -> [AST]' interface type='(ParserImpl) -> (Array<Token>) -> Array<AST>' access=internal
      (conformance main.(file).Parser.parse@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:2:10)
      (parameter_list
        (parameter "self" type='ParserImpl'))
      (parameter_list
        (parameter "tokens" type='[Token]'))
      (result
        (type_array
          (type_ident
            (component id='AST' bind=main.(file).AST@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:1:8))))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='Int' 'index')
          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 - line:7:21] nothrow  arg_labels=_builtinIntegerLiteral:
            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 - line:7:21] nothrow
              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 - line:7:21] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 - line:7:21] typerepr='Int'))
            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 - line:7:21] names=_builtinIntegerLiteral
              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:21 - line:7:21] value=0))))

        (var_decl "index" type='Int' access=private storage_kind=stored)

        (func_decl "getToken()" type='() -> Token' access=private captures=(index, tokens)
          (parameter_list)
          (result
            (type_ident
              (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7)))
          (brace_stmt
            (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:13 - line:9:22] nothrow
              (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:19 - line:9:19] decl=Swift.(file).+= function_ref=unapplied specialized=no)
              (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:13 - line:9:22]
                (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:13 - line:9:13]
                  (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:13 - line:9:13] decl=main.(file).ParserImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:13 function_ref=unapplied specialized=no))
                (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 - line:9:22] nothrow  arg_labels=_builtinIntegerLiteral:
                  (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 - line:9:22] nothrow
                    (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 - line:9:22] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                    (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 - line:9:22] typerepr='Int'))
                  (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 - line:9:22] names=_builtinIntegerLiteral
                    (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:9:22 - line:9:22] value=1)))))
            (return_stmt
              (subscript_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:20 - line:10:34]  decl=Swift.(file).Array.subscript [with Token]  arg_labels=_:
                (declref_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:20 - line:10:20] decl=main.(file).ParserImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:6:18 function_ref=unapplied specialized=no)
                (paren_expr type='(Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:26 - line:10:34]
                  (binary_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:27 - line:10:33] nothrow
                    (declref_expr type='(Int, Int) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:32 - line:10:32] decl=Swift.(file).- function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:27 - line:10:33]
                      (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:27 - line:10:27]
                        (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:27 - line:10:27] decl=main.(file).ParserImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:13 function_ref=unapplied specialized=no))
                      (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 - line:10:33] nothrow  arg_labels=_builtinIntegerLiteral:
                        (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 - line:10:33] nothrow
                          (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 - line:10:33] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                          (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 - line:10:33] typerepr='Int'))
                        (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 - line:10:33] names=_builtinIntegerLiteral
                          (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:10:33 - line:10:33] value=1))))))))))

        (func_decl "nextToken()" type='() -> Token' access=private captures=(tokens, index)
          (parameter_list)
          (result
            (type_ident
              (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7)))
          (brace_stmt
            (return_stmt
              (subscript_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:44 - line:13:56]  decl=Swift.(file).Array.subscript [with Token]  arg_labels=_:
                (declref_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:44 - line:13:44] decl=main.(file).ParserImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:6:18 function_ref=unapplied specialized=no)
                (paren_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:50 - line:13:56]
                  (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:51 - line:13:51]
                    (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:51 - line:13:51] decl=main.(file).ParserImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:13 function_ref=unapplied specialized=no)))))))

        (func_decl "innerParse()" type='() -> AST' access=private captures=(getToken, nextToken, innerParse)
          (parameter_list)
          (result
            (type_ident
              (component id='AST' bind=main.(file).AST@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:1:8)))
          (brace_stmt
            (guard_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 - line:16:39] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 - line:16:39] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:30 - line:16:30] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 - line:16:39] nothrow
                    (declref_expr type='(Token, Token) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:30 - line:16:30] decl=main.(file).==@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:6 function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Token, Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 - line:16:39]
                      (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 - line:16:28] nothrow  arg_labels=
                        (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:19 - line:16:19] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:27 - line:16:28]))
                      (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:33 - line:16:39] decl=main.(file).Token.leftParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 direct_to_storage
                        (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:33 - line:16:33] typerepr='Token')))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:56 - line:16:67] nothrow  arg_labels=
                  (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:56 - line:16:56] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                  (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:66 - line:16:67] elements=[-1, -3, -3] variadic_sources=[]
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:16:66 - line:16:67])))))
            (guard_stmt
              (pattern
                (optional_some_element implicit type='Token.Symbol?'
                  (pattern_let implicit type='Token.Symbol'
                    (pattern_named type='Token.Symbol' 'typeToken')))
                (conditional_checked_cast_expr type='Token.Symbol?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:35 - line:17:56] value_cast writtenType='Token.Symbol'
                  (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:35 - line:17:44] nothrow  arg_labels=
                    (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:35 - line:17:35] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:43 - line:17:44]))))
              (brace_stmt
                (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:70 - line:17:81] nothrow  arg_labels=
                  (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:70 - line:17:70] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                  (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:80 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:80 - line:17:81] elements=[-1, -3, -3] variadic_sources=[]
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:80 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:80 - line:17:81])))))
            (pattern_binding_decl
              (pattern_named type='Bool' 'implicit')
              (call_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 - line:18:28] nothrow  arg_labels=_builtinBooleanLiteral:
                (constructor_ref_call_expr implicit type='(Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 - line:18:28] nothrow
                  (declref_expr implicit type='(Bool.Type) -> (Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 - line:18:28] decl=Swift.(file).Bool.init(_builtinBooleanLiteral:) function_ref=single specialized=no)
                  (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 - line:18:28] typerepr='Bool'))
                (tuple_expr implicit type='(_builtinBooleanLiteral: Builtin.Int1)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 - line:18:28] names=_builtinBooleanLiteral
                  (boolean_literal_expr type='Builtin.Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:28 - line:18:28] value=false))))

            (var_decl "implicit" type='Bool' access=private storage_kind=stored)

            (pattern_binding_decl
              (pattern_typed type='String?'
                (pattern_named type='String?' 'name')
)
              (call_expr implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 - line:19:33] nothrow  arg_labels=nilLiteral:
                (constructor_ref_call_expr implicit type='(()) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 - line:19:33] nothrow
                  (declref_expr implicit type='(Optional<String>.Type) -> (()) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 - line:19:33] decl=Swift.(file).Optional.init(nilLiteral:) [with String] function_ref=single specialized=no)
                  (type_expr implicit type='String?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 - line:19:33] typerepr='String?'))
                (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 - line:19:33] names=nilLiteral
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:33 - line:19:33]))))

            (var_decl "name" type='String?' access=private storage_kind=stored)

            (pattern_binding_decl
              (pattern_named type='[String : String]' 'attributes')
              (call_expr type='[String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:30 - line:20:46] nothrow  arg_labels=
                (constructor_ref_call_expr type='() -> [String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:30 - line:20:44] nothrow
                  (declref_expr implicit type='(Dictionary<String, String>.Type) -> () -> [String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:44 - line:20:44] decl=Swift.(file).Dictionary.init() [with String[String: Hashable module Swift], String] function_ref=single specialized=no)
                  (type_expr type='[String : String].Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:30 - line:20:44] typerepr='[String : String]'))
                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:45 - line:20:46])))

            (var_decl "attributes" type='[String : String]' access=private storage_kind=stored)

            (pattern_binding_decl
              (pattern_named type='[AST]' 'elements')
              (call_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:28 - line:21:34] nothrow  arg_labels=
                (constructor_ref_call_expr type='() -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:28 - line:21:32] nothrow
                  (declref_expr implicit type='(Array<AST>.Type) -> () -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:32 - line:21:32] decl=Swift.(file).Array.init() [with AST] function_ref=single specialized=no)
                  (type_expr type='[AST].Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:28 - line:21:32] typerepr='[AST]'))
                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:33 - line:21:34])))

            (var_decl "elements" type='[AST]' access=private storage_kind=stored)

            (if_stmt
              (pattern
                (optional_some_element implicit type='Token.Symbol?'
                  (pattern_let implicit type='Token.Symbol'
                    (pattern_named type='Token.Symbol' 'implicitToken')))
                (conditional_checked_cast_expr type='Token.Symbol?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:36 - line:22:58] value_cast writtenType='Token.Symbol'
                  (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:36 - line:22:46] nothrow  arg_labels=
                    (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:36 - line:22:36] decl=main.(file).ParserImpl.func decl.nextToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:45 - line:22:46]))))              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 - line:22:89] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 - line:22:89] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 - line:22:86] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 - line:22:89] nothrow
                    (dot_syntax_call_expr implicit type='(String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 - line:22:86] nothrow
                      (declref_expr type='(String.Type) -> (String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 - line:22:86] decl=Swift.(file).String.== function_ref=unapplied specialized=no)
                      (type_expr implicit type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:86 - line:22:86] typerepr='String'))
                    (tuple_expr implicit type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 - line:22:89]
                      (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:80 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 - line:22:80] decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
                        (declref_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:66 - line:22:66] decl=main.(file).ParserImpl.func decl.func decl.implicitToken@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:20 function_ref=unapplied specialized=no))
                      (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:89 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:22:89 - line:22:89] encoding=utf8 value="implicit" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (assign_expr
                  (discard_assignment_expr type='@lvalue Token' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:17 - line:23:17])
                  (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:21 - line:23:30] nothrow  arg_labels=
                    (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:21 - line:23:21] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:23:29 - line:23:30])))
                (assign_expr
                  (declref_expr type='@lvalue Bool' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:17 - line:24:17] decl=main.(file).ParserImpl.func decl.func decl.implicit@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:17 function_ref=unapplied specialized=no)
                  (call_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 - line:24:28] nothrow  arg_labels=_builtinBooleanLiteral:
                    (constructor_ref_call_expr implicit type='(Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 - line:24:28] nothrow
                      (declref_expr implicit type='(Bool.Type) -> (Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 - line:24:28] decl=Swift.(file).Bool.init(_builtinBooleanLiteral:) function_ref=single specialized=no)
                      (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 - line:24:28] typerepr='Bool'))
                    (tuple_expr implicit type='(_builtinBooleanLiteral: Builtin.Int1)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 - line:24:28] names=_builtinBooleanLiteral
                      (boolean_literal_expr type='Builtin.Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:24:28 - line:24:28] value=true))))))
            (if_stmt
              (pattern
                (optional_some_element implicit type='Token.String?'
                  (pattern_let implicit type='Token.String'
                    (pattern_named type='Token.String' 'nameToken')))
                (conditional_checked_cast_expr type='Token.String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:32 - line:27:54] value_cast writtenType='Token.String'
                  (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:32 - line:27:42] nothrow  arg_labels=
                    (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:32 - line:27:32] decl=main.(file).ParserImpl.func decl.nextToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:41 - line:27:42]))))
              (brace_stmt
                (assign_expr
                  (discard_assignment_expr type='@lvalue Token' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:17 - line:28:17])
                  (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:21 - line:28:30] nothrow  arg_labels=
                    (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:21 - line:28:21] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:28:29 - line:28:30])))
                (assign_expr
                  (declref_expr type='@lvalue String?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:17 - line:29:17] decl=main.(file).ParserImpl.func decl.func decl.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:17 function_ref=unapplied specialized=no)
                  (inject_into_optional implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:24 - line:29:34]
                    (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:24 - line:29:34] decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
                      (declref_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:29:24 - line:29:24] decl=main.(file).ParserImpl.func decl.func decl.nameToken@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:27:20 function_ref=unapplied specialized=no))))))
            (while_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (call_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] nothrow  arg_labels=_builtinBooleanLiteral:
                    (constructor_ref_call_expr implicit type='(Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] nothrow
                      (declref_expr implicit type='(Bool.Type) -> (Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] decl=Swift.(file).Bool.init(_builtinBooleanLiteral:) function_ref=single specialized=no)
                      (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] typerepr='Bool'))
                    (tuple_expr implicit type='(_builtinBooleanLiteral: Builtin.Int1)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] names=_builtinBooleanLiteral
                      (boolean_literal_expr type='Builtin.Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:32:19 - line:32:19] value=true))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (switch_stmt
                  (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:33:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:33:24 - line:33:34] nothrow  arg_labels=
                    (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:33:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:33:24 - line:33:24] decl=main.(file).ParserImpl.func decl.nextToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:13:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:33:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:33:33 - line:33:34]))
                  (case_stmt
                    (case_label_item
                    (pattern_expr type='Token'
                      (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 - line:34:28] nothrow  arg_labels=
                        (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 - line:34:28] nothrow
                          (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 - line:34:28] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                          (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 - line:34:28] nothrow
                            (declref_expr implicit type='(Token, Token) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 - line:34:28] decl=Swift.(file).~= [with Token[Token: Equatable module main]] function_ref=compound specialized=no)
                            (tuple_expr implicit type='(Token, Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 - line:34:28]
                              (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 - line:34:28] decl=main.(file).Token.rightParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 direct_to_storage
                                (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:22 - line:34:22] typerepr='Token'))
                              (declref_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 - line:34:28] decl=main.(file).ParserImpl.func decl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:34:28 function_ref=unapplied specialized=no))))
                        (tuple_expr implicit type='()'))))
                    (brace_stmt
                      (assign_expr
                        (discard_assignment_expr type='@lvalue Token' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:21 - line:35:21])
                        (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:25 - line:35:34] nothrow  arg_labels=
                          (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:25 - line:35:25] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:35:33 - line:35:34])))
                      (return_stmt
                        (call_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 - line:36:129] nothrow  arg_labels=type:implicit:name:attributes:elements:
                          (constructor_ref_call_expr type='(String, Bool, String?, [String : String], [AST]) -> AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 - line:36:28] nothrow
                            (declref_expr implicit type='(AST.Type) -> (String, Bool, String?, [String : String], [AST]) -> AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 - line:36:28] decl=main.(file).AST.init(type:implicit:name:attributes:elements:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:5 function_ref=single specialized=no)
                            (type_expr type='AST.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:28 - line:36:28] typerepr='AST'))
                          (tuple_expr type='(type: String, implicit: Bool, name: String?, attributes: [String : String], elements: [AST])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:31 - line:36:129] names=type,implicit,name,attributes,elements
                            (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:38 - line:36:48] decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
                              (declref_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:38 - line:36:38] decl=main.(file).ParserImpl.func decl.func decl.typeToken@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:17:23 function_ref=unapplied specialized=no))
                            (load_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:65 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:65 - line:36:65]
                              (declref_expr type='@lvalue Bool' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:65 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:65 - line:36:65] decl=main.(file).ParserImpl.func decl.func decl.implicit@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:18:17 function_ref=unapplied specialized=no))
                            (load_expr implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:81 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:81 - line:36:81]
                              (declref_expr type='@lvalue String?' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:81 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:81 - line:36:81] decl=main.(file).ParserImpl.func decl.func decl.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:19:17 function_ref=unapplied specialized=no))
                            (load_expr implicit type='[String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:99 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:99 - line:36:99]
                              (declref_expr type='@lvalue [String : String]' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:99 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:99 - line:36:99] decl=main.(file).ParserImpl.func decl.func decl.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:17 function_ref=unapplied specialized=no))
                            (load_expr implicit type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:121 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:121 - line:36:121]
                              (declref_expr type='@lvalue [AST]' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:121 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:36:121 - line:36:121] decl=main.(file).ParserImpl.func decl.func decl.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:17 function_ref=unapplied specialized=no)))))))
                  (case_stmt
                    (case_label_item
                    (pattern_let type='Token'
                      (pattern_is type='Token' value_cast Token.String
                        (pattern_named type='Token.String' 'stringToken'))))
                    (brace_stmt
                      (assign_expr
                        (discard_assignment_expr type='@lvalue Token' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:21 - line:38:21])
                        (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:25 - line:38:34] nothrow  arg_labels=
                          (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:25 - line:38:25] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:38:33 - line:38:34])))
                      (assign_expr
                        (subscript_expr type='@lvalue String?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:21 - line:39:49]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], String]  arg_labels=_:
                          (inout_expr implicit type='inout Dictionary<String, String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:21 - line:39:21]
                            (declref_expr type='@lvalue [String : String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:21 - line:39:21] decl=main.(file).ParserImpl.func decl.func decl.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:17 function_ref=unapplied specialized=no))
                          (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:31 - line:39:49]
                            (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:32 - line:39:44] decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
                              (declref_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:32 - line:39:32] decl=main.(file).ParserImpl.func decl.func decl.stringToken@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:37:26 function_ref=unapplied specialized=no))))
                        (inject_into_optional implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:53 - line:39:53]
                          (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:39:53 - line:39:53] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                  (case_stmt
                    (case_label_item
                    (pattern_let type='Token'
                      (pattern_is type='Token' value_cast Token.Symbol
                        (pattern_named type='Token.Symbol' 'symbolToken'))))
                    (brace_stmt
                      (assign_expr
                        (discard_assignment_expr type='@lvalue Token' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:21 - line:41:21])
                        (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:25 - line:41:34] nothrow  arg_labels=
                          (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:25 - line:41:25] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:41:33 - line:41:34])))
                      (assign_expr
                        (subscript_expr type='@lvalue String?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:21 - line:42:49]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], String]  arg_labels=_:
                          (inout_expr implicit type='inout Dictionary<String, String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:21 - line:42:21]
                            (declref_expr type='@lvalue [String : String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:21 - line:42:21] decl=main.(file).ParserImpl.func decl.func decl.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:17 function_ref=unapplied specialized=no))
                          (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:31 - line:42:49]
                            (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:32 - line:42:44] decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
                              (declref_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:32 - line:42:32] decl=main.(file).ParserImpl.func decl.func decl.symbolToken@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:40:26 function_ref=unapplied specialized=no))))
                        (inject_into_optional implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:53 - line:42:53]
                          (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:42:53 - line:42:53] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                  (case_stmt
                    (case_label_item
                    (pattern_let type='Token'
                      (pattern_is type='Token' value_cast Token.KeyValue
                        (pattern_named type='Token.KeyValue' 'keyValue'))))
                    (brace_stmt
                      (assign_expr
                        (discard_assignment_expr type='@lvalue Token' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:21 - line:44:21])
                        (call_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:25 - line:44:34] nothrow  arg_labels=
                          (declref_expr type='() -> Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:25 - line:44:25] decl=main.(file).ParserImpl.func decl.getToken()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:8:14 function_ref=single specialized=no)
                          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:44:33 - line:44:34])))
                      (assign_expr
                        (subscript_expr type='@lvalue String?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:21 - line:45:44]  decl=Swift.(file).Dictionary.subscript [with String[String: Hashable module Swift], String]  arg_labels=_:
                          (inout_expr implicit type='inout Dictionary<String, String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:21 - line:45:21]
                            (declref_expr type='@lvalue [String : String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:21 - line:45:21] decl=main.(file).ParserImpl.func decl.func decl.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:20:17 function_ref=unapplied specialized=no))
                          (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:31 - line:45:44]
                            (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:32 - line:45:41] decl=main.(file).Token.KeyValue.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 direct_to_storage
                              (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:32 - line:45:32] decl=main.(file).ParserImpl.func decl.func decl.keyValue@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:43:26 function_ref=unapplied specialized=no))))
                        (inject_into_optional implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:48 - line:45:57]
                          (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:48 - line:45:57] decl=main.(file).Token.KeyValue.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 direct_to_storage
                            (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:45:48 - line:45:48] decl=main.(file).ParserImpl.func decl.func decl.keyValue@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:43:26 function_ref=unapplied specialized=no))))))
                  (case_stmt
                    (case_label_item
                    (pattern_expr type='Token'
                      (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 - line:46:28] nothrow  arg_labels=
                        (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 - line:46:28] nothrow
                          (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 - line:46:28] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                          (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 - line:46:28] nothrow
                            (declref_expr implicit type='(Token, Token) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 - line:46:28] decl=Swift.(file).~= [with Token[Token: Equatable module main]] function_ref=compound specialized=no)
                            (tuple_expr implicit type='(Token, Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 - line:46:28]
                              (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 - line:46:28] decl=main.(file).Token.leftParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 direct_to_storage
                                (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:22 - line:46:22] typerepr='Token'))
                              (declref_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 - line:46:28] decl=main.(file).ParserImpl.func decl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:46:28 function_ref=unapplied specialized=no))))
                        (tuple_expr implicit type='()'))))
                    (brace_stmt
                      (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:21 - line:47:49] nothrow  arg_labels=_:
                        (dot_syntax_call_expr type='(AST) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:21 - line:47:30] nothrow
                          (declref_expr type='(inout Array<AST>) -> (AST) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:30 - line:47:30] decl=Swift.(file).Array.append [with AST] function_ref=single specialized=no)
                          (inout_expr implicit type='inout Array<AST>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:21 - line:47:21]
                            (declref_expr type='@lvalue [AST]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:21 - line:47:21] decl=main.(file).ParserImpl.func decl.func decl.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:21:17 function_ref=unapplied specialized=no)))
                        (paren_expr type='(AST)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:36 - line:47:49]
                          (call_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:37 - line:47:48] nothrow  arg_labels=
                            (declref_expr type='() -> AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:37 - line:47:37] decl=main.(file).ParserImpl.func decl.innerParse()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:15:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:47:47 - line:47:48]))))))
                  (case_stmt
                    (case_label_item
                    (pattern_any type='Token'))
                    (brace_stmt
                      (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:21 - line:49:32] nothrow  arg_labels=
                        (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:21 - line:49:21] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                        (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:31 - line:49:32] elements=[-1, -3, -3] variadic_sources=[]
                          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:49:31 - line:49:32]))))))))))

        (pattern_binding_decl
          (pattern_named type='[AST]' 'result')
          (call_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:22 - line:54:28] nothrow  arg_labels=
            (constructor_ref_call_expr type='() -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:22 - line:54:26] nothrow
              (declref_expr implicit type='(Array<AST>.Type) -> () -> [AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:26 - line:54:26] decl=Swift.(file).Array.init() [with AST] function_ref=single specialized=no)
              (type_expr type='[AST].Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:22 - line:54:26] typerepr='[AST]'))
            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:27 - line:54:28])))

        (var_decl "result" type='[AST]' access=private storage_kind=stored)

        (while_stmt
          (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 - line:55:31] nothrow  arg_labels=
            (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 - line:55:31] nothrow
              (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:21 - line:55:21] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
              (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 - line:55:31] nothrow
                (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:21 - line:55:21] decl=Swift.(file).!= function_ref=unapplied specialized=no)
                (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 - line:55:31]
                  (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 - line:55:15]
                    (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:15 - line:55:15] decl=main.(file).ParserImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:7:13 function_ref=unapplied specialized=no))
                  (member_ref_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:24 - line:55:31] decl=Swift.(file).Array.count [with Token]
                    (declref_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:55:24 - line:55:24] decl=main.(file).ParserImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:6:18 function_ref=unapplied specialized=no)))))
            (tuple_expr implicit type='()'))
          (brace_stmt
            (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:13 - line:56:39] nothrow  arg_labels=_:
              (dot_syntax_call_expr type='(AST) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:13 - line:56:20] nothrow
                (declref_expr type='(inout Array<AST>) -> (AST) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:20 - line:56:20] decl=Swift.(file).Array.append [with AST] function_ref=single specialized=no)
                (inout_expr implicit type='inout Array<AST>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:13 - line:56:13]
                  (declref_expr type='@lvalue [AST]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:13 - line:56:13] decl=main.(file).ParserImpl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:13 function_ref=unapplied specialized=no)))
              (paren_expr type='(AST)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:26 - line:56:39]
                (call_expr type='AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:27 - line:56:38] nothrow  arg_labels=
                  (declref_expr type='() -> AST' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:27 - line:56:27] decl=main.(file).ParserImpl.func decl.innerParse()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:15:14 function_ref=single specialized=no)
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:56:37 - line:56:38]))))))
        (return_stmt
          (load_expr implicit type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:59:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:59:16 - line:59:16]
            (declref_expr type='@lvalue [AST]' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:59:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:59:16 - line:59:16] decl=main.(file).ParserImpl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Parser.swift:54:13 function_ref=unapplied specialized=no)))))
    (destructor_decl implicit "deinit" type='(ParserImpl) -> ()' interface type='(ParserImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='ParserImpl'))
      (brace_stmt))
    (constructor_decl implicit "init()" type='(ParserImpl.Type) -> () -> ParserImpl' access=internal designated
      (parameter_list
        (parameter "self" type='ParserImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt)))))
(source_file
  (protocol "Tokenizer"<Self : Tokenizer> type='Tokenizer.Protocol' access=internal @_fixed_layout
    (func_decl "tokenize(_:)" type='<Self : Tokenizer> (Self) -> (String) -> [Token]' interface type='<τ_0_0 where τ_0_0 : Tokenizer> (τ_0_0) -> (String) -> Array<Token>' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "s" type='String'))
      (result
        (type_array
          (type_ident
            (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7))))))
  (class_decl "TokenizerImpl" type='TokenizerImpl.Type' access=internal @_fixed_layout inherits: Tokenizer
    (func_decl "tokenize(_:)" type='(TokenizerImpl) -> (String) -> [Token]' interface type='(TokenizerImpl) -> (String) -> Array<Token>' access=internal
      (conformance main.(file).Tokenizer.tokenize@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:2:10)
      (parameter_list
        (parameter "self" type='TokenizerImpl'))
      (parameter_list
        (parameter "s" type='String'))
      (result
        (type_array
          (type_ident
            (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7))))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='[Token]' 'tokens')
          (call_expr type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 - line:7:30] nothrow  arg_labels=
            (constructor_ref_call_expr type='() -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 - line:7:28] nothrow
              (declref_expr implicit type='(Array<Token>.Type) -> () -> [Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:28 - line:7:28] decl=Swift.(file).Array.init() [with Token] function_ref=single specialized=no)
              (type_expr type='[Token].Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:22 - line:7:28] typerepr='[Token]'))
            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:29 - line:7:30])))

        (var_decl "tokens" type='[Token]' access=private storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='[String.CharacterView._Element]' 'characters')
          (call_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:48] nothrow  arg_labels=_:
            (dot_syntax_call_expr type='((String.CharacterView._Element) throws -> String.CharacterView._Element) throws -> [String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:39] nothrow
              (declref_expr type='(String.CharacterView) -> ((String.CharacterView._Element) throws -> String.CharacterView._Element) throws -> [String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:39 - line:8:39] decl=Swift.(file).Collection.map [with String.CharacterView[String.CharacterView: Collection module Swift], String.CharacterView.Index[String.CharacterView.Index: Comparable module Swift], String.CharacterView.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, DefaultBidirectionalIndices<String.CharacterView>[DefaultBidirectionalIndices<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView.IndexDistance, Int, Int, Int, Int._DisabledRangeIndex, String.CharacterView, Character> (<Elements : BidirectionalIndexable> DefaultBidirectionalIndices<Elements>: IndexableBase module Swift), DefaultBidirectionalIndices<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView.IndexDistance, Int, Int, Int, Int._DisabledRangeIndex, String.CharacterView, Character> (<Elements : BidirectionalIndexable> DefaultBidirectionalIndices<Elements>: Sequence module Swift)], String.CharacterView.Index[String.CharacterView.Index: Comparable module Swift], IndexingIterator<DefaultBidirectionalIndices<String.CharacterView>>[IndexingIterator<DefaultBidirectionalIndices<String.CharacterView>>: specialize <DefaultBidirectionalIndices<String.CharacterView>, String.CharacterView.Index, DefaultBidirectionalIndices<String.CharacterView>, String.CharacterView.Index> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String.CharacterView.Index, DefaultBidirectionalIndices<String.CharacterView>, String.CharacterView.Index, String.CharacterView.Iterator[IndexingIterator<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String.CharacterView._Element, String.CharacterView.SubSequence[String.CharacterView: IndexableBase module Swift, String.CharacterView: Sequence module Swift], String.CharacterView.Index[String.CharacterView.Index: Comparable module Swift], String.CharacterView.Iterator[IndexingIterator<String.CharacterView>: specialize <String.CharacterView, String.CharacterView.Index, String.CharacterView, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character, String.CharacterView, Character, Character, String.CharacterView._Element] function_ref=single specialized=no)
              (member_ref_expr type='String.CharacterView' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:28] decl=Swift.(file).String.characters
                (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:26 - line:8:26] decl=main.(file).TokenizerImpl.func decl.s@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:6:21 function_ref=unapplied specialized=no)))
            (paren_expr type='(String.CharacterView._Element) throws -> String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 - line:8:48] trailing-closure
              (function_conversion_expr implicit type='(String.CharacterView._Element) throws -> String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 - line:8:48]
                (closure_expr type='(String.CharacterView._Element) -> String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 - line:8:48] discriminator=0 single-expression
                  (parameter_list
                    (parameter "$0" type='(String.CharacterView._Element)'))
                  (declref_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:45 - line:8:45] decl=main.(file).TokenizerImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:43 function_ref=unapplied specialized=no))))))

        (var_decl "characters" type='[String.CharacterView._Element]' access=private let storage_kind=stored)

        (pattern_binding_decl
          (pattern_named type='Int' 'index')
          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] nothrow  arg_labels=_builtinIntegerLiteral:
            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] nothrow
              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] typerepr='Int'))
            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] names=_builtinIntegerLiteral
              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:21 - line:9:21] value=0))))

        (var_decl "index" type='Int' access=private storage_kind=stored)

        (func_decl "getChar()" type='() -> Character?' access=private captures=(index, characters)
          (parameter_list)
          (result
)
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 - line:11:35] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 - line:11:35] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:22 - line:11:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 - line:11:35] nothrow
                    (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:22 - line:11:22] decl=Swift.(file).< function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 - line:11:35]
                      (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 - line:11:16]
                        (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:16 - line:11:16] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                      (member_ref_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:24 - line:11:35] decl=Swift.(file).Array.count [with String.CharacterView._Element]
                        (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:11:24 - line:11:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (binary_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:17 - line:12:26] nothrow
                  (declref_expr type='(inout Int, Int) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:23 - line:12:23] decl=Swift.(file).+= function_ref=unapplied specialized=no)
                  (tuple_expr implicit type='(inout Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:17 - line:12:26]
                    (inout_expr implicit type='inout Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:17 - line:12:17]
                      (declref_expr type='@lvalue Int' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:17 - line:12:17] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                    (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 - line:12:26] nothrow  arg_labels=_builtinIntegerLiteral:
                      (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 - line:12:26] nothrow
                        (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 - line:12:26] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                        (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 - line:12:26] typerepr='Int'))
                      (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 - line:12:26] names=_builtinIntegerLiteral
                        (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:12:26 - line:12:26] value=1)))))
                (return_stmt
                  (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:24 - line:13:42]
                    (subscript_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:24 - line:13:42]  decl=Swift.(file).Array.subscript [with String.CharacterView._Element]  arg_labels=_:
                      (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:24 - line:13:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)
                      (paren_expr type='(Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:34 - line:13:42]
                        (binary_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 - line:13:41] nothrow
                          (declref_expr type='(Int, Int) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:40 - line:13:40] decl=Swift.(file).- function_ref=unapplied specialized=no)
                          (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 - line:13:41]
                            (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 - line:13:35]
                              (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:35 - line:13:35] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                            (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 - line:13:41] nothrow  arg_labels=_builtinIntegerLiteral:
                              (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 - line:13:41] nothrow
                                (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 - line:13:41] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                                (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 - line:13:41] typerepr='Int'))
                              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 - line:13:41] names=_builtinIntegerLiteral
                                (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:13:41 - line:13:41] value=1))))))))))
              (brace_stmt
                (return_stmt
                  (call_expr implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 - line:14:30] nothrow  arg_labels=nilLiteral:
                    (constructor_ref_call_expr implicit type='(()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 - line:14:30] nothrow
                      (declref_expr implicit type='(Optional<Character>.Type) -> (()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 - line:14:30] decl=Swift.(file).Optional.init(nilLiteral:) [with Character] function_ref=single specialized=no)
                      (type_expr implicit type='Character?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 - line:14:30] typerepr='Character?'))
                    (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 - line:14:30] names=nilLiteral
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:14:30 - line:14:30]))))))))

        (func_decl "nextChar()" type='() -> Character?' access=private captures=(index, characters)
          (parameter_list)
          (result
)
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 - line:18:35] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 - line:18:35] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:22 - line:18:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 - line:18:35] nothrow
                    (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:22 - line:18:22] decl=Swift.(file).< function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 - line:18:35]
                      (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 - line:18:16]
                        (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:16 - line:18:16] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                      (member_ref_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:24 - line:18:35] decl=Swift.(file).Array.count [with String.CharacterView._Element]
                        (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:18:24 - line:18:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (return_stmt
                  (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:24 - line:19:40]
                    (subscript_expr type='String.CharacterView._Element' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:24 - line:19:40]  decl=Swift.(file).Array.subscript [with String.CharacterView._Element]  arg_labels=_:
                      (declref_expr type='[String.CharacterView._Element]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:24 - line:19:24] decl=main.(file).TokenizerImpl.func decl.characters@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:8:13 function_ref=unapplied specialized=no)
                      (paren_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:34 - line:19:40]
                        (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:35 - line:19:35]
                          (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:19:35 - line:19:35] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no)))))))
              (brace_stmt
                (return_stmt
                  (call_expr implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 - line:20:30] nothrow  arg_labels=nilLiteral:
                    (constructor_ref_call_expr implicit type='(()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 - line:20:30] nothrow
                      (declref_expr implicit type='(Optional<Character>.Type) -> (()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 - line:20:30] decl=Swift.(file).Optional.init(nilLiteral:) [with Character] function_ref=single specialized=no)
                      (type_expr implicit type='Character?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 - line:20:30] typerepr='Character?'))
                    (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 - line:20:30] names=nilLiteral
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:20:30 - line:20:30]))))))))

        (func_decl "skipWhiteSpace()" type='() -> Character?' access=private captures=(nextChar, getChar)
          (parameter_list)
          (result
)
          (brace_stmt
            (while_stmt
              (pattern
                (optional_some_element implicit type='Character?'
                  (pattern_let implicit type='Character'
                    (pattern_named type='Character' 'char')))
                (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:30 - line:24:39] nothrow  arg_labels=
                  (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:30 - line:24:30] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:14 function_ref=single specialized=no)
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:38 - line:24:39])))
              (brace_stmt
                (guard_stmt
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 - line:25:54] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 - line:25:54] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:51 - line:25:51] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 - line:25:54] nothrow
                        (declref_expr type='(Array.Index?, Array.Index?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:51 - line:25:51] decl=Swift.(file).!= [with Array.Index[Int: Equatable module Swift]] function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(Array.Index?, Array.Index?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 - line:25:54]
                          (call_expr type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 - line:25:49] nothrow  arg_labels=of:
                            (dot_syntax_call_expr type='(Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 - line:25:35] nothrow
                              (declref_expr type='([Character]) -> (Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:35 - line:25:35] decl=Swift.(file).Collection.index(of:) [with [Character][[Character]: specialize <Character> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<Character>>[IndexingIterator<Array<Character>>: specialize <Array<Character>, Array.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character[Character: Equatable module Swift], ArraySlice<Character>[ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<Character>>[IndexingIterator<ArraySlice<Character>>: specialize <ArraySlice<Character>, ArraySlice.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character, ArraySlice<Character>, Character, Character] function_ref=single specialized=no)
                              (array_expr type='[Character]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:23 - line:25:33]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:24 - line:25:24] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:29 - line:25:29] encoding=utf8 value="\n" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
                            (tuple_expr type='(of: Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:40 - line:25:49] names=of
                              (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:45 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:45 - line:25:45] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:23 function_ref=unapplied specialized=no)))
                          (call_expr implicit type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 - line:25:54] nothrow  arg_labels=nilLiteral:
                            (constructor_ref_call_expr implicit type='(()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 - line:25:54] nothrow
                              (declref_expr implicit type='(Optional<Array.Index>.Type) -> (()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 - line:25:54] decl=Swift.(file).Optional.init(nilLiteral:) [with Array.Index] function_ref=single specialized=no)
                              (type_expr implicit type='Array.Index?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 - line:25:54] typerepr='Array.Index?'))
                            (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 - line:25:54] names=nilLiteral
                              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:54 - line:25:54]))))))
                    (tuple_expr implicit type='()'))
                  (brace_stmt
                    (return_stmt
                      (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:72 - line:25:72]
                        (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:25:72 - line:25:72] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:24:23 function_ref=unapplied specialized=no)))))
                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:17 - line:26:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:21 - line:26:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:21 - line:26:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:26:28 - line:26:29])))))
            (return_stmt
              (call_expr implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 - line:28:20] nothrow  arg_labels=nilLiteral:
                (constructor_ref_call_expr implicit type='(()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 - line:28:20] nothrow
                  (declref_expr implicit type='(Optional<Character>.Type) -> (()) -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 - line:28:20] decl=Swift.(file).Optional.init(nilLiteral:) [with Character] function_ref=single specialized=no)
                  (type_expr implicit type='Character?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 - line:28:20] typerepr='Character?'))
                (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 - line:28:20] names=nilLiteral
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:28:20 - line:28:20]))))))

        (func_decl "getUntil(_:)" type='(Character) -> String' access=private captures=(getUntil)
          (parameter_list
            (parameter "c" type='Character'))
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (return_stmt
              (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:20 - line:32:51] nothrow  arg_labels=_:
                (declref_expr type='((Character) -> Bool) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:20 - line:32:20] decl=main.(file).TokenizerImpl.func decl.getUntil(closure:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:14 function_ref=single specialized=no)
                (tuple_shuffle_expr implicit type='(closure: (Character) -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:28 - line:32:51] sourceIsScalar elements=[0] variadic_sources=[]
                  (paren_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:28 - line:32:51] trailing-closure
                    (closure_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:31 - line:32:51] discriminator=0 captures=(c<noescape>) single-expression
                      (parameter_list
                        (parameter "char" type='(Character)'))
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:41 - line:32:49] nothrow
                        (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:46 - line:32:46] nothrow
                          (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:46 - line:32:46] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                          (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:46 - line:32:46] typerepr='Character'))
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:41 - line:32:49]
                          (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:41 - line:32:41] decl=main.(file).TokenizerImpl.func decl.func decl.explicit closure discriminator=0.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:33 function_ref=unapplied specialized=no)
                          (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:32:49 - line:32:49] decl=main.(file).TokenizerImpl.func decl.func decl.c@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:31:25 function_ref=unapplied specialized=no))))))))))

        (func_decl "getUntil(closure:)" type='((Character) -> Bool) -> String' access=private captures=(nextChar, getChar)
          (parameter_list
            (parameter "closure" apiName=closure type='(Character) -> Bool'))
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (pattern_binding_decl
              (pattern_named type='String' 'result')
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:26 - line:36:26] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))

            (var_decl "result" type='String' access=private storage_kind=stored)

            (while_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 - line:37:39] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 - line:37:39] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 - line:37:19] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (prefix_unary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 - line:37:39] nothrow
                    (dot_syntax_call_expr implicit type='(Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 - line:37:19] nothrow
                      (declref_expr type='(Bool.Type) -> (Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 - line:37:19] decl=Swift.(file).Bool.! function_ref=unapplied specialized=no)
                      (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:19 - line:37:19] typerepr='Bool'))
                    (call_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:20 - line:37:39] nothrow  arg_labels=_:
                      (declref_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:20 - line:37:20] decl=main.(file).TokenizerImpl.func decl.func decl.closure@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:23 function_ref=single specialized=no)
                      (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:27 - line:37:39]
                        (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:28 - line:37:38]
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:28 - line:37:37] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:28 - line:37:28] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:37:36 - line:37:37])))))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:17 - line:38:41] nothrow  arg_labels=_:
                  (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:17 - line:38:24] nothrow
                    (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:24 - line:38:24] decl=Swift.(file).String.append function_ref=single specialized=no)
                    (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:17 - line:38:17]
                      (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:17 - line:38:17] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:17 function_ref=unapplied specialized=no)))
                  (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:30 - line:38:41]
                    (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:31 - line:38:40]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:31 - line:38:39] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:31 - line:38:31] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:38:38 - line:38:39])))))))
            (return_stmt
              (load_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:20 - line:40:20]
                (declref_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:40:20 - line:40:20] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:36:17 function_ref=unapplied specialized=no)))))

        (func_decl "getUntilBlank()" type='() -> String' access=private captures=(getUntil)
          (parameter_list)
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (return_stmt
              (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:49 - line:43:61] nothrow  arg_labels=_:
                (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:49 - line:43:49] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:31:14 function_ref=single specialized=no)
                (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:57 - line:43:61]
                  (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:43:58 - line:43:58] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))

        (func_decl "getBalanced()" type='() -> String' access=private captures=(nextChar, getChar, getUntil)
          (parameter_list)
          (result
            (type_ident
              (component id='String' bind=Swift.(file).String)))
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 - line:46:30] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 - line:46:30] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:27 - line:46:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 - line:46:30] nothrow
                    (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:27 - line:46:27] decl=Swift.(file).== [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 - line:46:30]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 - line:46:25] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:16 - line:46:16] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:24 - line:46:25]))
                      (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:30 - line:46:30]
                        (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:46:30 - line:46:30] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:17 - line:47:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:21 - line:47:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:21 - line:47:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:47:28 - line:47:29])))
                (pattern_binding_decl
                  (pattern_named type='String' 'result')
                  (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:30 - line:48:42] nothrow  arg_labels=_:
                    (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:30 - line:48:30] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:31:14 function_ref=single specialized=no)
                    (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:38 - line:48:42]
                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:39 - line:48:39] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))

                (var_decl "result" type='String' access=private let storage_kind=stored)

                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:17 - line:49:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:21 - line:49:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:21 - line:49:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:49:28 - line:49:29])))
                (return_stmt
                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:50:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:50:24 - line:50:24] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:48:21 function_ref=unapplied specialized=no))))
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 - line:52:30] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 - line:52:30] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:27 - line:52:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 - line:52:30] nothrow
                    (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:27 - line:52:27] decl=Swift.(file).== [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                    (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 - line:52:30]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 - line:52:25] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:16 - line:52:16] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:24 - line:52:25]))
                      (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:30 - line:52:30]
                        (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:52:30 - line:52:30] encoding=utf8 value="[" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:17 - line:53:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:21 - line:53:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:21 - line:53:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:53:28 - line:53:29])))
                (assign_expr
                  (discard_assignment_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:17 - line:54:17])
                  (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:21 - line:54:33] nothrow  arg_labels=_:
                    (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:21 - line:54:21] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:31:14 function_ref=single specialized=no)
                    (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:29 - line:54:33]
                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:54:30 - line:54:30] encoding=utf8 value="]" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                (assign_expr
                  (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:17 - line:55:17])
                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:21 - line:55:29] nothrow  arg_labels=
                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:21 - line:55:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:55:28 - line:55:29])))
                (return_stmt
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:56:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:56:24 - line:56:24] encoding=utf8 value="[]" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
            (pattern_binding_decl
              (pattern_named type='String' 'result')
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:26 - line:59:26] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))

            (var_decl "result" type='String' access=private storage_kind=stored)

            (while_stmt
              (pattern
                (optional_some_element implicit type='Character?'
                  (pattern_let implicit type='Character'
                    (pattern_named type='Character' 'char')))
                (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:30 - line:60:39] nothrow  arg_labels=
                  (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:30 - line:60:30] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:14 function_ref=single specialized=no)
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:38 - line:60:39])))
              (brace_stmt
                (if_stmt
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 - line:61:28] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 - line:61:28] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 - line:61:25] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 - line:61:28] nothrow
                        (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 - line:61:25] nothrow
                          (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 - line:61:25] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                          (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:25 - line:61:25] typerepr='Character'))
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 - line:61:28]
                          (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:20 - line:61:20] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:23 function_ref=unapplied specialized=no)
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:61:28 - line:61:28] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                    (tuple_expr implicit type='()'))
                  (brace_stmt
                    (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:21 - line:62:45] nothrow  arg_labels=_:
                      (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:21 - line:62:28] nothrow
                        (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:28 - line:62:28] decl=Swift.(file).String.append function_ref=single specialized=no)
                        (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:21 - line:62:21]
                          (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:21 - line:62:21] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:17 function_ref=unapplied specialized=no)))
                      (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:34 - line:62:45]
                        (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:35 - line:62:44]
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:35 - line:62:43] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:35 - line:62:35] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:62:42 - line:62:43])))))
                    (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 - line:63:48] nothrow  arg_labels=_:
                      (dot_syntax_call_expr type='(String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 - line:63:28] nothrow
                        (declref_expr type='(inout String) -> (String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:28 - line:63:28] decl=Swift.(file).String.append function_ref=single specialized=no)
                        (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 - line:63:21]
                          (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:21 - line:63:21] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:17 function_ref=unapplied specialized=no)))
                      (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:34 - line:63:48]
                        (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:35 - line:63:47] nothrow  arg_labels=_:
                          (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:35 - line:63:35] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:31:14 function_ref=single specialized=no)
                          (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:43 - line:63:47]
                            (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:63:44 - line:63:44] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                    (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:21 - line:64:45] nothrow  arg_labels=_:
                      (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:21 - line:64:28] nothrow
                        (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:28 - line:64:28] decl=Swift.(file).String.append function_ref=single specialized=no)
                        (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:21 - line:64:21]
                          (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:21 - line:64:21] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:17 function_ref=unapplied specialized=no)))
                      (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:34 - line:64:45]
                        (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:35 - line:64:44]
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:35 - line:64:43] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:35 - line:64:35] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:64:42 - line:64:43]))))))
                  (if_stmt
                    (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:65] nothrow  arg_labels=
                      (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:65] nothrow
                        (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 - line:65:54] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                        (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:65] nothrow
                          (dot_syntax_call_expr implicit type='(Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 - line:65:54] nothrow
                            (declref_expr type='(Bool.Type) -> (Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 - line:65:54] decl=Swift.(file).Bool.|| function_ref=unapplied specialized=no)
                            (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:54 - line:65:54] typerepr='Bool'))
                          (tuple_expr implicit type='(Bool, @autoclosure () throws -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:65]
                            (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:50] nothrow
                              (dot_syntax_call_expr implicit type='(Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:39 - line:65:39] nothrow
                                (declref_expr type='(Bool.Type) -> (Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:39 - line:65:39] decl=Swift.(file).Bool.|| function_ref=unapplied specialized=no)
                                (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:39 - line:65:39] typerepr='Bool'))
                              (tuple_expr implicit type='(Bool, @autoclosure () throws -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:50]
                                (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:35] nothrow
                                  (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:32 - line:65:32] nothrow
                                    (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:32 - line:65:32] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                                    (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:32 - line:65:32] typerepr='Character'))
                                  (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:35]
                                    (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:27 - line:65:27] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:23 function_ref=unapplied specialized=no)
                                    (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:35 - line:65:35] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
                                (autoclosure_expr implicit type='() throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:42 - line:65:50] discriminator=0 captures=(char<noescape>)

                                  (parameter_list)
                                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:42 - line:65:50] nothrow
                                    (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:47 - line:65:47] nothrow
                                      (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:47 - line:65:47] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                                      (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:47 - line:65:47] typerepr='Character'))
                                    (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:42 - line:65:50]
                                      (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:42 - line:65:42] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:23 function_ref=unapplied specialized=no)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:50 - line:65:50] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))
                            (autoclosure_expr implicit type='() throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:57 - line:65:65] discriminator=1 captures=(char<noescape>)

                              (parameter_list)
                              (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:57 - line:65:65] nothrow
                                (dot_syntax_call_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:62 - line:65:62] nothrow
                                  (declref_expr type='(Character.Type) -> (Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:62 - line:65:62] decl=Swift.(file).Character.== function_ref=unapplied specialized=no)
                                  (type_expr implicit type='Character.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:62 - line:65:62] typerepr='Character'))
                                (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:57 - line:65:65]
                                  (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:57 - line:65:57] decl=main.(file).TokenizerImpl.func decl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:60:23 function_ref=unapplied specialized=no)
                                  (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:65 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:65 - line:65:65] encoding=utf8 value="\n" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))))
                      (tuple_expr implicit type='()'))
                    (brace_stmt
                      (return_stmt
                        (load_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:79 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:79 - line:65:79]
                          (declref_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:79 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:65:79 - line:65:79] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:17 function_ref=unapplied specialized=no))))))
                (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:17 - line:66:41] nothrow  arg_labels=_:
                  (dot_syntax_call_expr type='(Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:17 - line:66:24] nothrow
                    (declref_expr type='(inout String) -> (Character) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:24 - line:66:24] decl=Swift.(file).String.append function_ref=single specialized=no)
                    (inout_expr implicit type='inout String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:17 - line:66:17]
                      (declref_expr type='@lvalue String' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:17 - line:66:17] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:17 function_ref=unapplied specialized=no)))
                  (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:30 - line:66:41]
                    (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:31 - line:66:40]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:31 - line:66:39] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:31 - line:66:31] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:66:38 - line:66:39])))))))
            (return_stmt
              (load_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:20 - line:68:20]
                (declref_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:68:20 - line:68:20] decl=main.(file).TokenizerImpl.func decl.func decl.result@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:59:17 function_ref=unapplied specialized=no)))))

        (while_stmt
          (pattern
            (optional_some_element implicit type='Character?'
              (pattern_let implicit type='Character'
                (pattern_named type='Character' 'char')))
            (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:26 - line:71:41] nothrow  arg_labels=
              (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:26 - line:71:26] decl=main.(file).TokenizerImpl.func decl.skipWhiteSpace()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:23:14 function_ref=single specialized=no)
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:40 - line:71:41])))
          (brace_stmt
            (if_stmt
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:38] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:38] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 - line:72:27] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:38] nothrow
                    (dot_syntax_call_expr implicit type='(Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 - line:72:27] nothrow
                      (declref_expr type='(Bool.Type) -> (Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 - line:72:27] decl=Swift.(file).Bool.&& function_ref=unapplied specialized=no)
                      (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:27 - line:72:27] typerepr='Bool'))
                    (tuple_expr implicit type='(Bool, @autoclosure () throws -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:38]
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:25] nothrow
                        (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:22 - line:72:22] decl=Swift.(file).== function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:25]
                          (load_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:16]
                            (declref_expr type='@lvalue Int' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:16 - line:72:16] decl=main.(file).TokenizerImpl.func decl.index@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:9:13 function_ref=unapplied specialized=no))
                          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 - line:72:25] nothrow  arg_labels=_builtinIntegerLiteral:
                            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 - line:72:25] nothrow
                              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 - line:72:25] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 - line:72:25] typerepr='Int'))
                            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 - line:72:25] names=_builtinIntegerLiteral
                              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:25 - line:72:25] value=0)))))
                      (autoclosure_expr implicit type='() throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:30 - line:72:38] discriminator=0 captures=(char<noescape>)

                        (parameter_list)
                        (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:30 - line:72:38] nothrow
                          (declref_expr type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:35 - line:72:35] decl=Swift.(file).!= [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                          (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:30 - line:72:38]
                            (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:30 - line:72:30] decl=main.(file).TokenizerImpl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:19 function_ref=unapplied specialized=no)
                            (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:72:38 - line:72:38] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))))
                (tuple_expr implicit type='()'))
              (brace_stmt
                (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:17 - line:73:70] nothrow  arg_labels=_:
                  (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:17 - line:73:17] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                  (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:27 - line:73:70] sourceIsScalar elements=[0, -3, -3] variadic_sources=[]
                    (paren_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:27 - line:73:70]
                      (autoclosure_expr implicit type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:28 - line:73:28] discriminator=1

                        (parameter_list)
                        (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:73:28 - line:73:28] encoding=utf8 value="AST does not start with left parenthesis" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))))
            (switch_stmt
              (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:75:20 - line:75:20] decl=main.(file).TokenizerImpl.func decl.char@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:71:19 function_ref=unapplied specialized=no)
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18] encoding=utf8 value="(" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 - line:76:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:76:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:17 - line:77:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:21 - line:77:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:21 - line:77:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:77:28 - line:77:29])))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:17 - line:78:46] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:17 - line:78:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:24 - line:78:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:17 - line:78:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:17 - line:78:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='(Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:30 - line:78:46]
                      (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:31 - line:78:37] decl=main.(file).Token.leftParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 direct_to_storage
                        (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:78:31 - line:78:31] typerepr='Token'))))))
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 - line:79:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:79:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:17 - line:80:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:21 - line:80:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:21 - line:80:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:80:28 - line:80:29])))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:17 - line:81:47] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:17 - line:81:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:24 - line:81:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:17 - line:81:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:17 - line:81:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='(Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:30 - line:81:47]
                      (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:31 - line:81:37] decl=main.(file).Token.rightParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 direct_to_storage
                        (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:81:31 - line:81:31] typerepr='Token'))))))
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18] encoding=utf8 value="\"" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 - line:82:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:82:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:17 - line:83:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 - line:83:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:21 - line:83:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:83:28 - line:83:29])))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:17 - line:84:59] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:17 - line:84:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:24 - line:84:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:17 - line:84:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:17 - line:84:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:30 - line:84:59]
                      (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:31 - line:84:58]
                        (call_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:31 - line:84:58] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:31 - line:84:37] nothrow
                            (declref_expr type='(Token.Type) -> (String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:37 - line:84:37] decl=main.(file).Token.string@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:17 function_ref=single specialized=no)
                            (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:31 - line:84:31] typerepr='Token'))
                          (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:43 - line:84:58]
                            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:44 - line:84:57] nothrow  arg_labels=_:
                              (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:44 - line:84:44] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:31:14 function_ref=single specialized=no)
                              (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:52 - line:84:57]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:53 - line:84:53] encoding=utf8 value="\"" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:63 - line:84:63])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:67 - line:84:75] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:67 - line:84:67] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:84:74 - line:84:75])))))
              (case_stmt
                (case_label_item
                (pattern_expr type='Character'
                  (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18] nothrow  arg_labels=
                    (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18] nothrow
                      (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                      (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18] nothrow
                        (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                        (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18]
                          (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                          (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 - line:85:18] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:85:18 function_ref=unapplied specialized=no))))
                    (tuple_expr implicit type='()'))))
                (brace_stmt
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:17 - line:86:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:21 - line:86:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:21 - line:86:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:86:28 - line:86:29])))
                  (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:17 - line:87:58] nothrow  arg_labels=_:
                    (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:17 - line:87:24] nothrow
                      (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:24 - line:87:24] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                      (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:17 - line:87:17]
                        (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:17 - line:87:17] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                    (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:30 - line:87:58]
                      (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:31 - line:87:57]
                        (call_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:31 - line:87:57] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:31 - line:87:37] nothrow
                            (declref_expr type='(Token.Type) -> (String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:37 - line:87:37] decl=main.(file).Token.string@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:17 function_ref=single specialized=no)
                            (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:31 - line:87:31] typerepr='Token'))
                          (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:43 - line:87:57]
                            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:44 - line:87:56] nothrow  arg_labels=_:
                              (declref_expr type='(Character) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:44 - line:87:44] decl=main.(file).TokenizerImpl.func decl.getUntil@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:31:14 function_ref=single specialized=no)
                              (paren_expr type='(Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:52 - line:87:56]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:87:53 - line:87:53] encoding=utf8 value="'" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
                  (assign_expr
                    (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:17 - line:88:17])
                    (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:21 - line:88:29] nothrow  arg_labels=
                      (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:21 - line:88:21] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                      (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:88:28 - line:88:29])))))
              (case_stmt
                (case_label_item
                (pattern_any type='Character'))
                (brace_stmt
                  (pattern_binding_decl
                    (pattern_named type='String' 'key')
                    (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:27 - line:92:17] nothrow  arg_labels=_:
                      (declref_expr type='((Character) -> Bool) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:27 - line:90:27] decl=main.(file).TokenizerImpl.func decl.getUntil(closure:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:35:14 function_ref=single specialized=no)
                      (tuple_shuffle_expr implicit type='(closure: (Character) -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:35 - line:92:17] sourceIsScalar elements=[0] variadic_sources=[]
                        (paren_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:35 - line:92:17] trailing-closure
                          (closure_expr type='(Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:38 - line:92:17] discriminator=1 single-expression
                            (parameter_list
                              (parameter "c" type='(Character)'))
                            (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:21 - line:91:69] nothrow
                              (declref_expr type='(Array.Index?, Array.Index?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:66 - line:91:66] decl=Swift.(file).!= [with Array.Index[Int: Equatable module Swift]] function_ref=unapplied specialized=no)
                              (tuple_expr implicit type='(Array.Index?, Array.Index?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:21 - line:91:69]
                                (call_expr type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:21 - line:91:64] nothrow  arg_labels=of:
                                  (dot_syntax_call_expr type='(Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:21 - line:91:53] nothrow
                                    (declref_expr type='([Character]) -> (Character) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:53 - line:91:53] decl=Swift.(file).Collection.index(of:) [with [Character][[Character]: specialize <Character> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<Character>>[IndexingIterator<Array<Character>>: specialize <Array<Character>, Array.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character[Character: Equatable module Swift], ArraySlice<Character>[ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<Character>: specialize <Character> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<Character>>[IndexingIterator<ArraySlice<Character>>: specialize <ArraySlice<Character>, ArraySlice.Index, ArraySlice<Character>, Character> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Character, ArraySlice<Character>, Character, Character] function_ref=single specialized=no)
                                    (array_expr type='[Character]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:21 - line:91:51]
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:22 - line:91:22] encoding=utf8 value="=" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:27 - line:91:27] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:32 - line:91:32] encoding=utf8 value=")" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:37 - line:91:37] encoding=utf8 value="\n" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:43 - line:91:43] encoding=utf8 value=":" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                      (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:48 - line:91:48] encoding=utf8 value="@" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))
                                  (tuple_expr type='(of: Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:58 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:58 - line:91:64] names=of
                                    (declref_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:63 - line:91:63] decl=main.(file).TokenizerImpl.func decl.explicit closure discriminator=1.c@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:40 function_ref=unapplied specialized=no)))
                                (call_expr implicit type='Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 - line:91:69] nothrow  arg_labels=nilLiteral:
                                  (constructor_ref_call_expr implicit type='(()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 - line:91:69] nothrow
                                    (declref_expr implicit type='(Optional<Array.Index>.Type) -> (()) -> Array.Index?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 - line:91:69] decl=Swift.(file).Optional.init(nilLiteral:) [with Array.Index] function_ref=single specialized=no)
                                    (type_expr implicit type='Array.Index?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 - line:91:69] typerepr='Array.Index?'))
                                  (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 - line:91:69] names=nilLiteral
                                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:91:69 - line:91:69]))))))))))

                  (var_decl "key" type='String' access=private let storage_kind=stored)

                  (switch_stmt
                    (force_value_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:24 - line:93:34]
                      (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:24 - line:93:33] nothrow  arg_labels=
                        (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:24 - line:93:24] decl=main.(file).TokenizerImpl.func decl.nextChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:17:14 function_ref=single specialized=no)
                        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:93:32 - line:93:33])))
                    (case_stmt
                      (case_label_item
                      (pattern_expr type='Character'
                        (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22] nothrow  arg_labels=
                          (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22] nothrow
                            (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                            (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22] nothrow
                              (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                              (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22] encoding=utf8 value="@" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 - line:94:22] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:94:22 function_ref=unapplied specialized=no))))
                          (tuple_expr implicit type='()'))))
                      (brace_stmt
                        (assign_expr
                          (discard_assignment_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:21 - line:95:21])
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:25 - line:95:37] nothrow  arg_labels=
                            (declref_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:25 - line:95:25] decl=main.(file).TokenizerImpl.func decl.getBalanced()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:45:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:95:36 - line:95:37])))))
                    (case_stmt
                      (case_label_item
                      (pattern_expr type='Character'
                        (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] nothrow  arg_labels=
                          (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] nothrow
                            (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                            (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] nothrow
                              (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                              (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] encoding=utf8 value="=" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 - line:96:22] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:96:22 function_ref=unapplied specialized=no))))
                          (tuple_expr implicit type='()'))))
                      (brace_stmt
                        (assign_expr
                          (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:21 - line:97:21])
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:25 - line:97:33] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:25 - line:97:25] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:97:32 - line:97:33])))
                        (pattern_binding_decl
                          (pattern_named type='String' 'value')
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:33 - line:98:45] nothrow  arg_labels=
                            (declref_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:33 - line:98:33] decl=main.(file).TokenizerImpl.func decl.getBalanced()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:45:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:44 - line:98:45])))

                        (var_decl "value" type='String' access=private let storage_kind=stored)

                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:61] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:28] nothrow
                            (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:28 - line:99:28] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                            (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:21]
                              (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:21 - line:99:21] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                          (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:34 - line:99:61]
                            (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:35 - line:99:60]
                              (call_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:35 - line:99:60] nothrow  arg_labels=_:_:
                                (dot_syntax_call_expr type='(String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:35 - line:99:41] nothrow
                                  (declref_expr type='(Token.Type) -> (String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:41 - line:99:41] decl=main.(file).Token.keyValue@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:17 function_ref=single specialized=no)
                                  (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:35 - line:99:35] typerepr='Token'))
                                (tuple_expr type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:49 - line:99:60] names='',''
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:50 - line:99:50] decl=main.(file).TokenizerImpl.func decl.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:21 function_ref=unapplied specialized=no)
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:99:55 - line:99:55] decl=main.(file).TokenizerImpl.func decl.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:98:25 function_ref=unapplied specialized=no))))))))
                    (case_stmt
                      (case_label_item
                      (pattern_expr type='Character'
                        (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22] nothrow  arg_labels=
                          (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22] nothrow
                            (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                            (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22] nothrow
                              (declref_expr implicit type='(Character, Character) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22] decl=Swift.(file).~= [with Character[Character: Equatable module Swift]] function_ref=compound specialized=no)
                              (tuple_expr implicit type='(Character, Character)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22]
                                (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22] encoding=utf8 value=":" builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                                (declref_expr implicit type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 - line:100:22] decl=main.(file).TokenizerImpl.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:100:22 function_ref=unapplied specialized=no))))
                          (tuple_expr implicit type='()'))))
                      (brace_stmt
                        (assign_expr
                          (discard_assignment_expr type='@lvalue Character?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:21 - line:101:21])
                          (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:25 - line:101:33] nothrow  arg_labels=
                            (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:25 - line:101:25] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:32 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:101:32 - line:101:33])))
                        (guard_stmt
                          (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 - line:102:40] nothrow  arg_labels=
                            (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 - line:102:40] nothrow
                              (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:37 - line:102:37] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                              (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 - line:102:40] nothrow
                                (declref_expr type='(Character?, Character?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:37 - line:102:37] decl=Swift.(file).== [with Character[Character: Equatable module Swift]] function_ref=unapplied specialized=no)
                                (tuple_expr implicit type='(Character?, Character?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 - line:102:40]
                                  (call_expr type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 - line:102:35] nothrow  arg_labels=
                                    (declref_expr type='() -> Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:27 - line:102:27] decl=main.(file).TokenizerImpl.func decl.getChar()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:10:14 function_ref=single specialized=no)
                                    (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:34 - line:102:35]))
                                  (inject_into_optional implicit type='Character?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:40 - line:102:40]
                                    (string_literal_expr type='Character' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:102:40 - line:102:40] encoding=utf8 value=" " builtin_initializer=Swift.(file).Character.init(_builtinExtendedGraphemeClusterLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
                            (tuple_expr implicit type='()'))
                          (brace_stmt
                            (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:25 - line:103:36] nothrow  arg_labels=
                              (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:25 - line:103:25] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                              (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:35 - line:103:36] elements=[-1, -3, -3] variadic_sources=[]
                                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:103:35 - line:103:36])))))
                        (pattern_binding_decl
                          (pattern_named type='String' 'value')
                          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:105:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:105:33 - line:105:45] nothrow  arg_labels=
                            (declref_expr type='() -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:105:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:105:33 - line:105:33] decl=main.(file).TokenizerImpl.func decl.getBalanced()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:45:14 function_ref=single specialized=no)
                            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:105:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:105:44 - line:105:45])))

                        (var_decl "value" type='String' access=private let storage_kind=stored)

                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:21 - line:106:61] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:21 - line:106:28] nothrow
                            (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:28 - line:106:28] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                            (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:21 - line:106:21]
                              (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:21 - line:106:21] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                          (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:34 - line:106:61]
                            (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:35 - line:106:60]
                              (call_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:35 - line:106:60] nothrow  arg_labels=_:_:
                                (dot_syntax_call_expr type='(String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:35 - line:106:41] nothrow
                                  (declref_expr type='(Token.Type) -> (String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:41 - line:106:41] decl=main.(file).Token.keyValue@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:17 function_ref=single specialized=no)
                                  (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:35 - line:106:35] typerepr='Token'))
                                (tuple_expr type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:49 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:49 - line:106:60] names='',''
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:50 - line:106:50] decl=main.(file).TokenizerImpl.func decl.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:21 function_ref=unapplied specialized=no)
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:106:55 - line:106:55] decl=main.(file).TokenizerImpl.func decl.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:105:25 function_ref=unapplied specialized=no))))))))
                    (case_stmt
                      (case_label_item
                      (pattern_any type='Character'))
                      (brace_stmt
                        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:21 - line:108:52] nothrow  arg_labels=_:
                          (dot_syntax_call_expr type='(Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:21 - line:108:28] nothrow
                            (declref_expr type='(inout Array<Token>) -> (Token) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:28 - line:108:28] decl=Swift.(file).Array.append [with Token] function_ref=single specialized=no)
                            (inout_expr implicit type='inout Array<Token>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:21 - line:108:21]
                              (declref_expr type='@lvalue [Token]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:21 - line:108:21] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))
                          (paren_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:34 - line:108:52]
                            (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:35 - line:108:51]
                              (call_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:35 - line:108:51] nothrow  arg_labels=_:
                                (dot_syntax_call_expr type='(String) -> Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:35 - line:108:41] nothrow
                                  (declref_expr type='(Token.Type) -> (String) -> Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:41 - line:108:41] decl=main.(file).Token.symbol@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:17 function_ref=single specialized=no)
                                  (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:35 - line:108:35] typerepr='Token'))
                                (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:47 - line:108:51]
                                  (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:108:48 - line:108:48] decl=main.(file).TokenizerImpl.func decl.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:90:21 function_ref=unapplied specialized=no))))))))))))))
        (return_stmt
          (load_expr implicit type='[Token]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:16 - line:113:16]
            (declref_expr type='@lvalue [Token]' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:113:16 - line:113:16] decl=main.(file).TokenizerImpl.func decl.tokens@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Tokenizer.swift:7:13 function_ref=unapplied specialized=no)))))
    (destructor_decl implicit "deinit" type='(TokenizerImpl) -> ()' interface type='(TokenizerImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='TokenizerImpl'))
      (brace_stmt))
    (constructor_decl implicit "init()" type='(TokenizerImpl.Type) -> () -> TokenizerImpl' access=internal designated
      (parameter_list
        (parameter "self" type='TokenizerImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt)))))
(source_file
  (struct_decl "AST" type='AST.Type' access=internal @_fixed_layout
    (pattern_binding_decl
      (pattern_typed type='String'
        (pattern_named type='String' 'type')
        (type_ident
          (component id='String' bind=Swift.(file).String))))
    (var_decl "type" type='String' access=internal let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7fdb8703cc50' type='(AST) -> () -> String' interface type='(AST) -> () -> String' access=internal getter_for=type
        (parameter_list
          (parameter "self" type='AST'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='String' decl=main.(file).AST.type@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:2:9 direct_to_storage
              (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:2:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='Bool'
        (pattern_named type='Bool' 'implicit')
        (type_ident
          (component id='Bool' bind=Swift.(file).Bool))))
    (var_decl "implicit" type='Bool' access=internal let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7fdb8703cfc0' type='(AST) -> () -> Bool' interface type='(AST) -> () -> Bool' access=internal getter_for=implicit
        (parameter_list
          (parameter "self" type='AST'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Bool' decl=main.(file).AST.implicit@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:3:9 direct_to_storage
              (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:3:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='String?'
        (pattern_named type='String?' 'name')
))
    (var_decl "name" type='String?' access=internal let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7fdb8703e720' type='(AST) -> () -> String?' interface type='(AST) -> () -> Optional<String>' access=internal getter_for=name
        (parameter_list
          (parameter "self" type='AST'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='String?' decl=main.(file).AST.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 direct_to_storage
              (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='[String : String]'
        (pattern_named type='[String : String]' 'attributes')
        (type_dictionary
          (type_ident
            (component id='String' bind=Swift.(file).String))
          (type_ident
            (component id='String' bind=Swift.(file).String)))))
    (var_decl "attributes" type='[String : String]' access=internal let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7fdb8703ea70' type='(AST) -> () -> [String : String]' interface type='(AST) -> () -> Dictionary<String, String>' access=internal getter_for=attributes
        (parameter_list
          (parameter "self" type='AST'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='[String : String]' decl=main.(file).AST.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 direct_to_storage
              (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='[AST]'
        (pattern_named type='[AST]' 'elements')
        (type_array
          (type_ident
            (component id='AST' bind=main.(file).AST@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:1:8)))))
    (var_decl "elements" type='[AST]' access=internal let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7fdb8703edc0' type='(AST) -> () -> [AST]' interface type='(AST) -> () -> Array<AST>' access=internal getter_for=elements
        (parameter_list
          (parameter "self" type='AST'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='[AST]' decl=main.(file).AST.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:6:9 direct_to_storage
              (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:6:9 function_ref=unapplied specialized=no))))))
    (constructor_decl "init(type:implicit:name:attributes:elements:)" type='(AST.Type) -> (String, Bool, String?, [String : String], [AST]) -> AST' access=internal designated
      (parameter_list
        (parameter "self" type='inout AST' mutable))
      (parameter_list
        (parameter "type" apiName=type type='String')
        (parameter "implicit" apiName=implicit type='Bool' default_arg=normal expression=
          (call_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 - line:8:41] nothrow  arg_labels=_builtinBooleanLiteral:
            (constructor_ref_call_expr implicit type='(Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 - line:8:41] nothrow
              (declref_expr implicit type='(Bool.Type) -> (Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 - line:8:41] decl=Swift.(file).Bool.init(_builtinBooleanLiteral:) function_ref=single specialized=no)
              (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 - line:8:41] typerepr='Bool'))
            (tuple_expr implicit type='(_builtinBooleanLiteral: Builtin.Int1)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 - line:8:41] names=_builtinBooleanLiteral
              (boolean_literal_expr type='Builtin.Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:41 - line:8:41] value=false))))
        (parameter "name" apiName=name type='String?' default_arg=normal expression=
          (call_expr implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 - line:8:64] nothrow  arg_labels=nilLiteral:
            (constructor_ref_call_expr implicit type='(()) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 - line:8:64] nothrow
              (declref_expr implicit type='(Optional<String>.Type) -> (()) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 - line:8:64] decl=Swift.(file).Optional.init(nilLiteral:) [with String] function_ref=single specialized=no)
              (type_expr implicit type='String?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 - line:8:64] typerepr='String?'))
            (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 - line:8:64] names=nilLiteral
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:64 - line:8:64]))))
        (parameter "attributes" apiName=attributes type='[String : String]' default_arg=normal expression=
          (dictionary_expr type='[String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:99 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:99 - line:8:101]))
        (parameter "elements" apiName=elements type='[AST]' default_arg=normal expression=
          (array_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:122 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:122 - line:8:123])))
      (brace_stmt
        (assign_expr
          (member_ref_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:9:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:9:9 - line:9:14] decl=main.(file).AST.type@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:2:9 direct_to_storage
            (declref_expr type='@lvalue AST' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:9:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:9:9 - line:9:9] decl=main.(file).AST.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:5 function_ref=unapplied specialized=no))
          (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:9:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:9:21 - line:9:21] decl=main.(file).AST.init.type@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:10 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue Bool' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:10:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:10:9 - line:10:14] decl=main.(file).AST.implicit@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:3:9 direct_to_storage
            (declref_expr type='@lvalue AST' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:10:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:10:9 - line:10:9] decl=main.(file).AST.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:5 function_ref=unapplied specialized=no))
          (declref_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:10:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:10:25 - line:10:25] decl=main.(file).AST.init.implicit@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:24 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue String?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:11:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:11:9 - line:11:14] decl=main.(file).AST.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 direct_to_storage
            (declref_expr type='@lvalue AST' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:11:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:11:9 - line:11:9] decl=main.(file).AST.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:5 function_ref=unapplied specialized=no))
          (declref_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:11:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:11:21 - line:11:21] decl=main.(file).AST.init.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:48 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue [String : String]' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:12:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:12:9 - line:12:14] decl=main.(file).AST.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 direct_to_storage
            (declref_expr type='@lvalue AST' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:12:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:12:9 - line:12:9] decl=main.(file).AST.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:5 function_ref=unapplied specialized=no))
          (declref_expr type='[String : String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:12:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:12:27 - line:12:27] decl=main.(file).AST.init.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:69 function_ref=unapplied specialized=no))
        (assign_expr
          (member_ref_expr type='@lvalue [AST]' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:13:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:13:9 - line:13:14] decl=main.(file).AST.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:6:9 direct_to_storage
            (declref_expr type='@lvalue AST' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:13:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:13:9 - line:13:9] decl=main.(file).AST.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:5 function_ref=unapplied specialized=no))
          (declref_expr type='[AST]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:13:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:13:25 - line:13:25] decl=main.(file).AST.init.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:8:104 function_ref=unapplied specialized=no))
        (return_stmt)))
    (func_decl implicit 'anonname=0x7fdb8703cc50' type='(AST) -> () -> String' interface type='(AST) -> () -> String' access=internal getter_for=type
      (parameter_list
        (parameter "self" type='AST'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='String' decl=main.(file).AST.type@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:2:9 direct_to_storage
            (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:2:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7fdb8703cfc0' type='(AST) -> () -> Bool' interface type='(AST) -> () -> Bool' access=internal getter_for=implicit
      (parameter_list
        (parameter "self" type='AST'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Bool' decl=main.(file).AST.implicit@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:3:9 direct_to_storage
            (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:3:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7fdb8703e720' type='(AST) -> () -> String?' interface type='(AST) -> () -> Optional<String>' access=internal getter_for=name
      (parameter_list
        (parameter "self" type='AST'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='String?' decl=main.(file).AST.name@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 direct_to_storage
            (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:4:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7fdb8703ea70' type='(AST) -> () -> [String : String]' interface type='(AST) -> () -> Dictionary<String, String>' access=internal getter_for=attributes
      (parameter_list
        (parameter "self" type='AST'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='[String : String]' decl=main.(file).AST.attributes@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 direct_to_storage
            (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:5:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7fdb8703edc0' type='(AST) -> () -> [AST]' interface type='(AST) -> () -> Array<AST>' access=internal getter_for=elements
      (parameter_list
        (parameter "self" type='AST'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='[AST]' decl=main.(file).AST.elements@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:6:9 direct_to_storage
            (declref_expr implicit type='AST' decl=main.(file).AST.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/AST.swift:6:9 function_ref=unapplied specialized=no)))))))
(source_file
  (class_decl "Token" type='Token.Type' access=internal @_fixed_layout inherits: Equatable
    (class_decl "LeftParen" type='Token.LeftParen.Type' access=private @_fixed_layout inherits: Token
      (destructor_decl implicit "deinit" type='(Token.LeftParen) -> ()' interface type='(Token.LeftParen) -> () -> ()' access=private @objc
        (parameter_list
          (parameter "self" type='Token.LeftParen'))
        (brace_stmt))
      (constructor_decl implicit "init()" type='(Token.LeftParen.Type) -> () -> Token.LeftParen' access=internal override=main.(file).Token.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7 designated
        (parameter_list
          (parameter "self" type='Token.LeftParen'))
        (parameter_list)
        (brace_stmt
          (rebind_self_in_constructor_expr implicit type='()'
            (call_expr implicit type='Token' nothrow  arg_labels=
              (dot_syntax_call_expr implicit type='() -> Token' super nothrow
                (other_constructor_ref_expr implicit type='(Token) -> () -> Token' decl=main.(file).Token.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7)
                (super_ref_expr implicit type='Token'))
              (tuple_expr implicit type='()')))
          (return_stmt))))
    (pattern_binding_decl
      (pattern_typed type='Token'
        (pattern_named type='Token' 'leftParen')
        (type_ident
          (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7)))
      (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 - line:3:45]
        (call_expr type='Token.LeftParen' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 - line:3:45] nothrow  arg_labels=
          (constructor_ref_call_expr type='() -> Token.LeftParen' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 - line:3:35] nothrow
            (declref_expr implicit type='(Token.LeftParen.Type) -> () -> Token.LeftParen' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 - line:3:35] decl=main.(file).Token.LeftParen.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:2:36 function_ref=single specialized=no)
            (type_expr type='Token.LeftParen.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:35 - line:3:35] typerepr='LeftParen'))
          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:44 - line:3:45]))))
    (var_decl "leftParen" type='Token' access=internal final type let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7f9d2fccba00' type='(Token.Type) -> () -> Token' interface type='(Token.Type) -> () -> Token' access=internal final type getter_for=leftParen
        (parameter_list
          (parameter "self" type='Token.Type'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Token' decl=main.(file).Token.leftParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 direct_to_storage
              (declref_expr implicit type='Token.Type' decl=main.(file).Token.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 function_ref=unapplied specialized=no))))))
    (class_decl "RightParen" type='Token.RightParen.Type' access=private @_fixed_layout inherits: Token
      (destructor_decl implicit "deinit" type='(Token.RightParen) -> ()' interface type='(Token.RightParen) -> () -> ()' access=private @objc
        (parameter_list
          (parameter "self" type='Token.RightParen'))
        (brace_stmt))
      (constructor_decl implicit "init()" type='(Token.RightParen.Type) -> () -> Token.RightParen' access=internal override=main.(file).Token.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7 designated
        (parameter_list
          (parameter "self" type='Token.RightParen'))
        (parameter_list)
        (brace_stmt
          (rebind_self_in_constructor_expr implicit type='()'
            (call_expr implicit type='Token' nothrow  arg_labels=
              (dot_syntax_call_expr implicit type='() -> Token' super nothrow
                (other_constructor_ref_expr implicit type='(Token) -> () -> Token' decl=main.(file).Token.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7)
                (super_ref_expr implicit type='Token'))
              (tuple_expr implicit type='()')))
          (return_stmt))))
    (pattern_binding_decl
      (pattern_typed type='Token'
        (pattern_named type='Token' 'rightParen')
        (type_ident
          (component id='Token' bind=main.(file).Token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7)))
      (derived_to_base_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 - line:5:47]
        (call_expr type='Token.RightParen' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 - line:5:47] nothrow  arg_labels=
          (constructor_ref_call_expr type='() -> Token.RightParen' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 - line:5:36] nothrow
            (declref_expr implicit type='(Token.RightParen.Type) -> () -> Token.RightParen' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 - line:5:36] decl=main.(file).Token.RightParen.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:4:37 function_ref=single specialized=no)
            (type_expr type='Token.RightParen.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:36 - line:5:36] typerepr='RightParen'))
          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:46 - line:5:47]))))
    (var_decl "rightParen" type='Token' access=internal final type let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7f9d2fcceb00' type='(Token.Type) -> () -> Token' interface type='(Token.Type) -> () -> Token' access=internal final type getter_for=rightParen
        (parameter_list
          (parameter "self" type='Token.Type'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Token' decl=main.(file).Token.rightParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 direct_to_storage
              (declref_expr implicit type='Token.Type' decl=main.(file).Token.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 function_ref=unapplied specialized=no))))))
    (class_decl "String" type='Token.String.Type' access=internal @_fixed_layout inherits: Token
      (pattern_binding_decl
        (pattern_typed type='String'
          (pattern_named type='String' 'value')
          (type_ident
            (component id='Swift' bind=Swift.Swift)
            (component id='String' bind=Swift.(file).String))))
      (var_decl "value" type='String' access=internal final let storage_kind=stored_with_trivial_accessors
        (func_decl implicit 'anonname=0x7f9d2fcd1db0' type='(Token.String) -> () -> String' interface type='(Token.String) -> () -> String' access=internal final getter_for=value
          (parameter_list
            (parameter "self" type='Token.String'))
          (parameter_list)
          (brace_stmt
            (return_stmt
              (member_ref_expr implicit type='String' decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
                (declref_expr implicit type='Token.String' decl=main.(file).Token.String.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 function_ref=unapplied specialized=no))))))
      (constructor_decl "init(_:)" type='(Token.String.Type) -> (String) -> Token.String' access=internal designated
        (parameter_list
          (parameter "self" type='Token.String'))
        (parameter_list
          (parameter "value" type='String'))
        (brace_stmt
          (assign_expr
            (member_ref_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:39 - line:9:44] decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
              (declref_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:39 - line:9:39] decl=main.(file).Token.String.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:9 function_ref=unapplied specialized=no))
            (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:52 - line:9:52] decl=main.(file).Token.String.init.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:16 function_ref=unapplied specialized=no))
          (return_stmt)))
      (destructor_decl implicit "deinit" type='(Token.String) -> ()' interface type='(Token.String) -> () -> ()' access=internal @objc
        (parameter_list
          (parameter "self" type='Token.String'))
        (brace_stmt))
      (func_decl implicit 'anonname=0x7f9d2fcd1db0' type='(Token.String) -> () -> String' interface type='(Token.String) -> () -> String' access=internal final getter_for=value
        (parameter_list
          (parameter "self" type='Token.String'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='String' decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
              (declref_expr implicit type='Token.String' decl=main.(file).Token.String.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 function_ref=unapplied specialized=no)))))
      (constructor_decl implicit "init()" type='(Token.String.Type) -> () -> Token.String' access=internal override=main.(file).Token.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7 designated
        (parameter_list
          (parameter "self" type='Token.String'))
        (parameter_list)
        (brace_stmt
          (call_expr implicit type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 - line:7:11] nothrow  arg_labels=className:
            (declref_expr implicit type='(StaticString, StaticString, StaticString, UInt, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 - line:7:11] decl=Swift.(file)._unimplementedInitializer(className:initName:file:line:column:) function_ref=single specialized=no)
            (tuple_shuffle_expr implicit type='(className: StaticString, initName: StaticString, file: StaticString, line: UInt, column: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 - line:7:11] elements=[0, -3, -3, -3, -3] variadic_sources=[]
              (tuple_expr implicit type='(className: StaticString)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 - line:7:11] names=className
                (string_literal_expr implicit type='StaticString' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11 - line:7:11] encoding=utf8 value="main.String" builtin_initializer=Swift.(file).StaticString.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
          (return_stmt))))
    (class_decl "Symbol" type='Token.Symbol.Type' access=internal @_fixed_layout inherits: Token
      (pattern_binding_decl
        (pattern_typed type='String'
          (pattern_named type='String' 'value')
          (type_ident
            (component id='Swift' bind=Swift.Swift)
            (component id='String' bind=Swift.(file).String))))
      (var_decl "value" type='String' access=internal final let storage_kind=stored_with_trivial_accessors
        (func_decl implicit 'anonname=0x7f9d2fcd3b00' type='(Token.Symbol) -> () -> String' interface type='(Token.Symbol) -> () -> String' access=internal final getter_for=value
          (parameter_list
            (parameter "self" type='Token.Symbol'))
          (parameter_list)
          (brace_stmt
            (return_stmt
              (member_ref_expr implicit type='String' decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
                (declref_expr implicit type='Token.Symbol' decl=main.(file).Token.Symbol.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 function_ref=unapplied specialized=no))))))
      (constructor_decl "init(_:)" type='(Token.Symbol.Type) -> (String) -> Token.Symbol' access=internal designated
        (parameter_list
          (parameter "self" type='Token.Symbol'))
        (parameter_list
          (parameter "value" type='String'))
        (brace_stmt
          (assign_expr
            (member_ref_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:39 - line:14:44] decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
              (declref_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:39 - line:14:39] decl=main.(file).Token.Symbol.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:9 function_ref=unapplied specialized=no))
            (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:52 - line:14:52] decl=main.(file).Token.Symbol.init.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:16 function_ref=unapplied specialized=no))
          (return_stmt)))
      (destructor_decl implicit "deinit" type='(Token.Symbol) -> ()' interface type='(Token.Symbol) -> () -> ()' access=internal @objc
        (parameter_list
          (parameter "self" type='Token.Symbol'))
        (brace_stmt))
      (func_decl implicit 'anonname=0x7f9d2fcd3b00' type='(Token.Symbol) -> () -> String' interface type='(Token.Symbol) -> () -> String' access=internal final getter_for=value
        (parameter_list
          (parameter "self" type='Token.Symbol'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='String' decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
              (declref_expr implicit type='Token.Symbol' decl=main.(file).Token.Symbol.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 function_ref=unapplied specialized=no)))))
      (constructor_decl implicit "init()" type='(Token.Symbol.Type) -> () -> Token.Symbol' access=internal override=main.(file).Token.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7 designated
        (parameter_list
          (parameter "self" type='Token.Symbol'))
        (parameter_list)
        (brace_stmt
          (call_expr implicit type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 - line:12:11] nothrow  arg_labels=className:
            (declref_expr implicit type='(StaticString, StaticString, StaticString, UInt, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 - line:12:11] decl=Swift.(file)._unimplementedInitializer(className:initName:file:line:column:) function_ref=single specialized=no)
            (tuple_shuffle_expr implicit type='(className: StaticString, initName: StaticString, file: StaticString, line: UInt, column: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 - line:12:11] elements=[0, -3, -3, -3, -3] variadic_sources=[]
              (tuple_expr implicit type='(className: StaticString)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 - line:12:11] names=className
                (string_literal_expr implicit type='StaticString' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11 - line:12:11] encoding=utf8 value="main.Symbol" builtin_initializer=Swift.(file).StaticString.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
          (return_stmt))))
    (class_decl "KeyValue" type='Token.KeyValue.Type' access=internal @_fixed_layout inherits: Token
      (pattern_binding_decl
        (pattern_typed type='String'
          (pattern_named type='String' 'key')
          (type_ident
            (component id='Swift' bind=Swift.Swift)
            (component id='String' bind=Swift.(file).String))))
      (var_decl "key" type='String' access=internal final let storage_kind=stored_with_trivial_accessors
        (func_decl implicit 'anonname=0x7f9d2fcd4400' type='(Token.KeyValue) -> () -> String' interface type='(Token.KeyValue) -> () -> String' access=internal final getter_for=key
          (parameter_list
            (parameter "self" type='Token.KeyValue'))
          (parameter_list)
          (brace_stmt
            (return_stmt
              (member_ref_expr implicit type='String' decl=main.(file).Token.KeyValue.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 direct_to_storage
                (declref_expr implicit type='Token.KeyValue' decl=main.(file).Token.KeyValue.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 function_ref=unapplied specialized=no))))))
      (pattern_binding_decl
        (pattern_typed type='String'
          (pattern_named type='String' 'value')
          (type_ident
            (component id='Swift' bind=Swift.Swift)
            (component id='String' bind=Swift.(file).String))))
      (var_decl "value" type='String' access=internal final let storage_kind=stored_with_trivial_accessors
        (func_decl implicit 'anonname=0x7f9d2fcd6800' type='(Token.KeyValue) -> () -> String' interface type='(Token.KeyValue) -> () -> String' access=internal final getter_for=value
          (parameter_list
            (parameter "self" type='Token.KeyValue'))
          (parameter_list)
          (brace_stmt
            (return_stmt
              (member_ref_expr implicit type='String' decl=main.(file).Token.KeyValue.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 direct_to_storage
                (declref_expr implicit type='Token.KeyValue' decl=main.(file).Token.KeyValue.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 function_ref=unapplied specialized=no))))))
      (constructor_decl "init(_:_:)" type='(Token.KeyValue.Type) -> (String, String) -> Token.KeyValue' access=internal designated
        (parameter_list
          (parameter "self" type='Token.KeyValue'))
        (parameter_list
          (parameter "key" type='String')
          (parameter "value" type='String'))
        (brace_stmt
          (assign_expr
            (member_ref_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:21:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:21:13 - line:21:18] decl=main.(file).Token.KeyValue.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 direct_to_storage
              (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:21:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:21:13 - line:21:13] decl=main.(file).Token.KeyValue.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:20:9 function_ref=unapplied specialized=no))
            (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:21:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:21:24 - line:21:24] decl=main.(file).Token.KeyValue.init.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:20:16 function_ref=unapplied specialized=no))
          (assign_expr
            (member_ref_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:22:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:22:13 - line:22:18] decl=main.(file).Token.KeyValue.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 direct_to_storage
              (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:22:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:22:13 - line:22:13] decl=main.(file).Token.KeyValue.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:20:9 function_ref=unapplied specialized=no))
            (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:22:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:22:26 - line:22:26] decl=main.(file).Token.KeyValue.init.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:20:37 function_ref=unapplied specialized=no))
          (return_stmt)))
      (destructor_decl implicit "deinit" type='(Token.KeyValue) -> ()' interface type='(Token.KeyValue) -> () -> ()' access=internal @objc
        (parameter_list
          (parameter "self" type='Token.KeyValue'))
        (brace_stmt))
      (func_decl implicit 'anonname=0x7f9d2fcd4400' type='(Token.KeyValue) -> () -> String' interface type='(Token.KeyValue) -> () -> String' access=internal final getter_for=key
        (parameter_list
          (parameter "self" type='Token.KeyValue'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='String' decl=main.(file).Token.KeyValue.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 direct_to_storage
              (declref_expr implicit type='Token.KeyValue' decl=main.(file).Token.KeyValue.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 function_ref=unapplied specialized=no)))))
      (func_decl implicit 'anonname=0x7f9d2fcd6800' type='(Token.KeyValue) -> () -> String' interface type='(Token.KeyValue) -> () -> String' access=internal final getter_for=value
        (parameter_list
          (parameter "self" type='Token.KeyValue'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='String' decl=main.(file).Token.KeyValue.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 direct_to_storage
              (declref_expr implicit type='Token.KeyValue' decl=main.(file).Token.KeyValue.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 function_ref=unapplied specialized=no)))))
      (constructor_decl implicit "init()" type='(Token.KeyValue.Type) -> () -> Token.KeyValue' access=internal override=main.(file).Token.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:1:7 designated
        (parameter_list
          (parameter "self" type='Token.KeyValue'))
        (parameter_list)
        (brace_stmt
          (call_expr implicit type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 - line:17:11] nothrow  arg_labels=className:
            (declref_expr implicit type='(StaticString, StaticString, StaticString, UInt, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 - line:17:11] decl=Swift.(file)._unimplementedInitializer(className:initName:file:line:column:) function_ref=single specialized=no)
            (tuple_shuffle_expr implicit type='(className: StaticString, initName: StaticString, file: StaticString, line: UInt, column: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 - line:17:11] elements=[0, -3, -3, -3, -3] variadic_sources=[]
              (tuple_expr implicit type='(className: StaticString)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 - line:17:11] names=className
                (string_literal_expr implicit type='StaticString' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11 - line:17:11] encoding=utf8 value="main.KeyValue" builtin_initializer=Swift.(file).StaticString.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
          (return_stmt))))
    (func_decl "symbol(_:)" type='(Token.Type) -> (String) -> Token.Symbol' interface type='(Token.Type) -> (String) -> Token.Symbol' access=internal final type
      (parameter_list
        (parameter "self" type='Token.Type'))
      (parameter_list
        (parameter "s" type='String'))
      (result
        (type_ident
          (component id='Symbol' bind=main.(file).Token.Symbol@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:12:11)))
      (brace_stmt
        (return_stmt
          (call_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 - line:26:70] nothrow  arg_labels=_:
            (constructor_ref_call_expr type='(String) -> Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 - line:26:62] nothrow
              (declref_expr implicit type='(Token.Symbol.Type) -> (String) -> Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 - line:26:62] decl=main.(file).Token.Symbol.init@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:14:9 function_ref=single specialized=no)
              (type_expr type='Token.Symbol.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:62 - line:26:62] typerepr='Symbol'))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:68 - line:26:70]
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:69 - line:26:69] decl=main.(file).Token.func decl.s@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:26:26 function_ref=unapplied specialized=no))))))
    (func_decl "string(_:)" type='(Token.Type) -> (String) -> Token.String' interface type='(Token.Type) -> (String) -> Token.String' access=internal final type
      (parameter_list
        (parameter "self" type='Token.Type'))
      (parameter_list
        (parameter "s" type='String'))
      (result
        (type_ident
          (component id='String' bind=main.(file).Token.String@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:7:11)))
      (brace_stmt
        (return_stmt
          (call_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 - line:27:70] nothrow  arg_labels=_:
            (constructor_ref_call_expr type='(String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 - line:27:62] nothrow
              (declref_expr implicit type='(Token.String.Type) -> (String) -> Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 - line:27:62] decl=main.(file).Token.String.init@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:9:9 function_ref=single specialized=no)
              (type_expr type='Token.String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:62 - line:27:62] typerepr='String'))
            (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:68 - line:27:70]
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:69 - line:27:69] decl=main.(file).Token.func decl.s@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:27:26 function_ref=unapplied specialized=no))))))
    (func_decl "keyValue(_:_:)" type='(Token.Type) -> (String, String) -> Token.KeyValue' interface type='(Token.Type) -> (String, String) -> Token.KeyValue' access=internal final type
      (parameter_list
        (parameter "self" type='Token.Type'))
      (parameter_list
        (parameter "k" type='String')
        (parameter "v" type='String'))
      (result
        (type_ident
          (component id='KeyValue' bind=main.(file).Token.KeyValue@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:17:11)))
      (brace_stmt
        (return_stmt
          (call_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 - line:28:98] nothrow  arg_labels=_:_:
            (constructor_ref_call_expr type='(String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 - line:28:85] nothrow
              (declref_expr implicit type='(Token.KeyValue.Type) -> (String, String) -> Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 - line:28:85] decl=main.(file).Token.KeyValue.init@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:20:9 function_ref=single specialized=no)
              (type_expr type='Token.KeyValue.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:85 - line:28:85] typerepr='KeyValue'))
            (tuple_expr type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:93 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:93 - line:28:98] names='',''
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:94 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:94 - line:28:94] decl=main.(file).Token.func decl.k@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:28 function_ref=unapplied specialized=no)
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:97 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:97 - line:28:97] decl=main.(file).Token.func decl.v@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:28:47 function_ref=unapplied specialized=no))))))
    (func_decl "toString()" type='(Token) -> () -> String' interface type='(Token) -> () -> String' access=internal
      (parameter_list
        (parameter "self" type='Token'))
      (parameter_list)
      (result
        (type_ident
          (component id='Swift' bind=Swift.Swift)
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (switch_stmt
          (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:31:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:31:16 - line:31:16] decl=main.(file).Token.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:30:10 function_ref=unapplied specialized=no)
          (case_stmt
            (case_label_item
            (pattern_expr type='Token'
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 - line:32:20] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 - line:32:20] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 - line:32:20] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 - line:32:20] nothrow
                    (declref_expr implicit type='(Token, Token) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 - line:32:20] decl=Swift.(file).~= [with Token[Token: Equatable module main]] function_ref=compound specialized=no)
                    (tuple_expr implicit type='(Token, Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 - line:32:20]
                      (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 - line:32:20] decl=main.(file).Token.leftParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 direct_to_storage
                        (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:14 - line:32:14] typerepr='Token'))
                      (declref_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 - line:32:20] decl=main.(file).Token.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:32:20 function_ref=unapplied specialized=no))))
                (tuple_expr implicit type='()'))))
            (brace_stmt
              (return_stmt
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:33:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:33:20 - line:33:20] encoding=utf8 value="(" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
          (case_stmt
            (case_label_item
            (pattern_expr type='Token'
              (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 - line:34:20] nothrow  arg_labels=
                (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 - line:34:20] nothrow
                  (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 - line:34:20] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                  (binary_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 - line:34:20] nothrow
                    (declref_expr implicit type='(Token, Token) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 - line:34:20] decl=Swift.(file).~= [with Token[Token: Equatable module main]] function_ref=compound specialized=no)
                    (tuple_expr implicit type='(Token, Token)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 - line:34:20]
                      (member_ref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 - line:34:20] decl=main.(file).Token.rightParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 direct_to_storage
                        (type_expr type='Token.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:14 - line:34:14] typerepr='Token'))
                      (declref_expr implicit type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 - line:34:20] decl=main.(file).Token.func decl.$match@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:34:20 function_ref=unapplied specialized=no))))
                (tuple_expr implicit type='()'))))
            (brace_stmt
              (return_stmt
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:35:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:35:20 - line:35:20] encoding=utf8 value=")" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
          (case_stmt
            (case_label_item
            (pattern_let type='Token'
              (pattern_is type='Token' value_cast Token.String
                (pattern_named type='Token.String' 'token'))))
            (brace_stmt
              (return_stmt
                (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:37:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:37:20 - line:37:26] decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
                  (declref_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:37:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:37:20 - line:37:20] decl=main.(file).Token.func decl.token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:36:18 function_ref=unapplied specialized=no)))))
          (case_stmt
            (case_label_item
            (pattern_let type='Token'
              (pattern_is type='Token' value_cast Token.Symbol
                (pattern_named type='Token.Symbol' 'token'))))
            (brace_stmt
              (return_stmt
                (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:39:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:39:20 - line:39:26] decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
                  (declref_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:39:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:39:20 - line:39:20] decl=main.(file).Token.func decl.token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:38:18 function_ref=unapplied specialized=no)))))
          (case_stmt
            (case_label_item
            (pattern_let type='Token'
              (pattern_is type='Token' value_cast Token.KeyValue
                (pattern_named type='Token.KeyValue' 'token'))))
            (brace_stmt
              (return_stmt
                (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:20 - line:41:20]
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:20 - line:41:20] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:22 - line:41:32]
                    (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:23 - line:41:29] decl=main.(file).Token.KeyValue.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 direct_to_storage
                      (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:23 - line:41:23] decl=main.(file).Token.func decl.token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:40:18 function_ref=unapplied specialized=no)))
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:33 - line:41:33] encoding=utf8 value="=" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:35 - line:41:47]
                    (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:36 - line:41:42] decl=main.(file).Token.KeyValue.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 direct_to_storage
                      (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:36 - line:41:36] decl=main.(file).Token.func decl.token@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:40:18 function_ref=unapplied specialized=no)))
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:41:48 - line:41:48] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
          (case_stmt
            (case_label_item
            (pattern_any type='Token'))
            (brace_stmt
              (call_expr type='Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:13 - line:43:24] nothrow  arg_labels=
                (declref_expr type='(@autoclosure () -> String, StaticString, UInt) -> Never' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:13 - line:43:13] decl=Swift.(file).fatalError(_:file:line:) function_ref=single specialized=no)
                (tuple_shuffle_expr implicit type='(@autoclosure () -> String, file: StaticString, line: UInt)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:23 - line:43:24] elements=[-1, -3, -3] variadic_sources=[]
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:43:23 - line:43:24]))))))))
    (destructor_decl implicit "deinit" type='(Token) -> ()' interface type='(Token) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='Token'))
      (brace_stmt))
    (constructor_decl implicit "init()" type='(Token.Type) -> () -> Token' access=internal designated
      (parameter_list
        (parameter "self" type='Token'))
      (parameter_list)
      (brace_stmt
        (return_stmt)))
    (func_decl implicit 'anonname=0x7f9d2fccba00' type='(Token.Type) -> () -> Token' interface type='(Token.Type) -> () -> Token' access=internal final type getter_for=leftParen
      (parameter_list
        (parameter "self" type='Token.Type'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Token' decl=main.(file).Token.leftParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 direct_to_storage
            (declref_expr implicit type='Token.Type' decl=main.(file).Token.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:3:16 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7f9d2fcceb00' type='(Token.Type) -> () -> Token' interface type='(Token.Type) -> () -> Token' access=internal final type getter_for=rightParen
      (parameter_list
        (parameter "self" type='Token.Type'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Token' decl=main.(file).Token.rightParen@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 direct_to_storage
            (declref_expr implicit type='Token.Type' decl=main.(file).Token.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:5:16 function_ref=unapplied specialized=no))))))
  (func_decl "==(_:_:)" type='(Token, Token) -> Bool' access=internal
    (parameter_list
      (parameter "lhs" type='Token')
      (parameter "rhs" type='Token'))
    (result
      (type_ident
        (component id='Bool' bind=Swift.(file).Bool)))
    (brace_stmt
      (if_stmt
        (pattern
          (optional_some_element implicit type='Token.String?'
            (pattern_let implicit type='Token.String'
              (pattern_named type='Token.String' 'lhs')))
          (conditional_checked_cast_expr type='Token.String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:18 - line:49:32] value_cast writtenType='Token.String'
            (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:18 - line:49:18] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:9 function_ref=unapplied specialized=no)))        (pattern
          (optional_some_element implicit type='Token.String?'
            (pattern_let implicit type='Token.String'
              (pattern_named type='Token.String' 'rhs')))
          (conditional_checked_cast_expr type='Token.String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:50 - line:49:64] value_cast writtenType='Token.String'
            (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:50 - line:49:50] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:21 function_ref=unapplied specialized=no)))
        (brace_stmt
          (return_stmt
            (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:16 - line:50:33] nothrow
              (dot_syntax_call_expr implicit type='(String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:26 - line:50:26] nothrow
                (declref_expr type='(String.Type) -> (String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:26 - line:50:26] decl=Swift.(file).String.== function_ref=unapplied specialized=no)
                (type_expr implicit type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:26 - line:50:26] typerepr='String'))
              (tuple_expr implicit type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:16 - line:50:33]
                (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:16 - line:50:20] decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
                  (declref_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:16 - line:50:16] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:12 function_ref=unapplied specialized=no))
                (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:29 - line:50:33] decl=main.(file).Token.String.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:8:13 direct_to_storage
                  (declref_expr type='Token.String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:50:29 - line:50:29] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:49:44 function_ref=unapplied specialized=no)))))))
      (if_stmt
        (pattern
          (optional_some_element implicit type='Token.Symbol?'
            (pattern_let implicit type='Token.Symbol'
              (pattern_named type='Token.Symbol' 'lhs')))
          (conditional_checked_cast_expr type='Token.Symbol?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:18 - line:52:32] value_cast writtenType='Token.Symbol'
            (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:18 - line:52:18] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:9 function_ref=unapplied specialized=no)))        (pattern
          (optional_some_element implicit type='Token.Symbol?'
            (pattern_let implicit type='Token.Symbol'
              (pattern_named type='Token.Symbol' 'rhs')))
          (conditional_checked_cast_expr type='Token.Symbol?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:50 - line:52:64] value_cast writtenType='Token.Symbol'
            (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:50 - line:52:50] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:21 function_ref=unapplied specialized=no)))
        (brace_stmt
          (return_stmt
            (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:16 - line:53:33] nothrow
              (dot_syntax_call_expr implicit type='(String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:26 - line:53:26] nothrow
                (declref_expr type='(String.Type) -> (String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:26 - line:53:26] decl=Swift.(file).String.== function_ref=unapplied specialized=no)
                (type_expr implicit type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:26 - line:53:26] typerepr='String'))
              (tuple_expr implicit type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:16 - line:53:33]
                (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:16 - line:53:20] decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
                  (declref_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:16 - line:53:16] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:12 function_ref=unapplied specialized=no))
                (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:29 - line:53:33] decl=main.(file).Token.Symbol.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:13:13 direct_to_storage
                  (declref_expr type='Token.Symbol' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:53:29 - line:53:29] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:52:44 function_ref=unapplied specialized=no)))))))
      (if_stmt
        (pattern
          (optional_some_element implicit type='Token.KeyValue?'
            (pattern_let implicit type='Token.KeyValue'
              (pattern_named type='Token.KeyValue' 'lhs')))
          (conditional_checked_cast_expr type='Token.KeyValue?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:18 - line:55:32] value_cast writtenType='Token.KeyValue'
            (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:18 - line:55:18] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:9 function_ref=unapplied specialized=no)))        (pattern
          (optional_some_element implicit type='Token.KeyValue?'
            (pattern_let implicit type='Token.KeyValue'
              (pattern_named type='Token.KeyValue' 'rhs')))
          (conditional_checked_cast_expr type='Token.KeyValue?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:52 - line:55:66] value_cast writtenType='Token.KeyValue'
            (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:52 - line:55:52] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:21 function_ref=unapplied specialized=no)))
        (brace_stmt
          (return_stmt
            (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 - line:56:55] nothrow
              (dot_syntax_call_expr implicit type='(Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:35 - line:56:35] nothrow
                (declref_expr type='(Bool.Type) -> (Bool, @autoclosure () throws -> Bool) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:35 - line:56:35] decl=Swift.(file).Bool.&& function_ref=unapplied specialized=no)
                (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:35 - line:56:35] typerepr='Bool'))
              (tuple_expr implicit type='(Bool, @autoclosure () throws -> Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 - line:56:55]
                (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 - line:56:31] nothrow
                  (dot_syntax_call_expr implicit type='(String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:24 - line:56:24] nothrow
                    (declref_expr type='(String.Type) -> (String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:24 - line:56:24] decl=Swift.(file).String.== function_ref=unapplied specialized=no)
                    (type_expr implicit type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:24 - line:56:24] typerepr='String'))
                  (tuple_expr implicit type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 - line:56:31]
                    (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 - line:56:20] decl=main.(file).Token.KeyValue.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 direct_to_storage
                      (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:16 - line:56:16] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:12 function_ref=unapplied specialized=no))
                    (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:27 - line:56:31] decl=main.(file).Token.KeyValue.key@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:18:13 direct_to_storage
                      (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:27 - line:56:27] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:46 function_ref=unapplied specialized=no))))
                (autoclosure_expr implicit type='() throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 - line:56:55] discriminator=0 captures=(lhs<noescape>, rhs<noescape>)

                  (parameter_list)
                  (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 - line:56:55] nothrow
                    (dot_syntax_call_expr implicit type='(String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:48 - line:56:48] nothrow
                      (declref_expr type='(String.Type) -> (String, String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:48 - line:56:48] decl=Swift.(file).String.== function_ref=unapplied specialized=no)
                      (type_expr implicit type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:48 - line:56:48] typerepr='String'))
                    (tuple_expr implicit type='(String, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 - line:56:55]
                      (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 - line:56:42] decl=main.(file).Token.KeyValue.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 direct_to_storage
                        (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:38 - line:56:38] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:12 function_ref=unapplied specialized=no))
                      (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:51 - line:56:55] decl=main.(file).Token.KeyValue.value@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:19:13 direct_to_storage
                        (declref_expr type='Token.KeyValue' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:56:51 - line:56:51] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:55:46 function_ref=unapplied specialized=no))))))))))
      (return_stmt
        (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 - line:58:20] nothrow
          (declref_expr type='(AnyObject?, AnyObject?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:16 - line:58:16] decl=Swift.(file).=== function_ref=unapplied specialized=no)
          (tuple_expr implicit type='(AnyObject?, AnyObject?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 - line:58:20]
            (inject_into_optional implicit type='AnyObject?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 - line:58:12]
              (erasure_expr implicit type='AnyObject' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 - line:58:12]
                (normal_conformance type=Token protocol=AnyObject)
                (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:12 - line:58:12] decl=main.(file).func decl.lhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:9 function_ref=unapplied specialized=no)))
            (inject_into_optional implicit type='AnyObject?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:20 - line:58:20]
              (erasure_expr implicit type='AnyObject' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:20 - line:58:20]
                (normal_conformance type=Token protocol=AnyObject)
                (declref_expr type='Token' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:58:20 - line:58:20] decl=main.(file).func decl.rhs@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Datatypes/Token.swift:48:21 function_ref=unapplied specialized=no)))))))))
(source_file
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Swift2KotlinImpl' 'swift2Kotlin')
        (call_expr type='Swift2KotlinImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 - line:1:37] nothrow  arg_labels=
          (constructor_ref_call_expr type='(Converter) -> Swift2KotlinImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 - line:1:20] nothrow
            (declref_expr implicit type='(Swift2KotlinImpl.Type) -> (Converter) -> Swift2KotlinImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 - line:1:20] decl=main.(file).Swift2KotlinImpl.init(converter:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:5 function_ref=single specialized=no)
            (type_expr type='Swift2KotlinImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:20 - line:1:20] typerepr='Swift2KotlinImpl'))
          (tuple_shuffle_expr implicit type='(converter: Converter)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:36 - line:1:37] elements=[-1] variadic_sources=[]
            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:36 - line:1:37]))))
))
  (var_decl "swift2Kotlin" type='Swift2KotlinImpl' access=internal let storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:1 - line:2:18] nothrow  arg_labels=
        (dot_syntax_call_expr type='() -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:1 - line:2:14] nothrow
          (declref_expr type='(Swift2KotlinImpl) -> () -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:14 - line:2:14] decl=main.(file).Swift2KotlinImpl.run()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:12:10 function_ref=single specialized=no)
          (declref_expr type='Swift2KotlinImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:1 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:1 - line:2:1] decl=main.(file).swift2Kotlin@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:1:5 direct_to_storage function_ref=unapplied specialized=no))
        (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/main.swift:2:17 - line:2:18])))))
(source_file
  (protocol "Swift2Kotlin"<Self : Swift2Kotlin> type='Swift2Kotlin.Protocol' access=internal @_fixed_layout
    (func_decl "run()" type='<Self : Swift2Kotlin> (Self) -> () -> ()' interface type='<τ_0_0 where τ_0_0 : Swift2Kotlin> (τ_0_0) -> () -> ()' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list)))
  (class_decl "Swift2KotlinImpl" type='Swift2KotlinImpl.Type' access=internal @_fixed_layout inherits: Swift2Kotlin
    (pattern_binding_decl
      (pattern_typed type='Converter'
        (pattern_named type='Converter' 'converter')
        (type_ident
          (component id='Converter' bind=main.(file).Converter@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:1:10))))
    (var_decl "converter" type='Converter' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7f8b819a20a0' type='(Swift2KotlinImpl) -> () -> Converter' interface type='(Swift2KotlinImpl) -> () -> Converter' access=internal final getter_for=converter
        (parameter_list
          (parameter "self" type='Swift2KotlinImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Converter' decl=main.(file).Swift2KotlinImpl.converter@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:6:9 direct_to_storage
              (declref_expr implicit type='Swift2KotlinImpl' decl=main.(file).Swift2KotlinImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:6:9 function_ref=unapplied specialized=no))))))
    (constructor_decl "init(converter:)" type='(Swift2KotlinImpl.Type) -> (Converter) -> Swift2KotlinImpl' access=internal designated
      (parameter_list
        (parameter "self" type='Swift2KotlinImpl'))
      (parameter_list
        (parameter "converter" apiName=converter type='Converter' default_arg=normal expression=
          (erasure_expr implicit type='Converter' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 - line:8:47]
            (normal_conformance type=ConverterImpl protocol=Converter)
            (call_expr type='ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 - line:8:47] nothrow  arg_labels=
              (constructor_ref_call_expr type='(Tokenizer, Parser, Generator, Shell, FileListExpander) -> ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 - line:8:33] nothrow
                (declref_expr implicit type='(ConverterImpl.Type) -> (Tokenizer, Parser, Generator, Shell, FileListExpander) -> ConverterImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 - line:8:33] decl=main.(file).ConverterImpl.init(tokenizer:parser:generator:shell:fileListExpander:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:15:5 function_ref=single specialized=no)
                (type_expr type='ConverterImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:33 - line:8:33] typerepr='ConverterImpl'))
              (tuple_shuffle_expr implicit type='(tokenizer: Tokenizer, parser: Parser, generator: Generator, shell: Shell, fileListExpander: FileListExpander)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:46 - line:8:47] elements=[-1, -1, -1, -1, -1] variadic_sources=[]
                (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:46 - line:8:47]))))))
      (brace_stmt
        (assign_expr
          (member_ref_expr type='@lvalue Converter' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:9:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:9:9 - line:9:14] decl=main.(file).Swift2KotlinImpl.converter@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:6:9 direct_to_storage
            (declref_expr type='Swift2KotlinImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:9:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:9:9 - line:9:9] decl=main.(file).Swift2KotlinImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:5 function_ref=unapplied specialized=no))
          (declref_expr type='Converter' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:9:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:9:26 - line:9:26] decl=main.(file).Swift2KotlinImpl.init.converter@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:8:10 function_ref=unapplied specialized=no))
        (return_stmt)))
    (func_decl "run()" type='(Swift2KotlinImpl) -> () -> ()' interface type='(Swift2KotlinImpl) -> () -> ()' access=internal
      (conformance main.(file).Swift2Kotlin.run()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:2:10)
      (parameter_list
        (parameter "self" type='Swift2KotlinImpl'))
      (parameter_list)
      (brace_stmt
        (if_stmt
          (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:43] nothrow  arg_labels=
            (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:43] nothrow
              (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:40 - line:13:40] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
              (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:43] nothrow
                (declref_expr type='(Int, Int) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:40 - line:13:40] decl=Swift.(file).== function_ref=unapplied specialized=no)
                (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:43]
                  (member_ref_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:34] decl=Swift.(file).Array.count [with String]
                    (load_expr implicit type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:24]
                      (member_ref_expr type='@lvalue [String]' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:24] decl=Swift.(file).CommandLine.arguments direct_to_storage
                        (type_expr type='CommandLine.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:12 - line:13:12] typerepr='CommandLine'))))
                  (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 - line:13:43] nothrow  arg_labels=_builtinIntegerLiteral:
                    (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 - line:13:43] nothrow
                      (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 - line:13:43] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                      (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 - line:13:43] typerepr='Int'))
                    (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 - line:13:43] names=_builtinIntegerLiteral
                      (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:43 - line:13:43] value=1))))))
            (tuple_expr implicit type='()'))
          (brace_stmt
            (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:47 - line:13:68] nothrow  arg_labels=
              (dot_syntax_call_expr type='() -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:47 - line:13:57] nothrow
                (declref_expr type='(ConsoleIO.Type) -> () -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:57 - line:13:57] decl=main.(file).ConsoleIO.printUsage()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:4:16 function_ref=single specialized=no)
                (type_expr type='ConsoleIO.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:47 - line:13:47] typerepr='ConsoleIO'))
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:13:67 - line:13:68]))
            (return_stmt)))
        (pattern_binding_decl
          (pattern_named type='ArraySlice<String>' 'filenames')
          (load_expr implicit type='ArraySlice<String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:25 - line:14:78]
            (subscript_expr type='@lvalue ArraySlice<String>' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:46 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:25 - line:14:78]  decl=Swift.(file).Array.subscript [with String]  arg_labels=_:
              (inout_expr implicit type='inout Array<String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:25 - line:14:37]
                (member_ref_expr type='@lvalue [String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:37 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:25 - line:14:37] decl=Swift.(file).CommandLine.arguments direct_to_storage
                  (type_expr type='CommandLine.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:25 - line:14:25] typerepr='CommandLine')))
              (paren_expr type='(Range<Int>)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:46 - line:14:78]
                (binary_expr type='Range<Int>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:73] nothrow
                  (declref_expr type='(Int, Int) -> Range<Int>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:48 - line:14:48] decl=Swift.(file)...< [with Int[Int: Comparable module Swift]] function_ref=unapplied specialized=no)
                  (tuple_expr implicit type='(Int, Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:73]
                    (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:47] nothrow  arg_labels=_builtinIntegerLiteral:
                      (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:47] nothrow
                        (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:47] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                        (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:47] typerepr='Int'))
                      (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:47] names=_builtinIntegerLiteral
                        (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:47 - line:14:47] value=1)))
                    (member_ref_expr type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:73 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:51 - line:14:73] decl=Swift.(file).Array.count [with String]
                      (load_expr implicit type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:51 - line:14:63]
                        (member_ref_expr type='@lvalue [String]' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:51 - line:14:63] decl=Swift.(file).CommandLine.arguments direct_to_storage
                          (type_expr type='CommandLine.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:51 - line:14:51] typerepr='CommandLine'))))))))))

        (var_decl "filenames" type='ArraySlice<String>' access=private let storage_kind=stored)

        (assign_expr
          (discard_assignment_expr type='@lvalue String' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:9 - line:15:9])
          (open_existential_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 - line:15:67]
            (opaque_value_expr implicit type='Converter' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 - line:15:13] @ 0x7f8b81dfc2e0)
            (member_ref_expr type='Converter' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 - line:15:13] decl=main.(file).Swift2KotlinImpl.converter@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:6:9 direct_to_storage
              (declref_expr implicit type='Swift2KotlinImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 - line:15:13] decl=main.(file).Swift2KotlinImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:12:10 function_ref=unapplied specialized=no))
            (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 - line:15:67] nothrow  arg_labels=filenameArgs:
              (dot_syntax_call_expr type='([String]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 - line:15:23] nothrow
                (declref_expr type='(Converter) -> ([String]) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:23 - line:15:23] decl=main.(file).Converter.convertSource(filenameArgs:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Core/Converter.swift:2:10 [with Converter[abstract:Converter]] function_ref=single specialized=no)
                (opaque_value_expr implicit type='Converter' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:13 - line:15:13] @ 0x7f8b81dfc2e0))
              (tuple_expr type='(filenameArgs: Array<String>)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:36 - line:15:67] names=filenameArgs
                (call_expr type='Array<String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 - line:15:66] nothrow  arg_labels=_:
                  (constructor_ref_call_expr type='(ArraySlice<String>) -> Array<String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 - line:15:51] nothrow
                    (declref_expr implicit type='(Array<String>.Type) -> (ArraySlice<String>) -> Array<String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 - line:15:51] decl=Swift.(file).Array.init [with String, ArraySlice<String>[ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: Sequence module Swift)], IndexingIterator<ArraySlice<String>>[IndexingIterator<ArraySlice<String>>: specialize <ArraySlice<String>, ArraySlice.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], ArraySlice<String>] function_ref=single specialized=no)
                    (type_expr type='Array<String>.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:51 - line:15:51] typerepr='Array'))
                  (paren_expr type='(ArraySlice<String>)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:56 - line:15:66]
                    (declref_expr type='ArraySlice<String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:15:57 - line:15:57] decl=main.(file).Swift2KotlinImpl.func decl.filenames@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:14:13 function_ref=unapplied specialized=no)))))))))
    (destructor_decl implicit "deinit" type='(Swift2KotlinImpl) -> ()' interface type='(Swift2KotlinImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='Swift2KotlinImpl'))
      (brace_stmt))
    (func_decl implicit 'anonname=0x7f8b819a20a0' type='(Swift2KotlinImpl) -> () -> Converter' interface type='(Swift2KotlinImpl) -> () -> Converter' access=internal final getter_for=converter
      (parameter_list
        (parameter "self" type='Swift2KotlinImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Converter' decl=main.(file).Swift2KotlinImpl.converter@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:6:9 direct_to_storage
            (declref_expr implicit type='Swift2KotlinImpl' decl=main.(file).Swift2KotlinImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Main/Swift2Kotlin.swift:6:9 function_ref=unapplied specialized=no)))))))
(source_file
  (import_decl 'Foundation')
  (class_decl "ConsoleIO" type='ConsoleIO.Type' access=internal @_fixed_layout
    (func_decl "printUsage()" type='(ConsoleIO.Type) -> () -> ()' interface type='(ConsoleIO.Type) -> () -> ()' access=internal type
      (parameter_list
        (parameter "self" type='ConsoleIO.Type'))
      (parameter_list)
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='String' 'executableName')
          (member_ref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:30 - line:5:69] decl=Foundation.(file).NSString.lastPathComponent
            (paren_expr type='(NSString)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:30 - line:5:67]
              (coerce_expr type='NSString' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:59] writtenType='NSString'
                (call_expr implicit type='NSString' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:54] nothrow  arg_labels=
                  (dot_syntax_call_expr implicit type='() -> NSString' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:54] nothrow
                    (declref_expr implicit type='(String) -> () -> NSString' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:54 - line:5:54] decl=Foundation.(file).String._bridgeToObjectiveC() function_ref=single specialized=no)
                    (load_expr implicit type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:54]
                      (subscript_expr type='@lvalue String' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:52 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:54]  decl=Swift.(file).Array.subscript [with String]  arg_labels=_:
                        (inout_expr implicit type='inout Array<String>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:43]
                          (member_ref_expr type='@lvalue [String]' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:43 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:43] decl=Swift.(file).CommandLine.arguments direct_to_storage
                            (type_expr type='CommandLine.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:31] typerepr='CommandLine')))
                        (paren_expr type='(Int)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:52 - line:5:54]
                          (call_expr implicit type='Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 - line:5:53] nothrow  arg_labels=_builtinIntegerLiteral:
                            (constructor_ref_call_expr implicit type='(Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 - line:5:53] nothrow
                              (declref_expr implicit type='(Int.Type) -> (Int2048) -> Int' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 - line:5:53] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single specialized=no)
                              (type_expr implicit type='Int.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 - line:5:53] typerepr='Int'))
                            (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 - line:5:53] names=_builtinIntegerLiteral
                              (integer_literal_expr type='Int2048' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:53 - line:5:53] value=0)))))))
                  (tuple_expr implicit type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:31 - line:5:54]))))))

        (var_decl "executableName" type='String' access=private let storage_kind=stored)

        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:9 - line:7:23] nothrow  arg_labels=_:
          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:9 - line:7:9] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:14 - line:7:23] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:14 - line:7:23]
              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:15 - line:7:15]
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:7:15 - line:7:15] encoding=utf8 value="usage:" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:9 - line:8:53] nothrow  arg_labels=_:
          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:9 - line:8:9] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:14 - line:8:53] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:14 - line:8:53]
              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 - line:8:15]
                (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 - line:8:15]
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:15 - line:8:15] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:17 - line:8:32]
                    (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:18 - line:8:18] decl=main.(file).ConsoleIO.func decl.executableName@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:13 function_ref=unapplied specialized=no))
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:8:33 - line:8:33] encoding=utf8 value=" -a string1 string2" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))
        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:9 - line:9:19] nothrow  arg_labels=_:
          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:9 - line:9:9] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:14 - line:9:19] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:14 - line:9:19]
              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:15 - line:9:15]
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:9:15 - line:9:15] encoding=utf8 value="or" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:9 - line:10:44] nothrow  arg_labels=_:
          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:9 - line:10:9] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:14 - line:10:44] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:14 - line:10:44]
              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 - line:10:15]
                (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 - line:10:15]
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:15 - line:10:15] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:17 - line:10:32]
                    (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:18 - line:10:18] decl=main.(file).ConsoleIO.func decl.executableName@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:13 function_ref=unapplied specialized=no))
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:10:33 - line:10:33] encoding=utf8 value=" -p string" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))
        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:9 - line:11:19] nothrow  arg_labels=_:
          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:9 - line:11:9] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:14 - line:11:19] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:14 - line:11:19]
              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:15 - line:11:15]
                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:11:15 - line:11:15] encoding=utf8 value="or" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))
        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:9 - line:12:63] nothrow  arg_labels=_:
          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:9 - line:12:9] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:14 - line:12:63] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:14 - line:12:63]
              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 - line:12:15]
                (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 - line:12:15]
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:15 - line:12:15] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:17 - line:12:32]
                    (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:18 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:18 - line:12:18] decl=main.(file).ConsoleIO.func decl.executableName@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:13 function_ref=unapplied specialized=no))
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:12:33 - line:12:33] encoding=utf8 value=" -h to show usage information" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))
        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:9 - line:13:84] nothrow  arg_labels=_:
          (declref_expr type='(Any..., String, String) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:9 - line:13:9] decl=Swift.(file).print(_:separator:terminator:) function_ref=single specialized=no)
          (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:14 - line:13:84] sourceIsScalar elements=[-2, -1, -1] variadic_sources=[0]
            (paren_expr type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:14 - line:13:84]
              (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 - line:13:15]
                (interpolated_string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 - line:13:15]
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:15 - line:13:15] encoding=utf8 value="Type " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                  (paren_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:22 - line:13:37]
                    (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:23 - line:13:23] decl=main.(file).ConsoleIO.func decl.executableName@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:5:13 function_ref=unapplied specialized=no))
                  (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/ConsoleIO.swift:13:38 - line:13:38] encoding=utf8 value=" without an option to enter interactive mode." builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
    (destructor_decl implicit "deinit" type='(ConsoleIO) -> ()' interface type='(ConsoleIO) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='ConsoleIO'))
      (brace_stmt))
    (constructor_decl implicit "init()" type='(ConsoleIO.Type) -> () -> ConsoleIO' access=internal designated
      (parameter_list
        (parameter "self" type='ConsoleIO'))
      (parameter_list)
      (brace_stmt
        (return_stmt)))))
(source_file
  (import_decl 'Foundation')
  (protocol "FileListExpander"<Self : FileListExpander> type='FileListExpander.Protocol' access=internal @_fixed_layout
    (func_decl "expand(fileList:)" type='<Self : FileListExpander> (Self) -> ([String]) -> [String]' interface type='<τ_0_0 where τ_0_0 : FileListExpander> (τ_0_0) -> (Array<String>) -> Array<String>' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "fileList" apiName=fileList type='[String]'))
      (result
        (type_array
          (type_ident
            (component id='String' bind=Swift.(file).String))))))
  (class_decl "FileListExpanderImpl" type='FileListExpanderImpl.Type' access=internal @_fixed_layout inherits: FileListExpander
    (typealias "Path" type='FileListExpanderImpl.Path.Type' access=internal type='String')
    (pattern_binding_decl
      (pattern_named type='FileManager' 'fileManager')
      (member_ref_expr type='FileManager' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:23 - line:10:35] decl=Foundation.(file).FileManager.default
        (type_expr type='FileManager.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:23 - line:10:23] typerepr='FileManager')))
    (var_decl "fileManager" type='FileManager' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7fa5e3c35e60' type='(FileListExpanderImpl) -> () -> FileManager' interface type='(FileListExpanderImpl) -> () -> FileManager' access=internal final getter_for=fileManager
        (parameter_list
          (parameter "self" type='FileListExpanderImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='FileManager' decl=main.(file).FileListExpanderImpl.fileManager@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:9 direct_to_storage
              (declref_expr implicit type='FileListExpanderImpl' decl=main.(file).FileListExpanderImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:9 function_ref=unapplied specialized=no))))))
    (pattern_binding_decl
      (pattern_typed type='Shell'
        (pattern_named type='Shell' 'shell')
        (type_ident
          (component id='Shell' bind=main.(file).Shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:3:10))))
    (var_decl "shell" type='Shell' access=internal final let storage_kind=stored_with_trivial_accessors
      (func_decl implicit 'anonname=0x7fa5e3c36400' type='(FileListExpanderImpl) -> () -> Shell' interface type='(FileListExpanderImpl) -> () -> Shell' access=internal final getter_for=shell
        (parameter_list
          (parameter "self" type='FileListExpanderImpl'))
        (parameter_list)
        (brace_stmt
          (return_stmt
            (member_ref_expr implicit type='Shell' decl=main.(file).FileListExpanderImpl.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:11:9 direct_to_storage
              (declref_expr implicit type='FileListExpanderImpl' decl=main.(file).FileListExpanderImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:11:9 function_ref=unapplied specialized=no))))))
    (constructor_decl "init(shell:)" type='(FileListExpanderImpl.Type) -> (Shell) -> FileListExpanderImpl' access=internal designated
      (parameter_list
        (parameter "self" type='FileListExpanderImpl'))
      (parameter_list
        (parameter "shell" apiName=shell type='Shell' default_arg=normal expression=
          (erasure_expr implicit type='Shell' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 - line:13:35]
            (normal_conformance type=ShellImpl protocol=Shell)
            (call_expr type='ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 - line:13:35] nothrow  arg_labels=
              (constructor_ref_call_expr type='() -> ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 - line:13:25] nothrow
                (declref_expr implicit type='(ShellImpl.Type) -> () -> ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 - line:13:25] decl=main.(file).ShellImpl.init()@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:8:7 function_ref=single specialized=no)
                (type_expr type='ShellImpl.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:25 - line:13:25] typerepr='ShellImpl'))
              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:34 - line:13:35])))))
      (brace_stmt
        (assign_expr
          (member_ref_expr type='@lvalue Shell' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:14:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:14:9 - line:14:14] decl=main.(file).FileListExpanderImpl.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:11:9 direct_to_storage
            (declref_expr type='FileListExpanderImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:14:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:14:9 - line:14:9] decl=main.(file).FileListExpanderImpl.init.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:5 function_ref=unapplied specialized=no))
          (declref_expr type='Shell' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:14:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:14:22 - line:14:22] decl=main.(file).FileListExpanderImpl.init.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:13:10 function_ref=unapplied specialized=no))
        (return_stmt)))
    (func_decl "expand(fileList:)" type='(FileListExpanderImpl) -> ([String]) -> [String]' interface type='(FileListExpanderImpl) -> (Array<String>) -> Array<String>' access=internal
      (conformance main.(file).FileListExpander.expand(fileList:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:4:10)
      (parameter_list
        (parameter "self" type='FileListExpanderImpl'))
      (parameter_list
        (parameter "fileList" apiName=fileList type='[String]'))
      (result
        (type_array
          (type_ident
            (component id='String' bind=Swift.(file).String))))
      (brace_stmt
        (return_stmt
          (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:16 - line:22:28] nothrow  arg_labels=_:
            (dot_syntax_call_expr type='(([String]) throws -> [String]) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:16 - line:22:15] nothrow
              (declref_expr type='([[String]]) -> (([String]) throws -> [String]) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:15 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:15 - line:22:15] decl=Swift.(file).Sequence.flatMap [with [[String]][[[String]]: specialize <Array<String>> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<[String]>>[IndexingIterator<Array<[String]>>: specialize <Array<Array<String>>, Array.Index, ArraySlice<Array<String>>, Array<String>> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], [String], ArraySlice<Array<String>>, [String][Array<String>: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>] function_ref=single specialized=no)
              (call_expr type='[[String]]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:16 - line:22:13] nothrow  arg_labels=_:
                (dot_syntax_call_expr type='((String) throws -> [String]) throws -> [[String]]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:16 - line:18:25] nothrow
                  (declref_expr type='([String]) -> ((String) throws -> [String]) throws -> [[String]]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:25 - line:18:25] decl=Swift.(file).Collection.map [with [String][[String]: specialize <String> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>[ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<String>>[IndexingIterator<ArraySlice<String>>: specialize <ArraySlice<String>, ArraySlice.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>, String, String, [String]] function_ref=single specialized=no)
                  (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:16 - line:18:16] decl=main.(file).FileListExpanderImpl.func decl.fileList@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:17:17 function_ref=unapplied specialized=no))
                (paren_expr type='(String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:29 - line:22:13] trailing-closure
                  (function_conversion_expr implicit type='(String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:29 - line:22:13]
                    (closure_expr type='(String) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:29 - line:22:13] discriminator=0 captures=(self<noescape>)
                      (parameter_list
                        (parameter "filename" type='(String)'))
                      (brace_stmt
                        (pattern_binding_decl
                          (pattern_typed type='ObjCBool'
                            (pattern_named type='ObjCBool' 'isDir')
                            (type_ident
                              (component id='ObjCBool' bind=ObjectiveC.(file).ObjCBool)))
                          (call_expr implicit type='ObjCBool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] nothrow  arg_labels=booleanLiteral:
                            (constructor_ref_call_expr implicit type='(Bool) -> ObjCBool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] nothrow
                              (declref_expr implicit type='(ObjCBool.Type) -> (Bool) -> ObjCBool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] decl=ObjectiveC.(file).ObjCBool.init(booleanLiteral:) function_ref=single specialized=no)
                              (type_expr implicit type='ObjCBool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] typerepr='ObjCBool'))
                            (tuple_expr implicit type='(booleanLiteral: Bool)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] names=booleanLiteral
                              (call_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] nothrow  arg_labels=_builtinBooleanLiteral:
                                (constructor_ref_call_expr implicit type='(Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] nothrow
                                  (declref_expr implicit type='(Bool.Type) -> (Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] decl=Swift.(file).Bool.init(_builtinBooleanLiteral:) function_ref=single specialized=no)
                                  (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] typerepr='Bool'))
                                (tuple_expr implicit type='(_builtinBooleanLiteral: Builtin.Int1)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] names=_builtinBooleanLiteral
                                  (boolean_literal_expr type='Builtin.Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:35 - line:19:35] value=false))))))

                        (var_decl "isDir" type='ObjCBool' access=private storage_kind=stored)

                        (if_stmt
                          (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 - line:20:77] nothrow  arg_labels=
                            (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 - line:20:77] nothrow
                              (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 - line:20:16] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                              (prefix_unary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 - line:20:77] nothrow
                                (dot_syntax_call_expr implicit type='(Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 - line:20:16] nothrow
                                  (declref_expr type='(Bool.Type) -> (Bool) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 - line:20:16] decl=Swift.(file).Bool.! function_ref=unapplied specialized=no)
                                  (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:16 - line:20:16] typerepr='Bool'))
                                (call_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:17 - line:20:77] nothrow  arg_labels=atPath:isDirectory:
                                  (dot_syntax_call_expr type='(String, UnsafeMutablePointer<ObjCBool>?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:17 - line:20:29] nothrow
                                    (declref_expr type='(FileManager) -> (String, UnsafeMutablePointer<ObjCBool>?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:29 - line:20:29] decl=Foundation.(file).FileManager.fileExists(atPath:isDirectory:) function_ref=single specialized=no)
                                    (member_ref_expr type='FileManager' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:17 - line:20:17] decl=main.(file).FileListExpanderImpl.fileManager@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:9 direct_to_storage
                                      (declref_expr implicit type='FileListExpanderImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:17 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:17 - line:20:17] decl=main.(file).FileListExpanderImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:17:10 function_ref=unapplied specialized=no)))
                                  (tuple_expr type='(atPath: String, isDirectory: UnsafeMutablePointer<ObjCBool>?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:39 - line:20:77] names=atPath,isDirectory
                                    (declref_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:48 - line:20:48] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=0.filename@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:32 function_ref=unapplied specialized=no)
                                    (inject_into_optional implicit type='UnsafeMutablePointer<ObjCBool>?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:71 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:71 - line:20:72]
                                      (inout_to_pointer implicit type='UnsafeMutablePointer<ObjCBool>' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:71 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:71 - line:20:72]
                                        (inout_expr type='inout ObjCBool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:71 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:71 - line:20:72]
                                          (declref_expr type='@lvalue ObjCBool' accessKind=readwrite location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:72 - line:20:72] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=0.isDir@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:17 function_ref=unapplied specialized=no))))))))
                            (tuple_expr implicit type='()'))
                          (brace_stmt
                            (return_stmt
                              (array_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:88 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:20:88 - line:20:89]))))
                        (return_stmt
                          (if_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 - line:21:81]
                            (call_expr implicit type='Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 - line:21:26] nothrow  arg_labels=
                              (dot_syntax_call_expr implicit type='() -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 - line:21:26] nothrow
                                (declref_expr implicit type='(Bool) -> () -> Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:26 - line:21:26] decl=Swift.(file).Bool._getBuiltinLogicValue() function_ref=double specialized=no)
                                (member_ref_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 - line:21:26] decl=ObjectiveC.(file).ObjCBool.boolValue
                                  (load_expr implicit type='ObjCBool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 - line:21:20]
                                    (declref_expr type='@lvalue ObjCBool' accessKind=read location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:20 - line:21:20] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=0.isDir@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:19:17 function_ref=unapplied specialized=no))))
                              (tuple_expr implicit type='()'))
                            (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 - line:21:68] nothrow  arg_labels=path:
                              (dot_syntax_call_expr implicit type='(FileListExpanderImpl.Path) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 - line:21:38] nothrow
                                (declref_expr type='(FileListExpanderImpl) -> (FileListExpanderImpl.Path) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 - line:21:38] decl=main.(file).FileListExpanderImpl.expandDirectory(path:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:25:10 function_ref=single specialized=no)
                                (declref_expr implicit type='FileListExpanderImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:38 - line:21:38] decl=main.(file).FileListExpanderImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:17:10 function_ref=unapplied specialized=no))
                              (tuple_expr type='(path: (String))' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:53 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:53 - line:21:68] names=path
                                (declref_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:60 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:60 - line:21:60] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=0.filename@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:32 function_ref=unapplied specialized=no)))
                            (array_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:72 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:72 - line:21:81]
                              (declref_expr type='(String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:73 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:21:73 - line:21:73] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=0.filename@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:18:32 function_ref=unapplied specialized=no))))))))))
            (paren_expr type='([String]) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:23 - line:22:28] trailing-closure
              (function_conversion_expr implicit type='([String]) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:23 - line:22:28]
                (closure_expr type='([String]) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:23 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:23 - line:22:28] discriminator=1 single-expression
                  (parameter_list
                    (parameter "$0" type='([String])'))
                  (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:25 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:25 - line:22:25] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=1.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:22:23 function_ref=unapplied specialized=no))))))))
    (func_decl "expandDirectory(path:)" type='(FileListExpanderImpl) -> (FileListExpanderImpl.Path) -> [String]' interface type='(FileListExpanderImpl) -> (String) -> Array<String>' access=internal
      (parameter_list
        (parameter "self" type='FileListExpanderImpl'))
      (parameter_list
        (parameter "path" apiName=path type='FileListExpanderImpl.Path'))
      (result
        (type_array
          (type_ident
            (component id='String' bind=Swift.(file).String))))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='[String]' 'paths')
          (force_value_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:21 - line:26:55]
            (call_expr type='[String]?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:21 - line:26:54] nothrow  arg_labels=atPath:
              (dot_syntax_call_expr type='(String) -> [String]?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:21 - line:26:33] nothrow
                (declref_expr type='(FileManager) -> (String) -> [String]?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:33 - line:26:33] decl=Foundation.(file).FileManager.subpaths(atPath:) function_ref=single specialized=no)
                (member_ref_expr type='FileManager' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:21 - line:26:21] decl=main.(file).FileListExpanderImpl.fileManager@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:9 direct_to_storage
                  (declref_expr implicit type='FileListExpanderImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:21 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:21 - line:26:21] decl=main.(file).FileListExpanderImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:25:10 function_ref=unapplied specialized=no)))
              (tuple_expr type='(atPath: FileListExpanderImpl.Path)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:41 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:41 - line:26:54] names=atPath
                (declref_expr type='FileListExpanderImpl.Path' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:50 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:50 - line:26:50] decl=main.(file).FileListExpanderImpl.func decl.path@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:25:26 function_ref=unapplied specialized=no)))))

        (var_decl "paths" type='[String]' access=private let storage_kind=stored)

        (return_stmt
          (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:16 - line:27:79] nothrow  arg_labels=_:
            (dot_syntax_call_expr type='((String) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:16 - line:27:63] nothrow
              (declref_expr type='([String]) -> ((String) throws -> String) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:63 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:63 - line:27:63] decl=Swift.(file).Collection.map [with [String][[String]: specialize <String> (<Element> Array<Element>: Collection module Swift)], Array.Index[Int: Comparable module Swift], Array.IndexDistance[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>[ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<String>>[IndexingIterator<ArraySlice<String>>: specialize <ArraySlice<String>, ArraySlice.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>, String, String, String] function_ref=single specialized=no)
              (call_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:16 - line:27:61] nothrow  arg_labels=_:
                (dot_syntax_call_expr type='((String) throws -> Bool) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:16 - line:27:22] nothrow
                  (declref_expr type='([String]) -> ((String) throws -> Bool) throws -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:22 - line:27:22] decl=Swift.(file).Sequence.filter [with [String][Array<String>: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>] function_ref=single specialized=no)
                  (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:16 - line:27:16] decl=main.(file).FileListExpanderImpl.func decl.paths@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:26:13 function_ref=unapplied specialized=no))
                (paren_expr type='(String) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:29 - line:27:61] trailing-closure
                  (function_conversion_expr implicit type='(String) throws -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:29 - line:27:61]
                    (closure_expr type='(String) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:29 - line:27:61] discriminator=0 single-expression
                      (parameter_list
                        (parameter "$0" type='(String)'))
                      (binary_expr type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:31 - line:27:57] nothrow
                        (declref_expr type='(Range<String.Index>?, Range<String.Index>?) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:54 - line:27:54] decl=Swift.(file).!= [with Range<String.Index>[Range<String.Index>: specialize <String.CharacterView.Index> (<Bound> Range<Bound>: Equatable module Swift)]] function_ref=unapplied specialized=no)
                        (tuple_expr implicit type='(Range<String.Index>?, Range<String.Index>?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:31 - line:27:57]
                          (call_expr type='Range<String.Index>?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:31 - line:27:52] nothrow  arg_labels=of:
                            (dot_syntax_call_expr type='(String, String.CompareOptions, Range<String.Index>?, Locale?) -> Range<String.Index>?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:31 - line:27:34] nothrow
                              (declref_expr type='(String) -> (String, String.CompareOptions, Range<String.Index>?, Locale?) -> Range<String.Index>?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:34 - line:27:34] decl=Foundation.(file).String.range(of:options:range:locale:) function_ref=single specialized=no)
                              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:31 - line:27:31] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:29 function_ref=unapplied specialized=no))
                            (tuple_shuffle_expr implicit type='(of: String, options: String.CompareOptions, range: Range<String.Index>?, locale: Locale?)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:39 - line:27:52] elements=[0, -1, -1, -1] variadic_sources=[]
                              (tuple_expr type='(of: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:39 - line:27:52] names=of
                                (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:44 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:44 - line:27:44] encoding=utf8 value=".swift" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))
                          (call_expr implicit type='Range<String.Index>?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 - line:27:57] nothrow  arg_labels=nilLiteral:
                            (constructor_ref_call_expr implicit type='(()) -> Range<String.Index>?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 - line:27:57] nothrow
                              (declref_expr implicit type='(Optional<Range<String.Index>>.Type) -> (()) -> Range<String.Index>?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 - line:27:57] decl=Swift.(file).Optional.init(nilLiteral:) [with Range<String.Index>] function_ref=single specialized=no)
                              (type_expr implicit type='Range<String.Index>?.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 - line:27:57] typerepr='Range<String.Index>?'))
                            (tuple_expr implicit type='(nilLiteral: ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 - line:27:57] names=nilLiteral
                              (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:57 - line:27:57]))))))))))
            (paren_expr type='(String) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:67 - line:27:79] trailing-closure
              (function_conversion_expr implicit type='(String) throws -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:67 - line:27:79]
                (closure_expr type='(String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:67 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:67 - line:27:79] discriminator=1 captures=(path<noescape>) single-expression
                  (parameter_list
                    (parameter "$0" type='(String)'))
                  (binary_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:69 - line:27:76] nothrow
                    (dot_syntax_call_expr implicit type='(String, String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:74 - line:27:74] nothrow
                      (declref_expr type='(String.Type) -> (String, String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:74 - line:27:74] decl=Swift.(file).String.+ function_ref=unapplied specialized=no)
                      (type_expr implicit type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:74 - line:27:74] typerepr='String'))
                    (tuple_expr implicit type='(FileListExpanderImpl.Path, String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:69 - line:27:76]
                      (declref_expr type='FileListExpanderImpl.Path' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:69 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:69 - line:27:69] decl=main.(file).FileListExpanderImpl.func decl.path@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:25:26 function_ref=unapplied specialized=no)
                      (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:76 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:76 - line:27:76] decl=main.(file).FileListExpanderImpl.func decl.explicit closure discriminator=1.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:27:67 function_ref=unapplied specialized=no))))))))))
    (destructor_decl implicit "deinit" type='(FileListExpanderImpl) -> ()' interface type='(FileListExpanderImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='FileListExpanderImpl'))
      (brace_stmt))
    (func_decl implicit 'anonname=0x7fa5e3c35e60' type='(FileListExpanderImpl) -> () -> FileManager' interface type='(FileListExpanderImpl) -> () -> FileManager' access=internal final getter_for=fileManager
      (parameter_list
        (parameter "self" type='FileListExpanderImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='FileManager' decl=main.(file).FileListExpanderImpl.fileManager@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:9 direct_to_storage
            (declref_expr implicit type='FileListExpanderImpl' decl=main.(file).FileListExpanderImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:10:9 function_ref=unapplied specialized=no)))))
    (func_decl implicit 'anonname=0x7fa5e3c36400' type='(FileListExpanderImpl) -> () -> Shell' interface type='(FileListExpanderImpl) -> () -> Shell' access=internal final getter_for=shell
      (parameter_list
        (parameter "self" type='FileListExpanderImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt
          (member_ref_expr implicit type='Shell' decl=main.(file).FileListExpanderImpl.shell@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:11:9 direct_to_storage
            (declref_expr implicit type='FileListExpanderImpl' decl=main.(file).FileListExpanderImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/FileListExpander.swift:11:9 function_ref=unapplied specialized=no)))))))
(source_file
  (import_decl 'Foundation')
  (protocol "Shell"<Self : Shell> type='Shell.Protocol' access=internal @_fixed_layout
    (func_decl "runToStdout(command:args:)" type='<Self : Shell> (Self) -> (String, [String]) -> String' interface type='<τ_0_0 where τ_0_0 : Shell> (τ_0_0) -> (String, Array<String>) -> String' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "command" apiName=command type='String')
        (parameter "args" apiName=args type='[String]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String))))
    (func_decl "runToStderr(command:args:)" type='<Self : Shell> (Self) -> (String, [String]) -> String' interface type='<τ_0_0 where τ_0_0 : Shell> (τ_0_0) -> (String, Array<String>) -> String' access=internal
      (parameter_list
        (parameter "self" type='Self'))
      (parameter_list
        (parameter "command" apiName=command type='String')
        (parameter "args" apiName=args type='[String]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))))
  (class_decl "ShellImpl" type='ShellImpl.Type' access=internal @_fixed_layout inherits: Shell
    (func_decl "run(_:args:closure:)" type='(ShellImpl) -> (String, [String], (Process) -> ()) -> ()' interface type='(ShellImpl) -> (String, Array<String>, (Process) -> ()) -> ()' access=internal
      (parameter_list
        (parameter "self" type='ShellImpl'))
      (parameter_list
        (parameter "command" type='String')
        (parameter "args" apiName=args type='[String]')
        (parameter "closure" apiName=closure type='(Process) -> ()'))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='Process' 'task')
          (call_expr type='Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 - line:10:28] nothrow  arg_labels=
            (constructor_ref_call_expr type='() -> Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 - line:10:20] nothrow
              (declref_expr implicit type='(Process.Type) -> () -> Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 - line:10:20] decl=Foundation.(file).Process.init() function_ref=single specialized=no)
              (type_expr type='Process.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:20 - line:10:20] typerepr='Process'))
            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:27 - line:10:28])))

        (var_decl "task" type='Process' access=private let storage_kind=stored)

        (assign_expr
          (member_ref_expr type='@lvalue String?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:9 - line:11:14] decl=Foundation.(file).Process.launchPath
            (declref_expr type='Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:9 - line:11:9] decl=main.(file).ShellImpl.func decl.task@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:13 function_ref=unapplied specialized=no))
          (inject_into_optional implicit type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:27 - line:11:27]
            (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:11:27 - line:11:27] decl=main.(file).ShellImpl.func decl.command@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:9:16 function_ref=unapplied specialized=no)))
        (assign_expr
          (member_ref_expr type='@lvalue [String]?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:9 - line:12:14] decl=Foundation.(file).Process.arguments
            (declref_expr type='Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:9 - line:12:9] decl=main.(file).ShellImpl.func decl.task@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:13 function_ref=unapplied specialized=no))
          (inject_into_optional implicit type='[String]?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:26 - line:12:26]
            (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:26 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:12:26 - line:12:26] decl=main.(file).ShellImpl.func decl.args@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:9:33 function_ref=unapplied specialized=no)))
        (pattern_binding_decl
          (pattern_named type='String' 'commandString')
          (call_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:29 - line:13:69] nothrow  arg_labels=separator:
            (dot_syntax_call_expr type='(String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:29 - line:13:48] nothrow
              (declref_expr type='((Array<String>)) -> (String) -> String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:48 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:48 - line:13:48] decl=Swift.(file).Sequence.joined(separator:) [with (Array<String>)[[String]: specialize <String> (<Element> Array<Element>: Sequence module Swift)], IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], ArraySlice<String>] function_ref=single specialized=no)
              (paren_expr type='([String])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:29 - line:13:46]
                (binary_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:30 - line:13:42] nothrow
                  (declref_expr type='([String], [String]) -> [String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:40 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:40 - line:13:40] decl=Swift.(file).+ [with [String][Array<String>: specialize <String> (<Element> Array<Element>: RangeReplaceableCollection module Swift)], [String][Array<String>: specialize <String> (<Element> Array<Element>: RangeReplaceableCollection module Swift)], Array.Index[Int: Comparable module Swift], Int[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>[ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<String>>[IndexingIterator<ArraySlice<String>>: specialize <ArraySlice<String>, ArraySlice.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>, String, String, Array.Index[Int: Comparable module Swift], Int[Int: SignedInteger module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int[Int: SignedNumber module Swift], Int[Int: _ExpressibleByBuiltinIntegerLiteral module Swift], Int._DisabledRangeIndex, Array.Indices[Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: IndexableBase module Swift), Array.Indices: specialize <Int, Int.Stride, Int, Int, Int, Int._DisabledRangeIndex, Int._DisabledRangeIndex> (<Bound where Bound : _Strideable & Comparable, Bound.Stride : SignedInteger> CountableRange<Bound>: Sequence module Swift)], Int[Int: Comparable module Swift], IndexingIterator<CountableRange<Int>>[IndexingIterator<CountableRange<Int>>: specialize <CountableRange<Int>, Int, CountableRange<Int>, Int> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], Int, CountableRange<Int>, Int, IndexingIterator<Array<String>>[IndexingIterator<Array<String>>: specialize <Array<String>, Array.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], ArraySlice<String>[ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: IndexableBase module Swift), ArraySlice<String>: specialize <String> (<Element> ArraySlice<Element>: Sequence module Swift)], ArraySlice.Index[Int: Comparable module Swift], IndexingIterator<ArraySlice<String>>[IndexingIterator<ArraySlice<String>>: specialize <ArraySlice<String>, ArraySlice.Index, ArraySlice<String>, String> (<Elements : IndexableBase> IndexingIterator<Elements>: IteratorProtocol module Swift)], String, ArraySlice<String>, String, String] function_ref=unapplied specialized=no)
                  (tuple_expr implicit type='([String], [String])' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:30 - line:13:42]
                    (array_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:30 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:30 - line:13:38]
                      (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:31 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:31 - line:13:31] decl=main.(file).ShellImpl.func decl.command@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:9:16 function_ref=unapplied specialized=no))
                    (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:42 - line:13:42] decl=main.(file).ShellImpl.func decl.args@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:9:33 function_ref=unapplied specialized=no)))))
            (tuple_expr type='(separator: String)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:54 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:54 - line:13:69] names=separator
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:66 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:66 - line:13:66] encoding=utf8 value=" " builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))

        (var_decl "commandString" type='String' access=private let storage_kind=stored)

        (force_try_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:9 - line:14:106]
          (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:14 - line:14:106] throws  arg_labels=toFile:atomically:encoding:
            (dot_syntax_call_expr type='(String, Bool, String.Encoding) throws -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:14 - line:14:28] nothrow
              (declref_expr type='(String) -> (String, Bool, String.Encoding) throws -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:28 - line:14:28] decl=Foundation.(file).String.write(toFile:atomically:encoding:) function_ref=single specialized=no)
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:14 - line:14:14] decl=main.(file).ShellImpl.func decl.commandString@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:13:13 function_ref=unapplied specialized=no))
            (tuple_expr type='(toFile: String, atomically: Bool, encoding: String.Encoding)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:33 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:33 - line:14:106] names=toFile,atomically,encoding
              (string_literal_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:42 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:42 - line:14:42] encoding=utf8 value="/tmp/command" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
              (call_expr implicit type='Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 - line:14:70] nothrow  arg_labels=_builtinBooleanLiteral:
                (constructor_ref_call_expr implicit type='(Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 - line:14:70] nothrow
                  (declref_expr implicit type='(Bool.Type) -> (Int1) -> Bool' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 - line:14:70] decl=Swift.(file).Bool.init(_builtinBooleanLiteral:) function_ref=single specialized=no)
                  (type_expr implicit type='Bool.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 - line:14:70] typerepr='Bool'))
                (tuple_expr implicit type='(_builtinBooleanLiteral: Builtin.Int1)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 - line:14:70] names=_builtinBooleanLiteral
                  (boolean_literal_expr type='Builtin.Int1' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:70 - line:14:70] value=true)))
              (member_ref_expr type='String.Encoding' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:102 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:86 - line:14:102] decl=Foundation.(file).String.Encoding.utf8 direct_to_storage
                (member_ref_expr type='String.Encoding.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:93 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:86 - line:14:93] decl=Foundation.(file).String.Encoding
                  (type_expr type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:86 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:14:86 - line:14:86] typerepr='String'))))))
        (call_expr type='Void' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:9 - line:16:21] nothrow  arg_labels=
          (dot_syntax_call_expr type='() -> Void' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:9 - line:16:14] nothrow
            (declref_expr type='(Process) -> () -> Void' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:14 - line:16:14] decl=Foundation.(file).Process.launch() function_ref=single specialized=no)
            (declref_expr type='Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:9 - line:16:9] decl=main.(file).ShellImpl.func decl.task@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:13 function_ref=unapplied specialized=no))
          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:16:20 - line:16:21]))
        (call_expr type='Void' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:9 - line:17:28] nothrow  arg_labels=
          (dot_syntax_call_expr type='() -> Void' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:9 - line:17:14] nothrow
            (declref_expr type='(Process) -> () -> Void' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:14 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:14 - line:17:14] decl=Foundation.(file).Process.waitUntilExit() function_ref=single specialized=no)
            (declref_expr type='Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:9 - line:17:9] decl=main.(file).ShellImpl.func decl.task@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:10:13 function_ref=unapplied specialized=no))
          (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:27 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:17:27 - line:17:28]))))
    (func_decl "runToStdout(command:args:)" type='(ShellImpl) -> (String, [String]) -> String' interface type='(ShellImpl) -> (String, Array<String>) -> String' access=internal
      (conformance main.(file).Shell.runToStdout(command:args:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:4:10)
      (parameter_list
        (parameter "self" type='ShellImpl'))
      (parameter_list
        (parameter "command" apiName=command type='String')
        (parameter "args" apiName=args type='[String]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='Pipe' 'pipe')
          (call_expr type='Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 - line:21:25] nothrow  arg_labels=
            (constructor_ref_call_expr type='() -> Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 - line:21:20] nothrow
              (declref_expr implicit type='(Pipe.Type) -> () -> Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 - line:21:20] decl=Foundation.(file).Pipe.init() function_ref=single specialized=no)
              (type_expr type='Pipe.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:20 - line:21:20] typerepr='Pipe'))
            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:24 - line:21:25])))

        (var_decl "pipe" type='Pipe' access=private let storage_kind=stored)

        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 - line:22:61] nothrow  arg_labels=_:args:_:
          (dot_syntax_call_expr implicit type='(String, [String], (Process) -> ()) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 - line:22:9] nothrow
            (declref_expr type='(ShellImpl) -> (String, [String], (Process) -> ()) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 - line:22:9] decl=main.(file).ShellImpl.run(_:args:closure:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:9:10 function_ref=single specialized=no)
            (declref_expr implicit type='ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:9 - line:22:9] decl=main.(file).ShellImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:20:10 function_ref=unapplied specialized=no))
          (tuple_shuffle_expr implicit type='(String, args: [String], closure: (Process) -> ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:12 - line:22:61] elements=[0, 1, 2] variadic_sources=[]
            (tuple_expr type='(String, args: [String], (Process) -> ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:12 - line:22:61] trailing-closure names='',args,''
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:13 - line:22:13] decl=main.(file).ShellImpl.func decl.command@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:20:22 function_ref=unapplied specialized=no)
              (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:28 - line:22:28] decl=main.(file).ShellImpl.func decl.args@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:20:39 function_ref=unapplied specialized=no)
              (closure_expr type='(Process) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:34 - line:22:61] discriminator=0 captures=(pipe<noescape>) single-expression
                (parameter_list
                  (parameter "$0" type='(Process)'))
                (assign_expr
                  (member_ref_expr type='@lvalue Any?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:36 - line:22:39] decl=Foundation.(file).Process.standardOutput
                    (declref_expr type='Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:36 - line:22:36] decl=main.(file).ShellImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:34 function_ref=unapplied specialized=no))
                  (inject_into_optional implicit type='Any?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:56 - line:22:56]
                    (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:56 - line:22:56]
                      (declref_expr type='Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:56 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:22:56 - line:22:56] decl=main.(file).ShellImpl.func decl.pipe@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:13 function_ref=unapplied specialized=no))))))))
        (return_stmt
          (force_value_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:109 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 - line:23:109]
            (call_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 - line:23:108] nothrow  arg_labels=data:encoding:
              (constructor_ref_call_expr type='(Data, String.Encoding) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 - line:23:16] nothrow
                (declref_expr implicit type='(String.Type) -> (Data, String.Encoding) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 - line:23:16] decl=Foundation.(file).String.init(data:encoding:) function_ref=single specialized=no)
                (type_expr type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:16 - line:23:16] typerepr='String'))
              (tuple_expr type='(data: Data, encoding: String.Encoding)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:22 - line:23:108] names=data,encoding
                (call_expr type='Data' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:29 - line:23:75] nothrow  arg_labels=
                  (dot_syntax_call_expr type='() -> Data' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:29 - line:23:55] nothrow
                    (declref_expr type='(FileHandle) -> () -> Data' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:55 - line:23:55] decl=Foundation.(file).FileHandle.readDataToEndOfFile() function_ref=single specialized=no)
                    (member_ref_expr type='FileHandle' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:29 - line:23:34] decl=Foundation.(file).Pipe.fileHandleForReading
                      (declref_expr type='Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:29 - line:23:29] decl=main.(file).ShellImpl.func decl.pipe@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:21:13 function_ref=unapplied specialized=no)))
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:74 - line:23:75]))
                (member_ref_expr type='String.Encoding' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:104 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:88 - line:23:104] decl=Foundation.(file).String.Encoding.utf8 direct_to_storage
                  (member_ref_expr type='String.Encoding.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:95 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:88 - line:23:95] decl=Foundation.(file).String.Encoding
                    (type_expr type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:88 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:23:88 - line:23:88] typerepr='String')))))))))
    (func_decl "runToStderr(command:args:)" type='(ShellImpl) -> (String, [String]) -> String' interface type='(ShellImpl) -> (String, Array<String>) -> String' access=internal
      (conformance main.(file).Shell.runToStderr(command:args:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:5:10)
      (parameter_list
        (parameter "self" type='ShellImpl'))
      (parameter_list
        (parameter "command" apiName=command type='String')
        (parameter "args" apiName=args type='[String]'))
      (result
        (type_ident
          (component id='String' bind=Swift.(file).String)))
      (brace_stmt
        (pattern_binding_decl
          (pattern_named type='Pipe' 'pipe')
          (call_expr type='Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 - line:27:25] nothrow  arg_labels=
            (constructor_ref_call_expr type='() -> Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 - line:27:20] nothrow
              (declref_expr implicit type='(Pipe.Type) -> () -> Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 - line:27:20] decl=Foundation.(file).Pipe.init() function_ref=single specialized=no)
              (type_expr type='Pipe.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:20 - line:27:20] typerepr='Pipe'))
            (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:24 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:24 - line:27:25])))

        (var_decl "pipe" type='Pipe' access=private let storage_kind=stored)

        (call_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 - line:28:60] nothrow  arg_labels=_:args:_:
          (dot_syntax_call_expr implicit type='(String, [String], (Process) -> ()) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 - line:28:9] nothrow
            (declref_expr type='(ShellImpl) -> (String, [String], (Process) -> ()) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 - line:28:9] decl=main.(file).ShellImpl.run(_:args:closure:)@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:9:10 function_ref=single specialized=no)
            (declref_expr implicit type='ShellImpl' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:9 - line:28:9] decl=main.(file).ShellImpl.func decl.self@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:26:10 function_ref=unapplied specialized=no))
          (tuple_shuffle_expr implicit type='(String, args: [String], closure: (Process) -> ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:12 - line:28:60] elements=[0, 1, 2] variadic_sources=[]
            (tuple_expr type='(String, args: [String], (Process) -> ())' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:12 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:12 - line:28:60] trailing-closure names='',args,''
              (declref_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:13 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:13 - line:28:13] decl=main.(file).ShellImpl.func decl.command@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:26:22 function_ref=unapplied specialized=no)
              (declref_expr type='[String]' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:28 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:28 - line:28:28] decl=main.(file).ShellImpl.func decl.args@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:26:39 function_ref=unapplied specialized=no)
              (closure_expr type='(Process) -> ()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:34 - line:28:60] discriminator=0 captures=(pipe<noescape>) single-expression
                (parameter_list
                  (parameter "$0" type='(Process)'))
                (assign_expr
                  (member_ref_expr type='@lvalue Any?' accessKind=write location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:39 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:36 - line:28:39] decl=Foundation.(file).Process.standardError
                    (declref_expr type='Process' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:36 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:36 - line:28:36] decl=main.(file).ShellImpl.func decl.explicit closure discriminator=0.$0@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:34 function_ref=unapplied specialized=no))
                  (inject_into_optional implicit type='Any?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:55 - line:28:55]
                    (erasure_expr implicit type='Any' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:55 - line:28:55]
                      (declref_expr type='Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:28:55 - line:28:55] decl=main.(file).ShellImpl.func decl.pipe@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:13 function_ref=unapplied specialized=no))))))))
        (return_stmt
          (force_value_expr type='String' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:109 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 - line:29:109]
            (call_expr type='String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 - line:29:108] nothrow  arg_labels=data:encoding:
              (constructor_ref_call_expr type='(Data, String.Encoding) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 - line:29:16] nothrow
                (declref_expr implicit type='(String.Type) -> (Data, String.Encoding) -> String?' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 - line:29:16] decl=Foundation.(file).String.init(data:encoding:) function_ref=single specialized=no)
                (type_expr type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:16 - line:29:16] typerepr='String'))
              (tuple_expr type='(data: Data, encoding: String.Encoding)' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:22 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:22 - line:29:108] names=data,encoding
                (call_expr type='Data' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:29 - line:29:75] nothrow  arg_labels=
                  (dot_syntax_call_expr type='() -> Data' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:29 - line:29:55] nothrow
                    (declref_expr type='(FileHandle) -> () -> Data' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:55 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:55 - line:29:55] decl=Foundation.(file).FileHandle.readDataToEndOfFile() function_ref=single specialized=no)
                    (member_ref_expr type='FileHandle' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:34 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:29 - line:29:34] decl=Foundation.(file).Pipe.fileHandleForReading
                      (declref_expr type='Pipe' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:29 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:29 - line:29:29] decl=main.(file).ShellImpl.func decl.pipe@/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:27:13 function_ref=unapplied specialized=no)))
                  (tuple_expr type='()' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:74 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:74 - line:29:75]))
                (member_ref_expr type='String.Encoding' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:104 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:88 - line:29:104] decl=Foundation.(file).String.Encoding.utf8 direct_to_storage
                  (member_ref_expr type='String.Encoding.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:95 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:88 - line:29:95] decl=Foundation.(file).String.Encoding
                    (type_expr type='String.Type' location=/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:88 range=[/Users/palfvin/workspace/Swift2Kotlin/Swift2Kotlin/Utilities/Shell.swift:29:88 - line:29:88] typerepr='String')))))))))
    (destructor_decl implicit "deinit" type='(ShellImpl) -> ()' interface type='(ShellImpl) -> () -> ()' access=internal @objc
      (parameter_list
        (parameter "self" type='ShellImpl'))
      (brace_stmt))
    (constructor_decl implicit "init()" type='(ShellImpl.Type) -> () -> ShellImpl' access=internal designated
      (parameter_list
        (parameter "self" type='ShellImpl'))
      (parameter_list)
      (brace_stmt
        (return_stmt)))))
